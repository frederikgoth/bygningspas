{"version":3,"sources":["components/Building/Building.js","components/BuildingList/BuildingList.js","components/SearchBar/SearchBar.js","components/App/App.js","index.js","registerServiceWorker.js"],"names":["Building","className","src","this","props","building","imageSrc","alt","address","area","floors","React","Component","BuildingList","buildings","map","SearchBar","state","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","placeholder","onChange","App","console","log","ReactDOM","render","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error"],"mappings":"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","file":"static/js/main.3ce2639d.chunk.js","sourcesContent":["import React from 'react';\nimport './Building.css';\n\nclass Building extends React.Component {\n  render() {\n    return (\n      <div className=\"Building\">\n        <div className=\"image-container\">\n          <img src={this.props.building.imageSrc} alt=''/>\n        </div>\n        <h2>{this.props.building.address}</h2>\n        <div className=\"adress-information\">\n          <div className=\"Building-address\">\n            <p>{this.props.building.area}</p>\n            <p>{this.props.building.floors}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Building;","import React from 'react';\nimport './BuildingList.css';\n\nimport Building from '../Building/Building';\n\nclass BuildingList extends React.Component {\n  render() {\n    return (\n      <div className=\"BuildingList\">\n        {\n          this.props.buildings.map(building => {\n            return <Building building={building} />\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default BuildingList;","import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    \n\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count'\n    };\n  }\n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';\n    }\n    return '';\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({sortBy: sortByOption});\n  }\n\n  handleTermChange(event) {\n    this.setState({term: event.target.value});\n  }\n\n  handleLocationChange(event) {\n    this.setState({location: event.target.value});\n  }\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n\n    event.preventDefault();\n  }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return (<li className={this.getSortByClass(sortByOptionValue)}\n                  key={sortByOptionValue}\n                  onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n                {sortByOption}\n             </li>);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        {/*\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        */}\n        <div className=\"SearchBar-fields\">\n          <input placeholder=\"Vejnavn\" onChange={this.handleTermChange} />\n          <input placeholder=\"Nummer\" onChange={this.handleLocationChange}/>\n          <input placeholder=\"Postnummer\" onChange={this.handleLocationChange}/>\n        </div>\n        <div className=\"SearchBar-submit\">\n          <a onClick={this.handleSearch}>SÃ¸g</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;","import React from 'react';\nimport './App.css';\nimport BuildingList from '../BuildingList/BuildingList';\nimport SearchBar from '../SearchBar/SearchBar';\n\nconst building = {\n  imageSrc: 'https://historiskehuse.dk/wp-content/uploads/2020/09/Hus-foto-test-20.06.2019-600x400-1.jpg',\n  address: 'Husvej 26, 4000',\n  area: '120m2',\n  floors: '2 etager',\n};\n\nconst buildings = [\n  building\n];\n\nclass App extends React.Component {\n  searchYelp(term, location, sortBy) {\n    console.log(`Searching Yelp with ${term}, ${location}, ${sortBy}`);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Bygningspas</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BuildingList buildings={buildings} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}