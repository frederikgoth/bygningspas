{"version":3,"sources":["items/items.js","util/firebase.js","components/SearchBar/SearchBar.js","components/BuildingView/BuildingView.js","components/Building/RoofTypeImage/Saddel.jpg","components/Building/RoofTypeImage/Valm.jpg","components/Building/RoofTypeImage/Skråt.jpg","components/Building/RoofTypeImage/Fladt.jpg","components/Building/RoofTypeImage/RoofTypeImage.js","components/Building/FoundationTypeImage/Linje.jpg","components/Building/FoundationTypeImage/Punkt.jpg","components/Building/FoundationTypeImage/Stribe.jpg","components/Building/FoundationTypeImage/FoundationTypeImage.js","components/Download/Download.js","components/Results/Results.js","components/ResultsSimple/ResultsSimple.js","components/MaterialList/updateButton.js","components/MaterialList/MaterialList.js","components/Building/Building.js","components/Material/Material.js","components/Simple/Simple.js","functions/simpleFunctions.js","components/Advanced/Advanced.js","components/App/App.js","index.js"],"names":["items","id","name","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","database","SearchBar","props","handleOnAddressSelect","item","address","ref","on","snapshot","allInfo","forEach","snap","push","val","setState","addressInfo","console","log","state","handleOnSelect","area","floors","built","location","energy","onChange","handleOnFocus","addressSelect","addressSelected","bind","this","building","goBack","className","style","width","margin","placeholder","onSelect","onFocus","styling","zIndex","autoFocus","onClick","React","Component","BuildingView","streetView","position","lat","lng","pov","heading","pitch","zoom","height","backgroundColor","streetViewPanoramaOptions","RoofTypeImage","roofType","src","saddel","fladt","skråt","valm","FoundationTypeImage","foundationType","linje","punkt","stribe","Results","sumMaterials","removeMissing","getLabels","getData","array","newArray","Beton","Træ","Skifer","Tegl","Isolering","Pap","Mursten","x","totalArea","wallArea","Math","floor","sqrt","roofArea","wallMaterialAmount","materials","wall","map","wallMaterialAmount2","roofMaterialAmount","roof","roofMaterialAmount2","floorMaterialAmount","floorMaterialAmount2","foundationMaterialAmount","foundation","foundationMaterialAmount2","merged","concat","apply","mergedMaterials","mergedMaterialAmount","chartData","data","labels","datasets","label","borderColor","borderWidth","options","maintainAspectRatio","ResultsSimple","chartLabels","wallS","roofS","floorS","foundationS","UpdateButton","updateData","update","then","_","length","Options","pOptions","MaterialList","wallM","wallP","roofM","roofP","floorM","floorP","foundationM","foundationP","advanced","addWallItem","addWallMaterial","addWallPercentage","removeWallItem","addSimpleWall","addRoofItem","addRoofMaterial","addRoofPercentage","removeRoofItem","addSimpleRoof","addFloorItem","addFloorMaterial","addFloorPercentage","removeFloorItem","addSimpleFloor","addFoundationItem","addFoundationMaterial","addFoundationPercentage","removeFoundationItem","addSimpleFoundation","toggleAdvanced","toggleSimple","isAbove100","value","slice","number","wallAbove100","reduce","a","floorAbove100","roofAbove100","foundationAbove100","roofTypeOptions","foundationTypeOptions","Building","handleAreaChange","handleHeightChange","handleRoofTypeSelect","handleFoundationTypeSelect","inputArea","target","onAreaChange","inputHeight","onFloorHeightChange","inputRoofType","onRoofTypeChange","inputFoundationType","onFoundationTypeChange","floorHeight","perimeter","windowArea","age","selectAddress","selectEdit","pattern","Material","handleSimpleClick","handleAdvancedClick","handleBackClick","onChange1","onChange2","wallOptions","roofOptions","floorOptions","foundationOptions","Simple","wallMaterial","roofMaterial","floorMaterial","foundationMaterial","handleWallSelect","handleRoofSelect","handleFloorSelect","handleFoundationSelect","handleClick","newMaterial","wallMaterials","material","simpleWall","roofMaterials","simpleRoof","floorMaterials","simpleFloor","foundationMaterials","simpleFoundation","wallData","roofData","floorData","foundationData","allData","scales","yAxes","stacked","ticks","beginAtZero","xAxes","Advanced","App","imageSrc","notes","changeAddress","changeArea","changeEdit","changeBack","changeFloorHeight","changeRoofType","changeFoundationType","newAddress","newArea","newFloors","newBuilt","selectedAddress","newLocation","newGoBack","newFloorHeight","newRoofType","newFoundationType","newEnergy","newEdit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d6dc350.chunk.js","sourcesContent":["const items = [\r\n    {\r\n      id: 0,\r\n      name: \"Birkevej\",\r\n      //area: '20',\r\n      //imageSrc: 'https://historiskehuse.dk/wp-content/uploads/2020/09/Hus-foto-test-20.06.2019-600x400-1.jpg',\r\n      //floors: '2',\r\n      //built: '1978',\r\n      //energy: ['D', 3500, 20100, 5250, 'Montage af nye solceller'],\r\n      //location: [55.6099889, 12.3687678, -160, 0],\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Vibevej\",\r\n      //area: '127',\r\n      //imageSrc: 'https://kfs-boligbyg.dk/wp-content/uploads/2018/03/1_artikel_flere_koeber_et_indflytningsklart_hus.jpg',\r\n      //floors: '2',\r\n      //built: '1999',\r\n      //energy: ['C', 3500, 20100, 5250, 'Montage af nye solceller'],\r\n      //location: [57.0294762, 9.9319315, -65, 0],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Vinkelvej\",\r\n      //area: '800',\r\n      //imageSrc: 'https://www.nybolig.dk/-/media/estate/billeder/estate-content/016koeb-insurance-min-jpg.jpg',\r\n      //floors: '7',\r\n      //built: '1878',\r\n      //energy: ['E', 3500, 20100, 5250, 'Montage af nye solceller'],\r\n      //location: [55.8129262, 12.3656645, -65, 0],\r\n    },\r\n    /*{\r\n      id: 3,\r\n      name: \"Engvej\",\r\n      area: '2',\r\n      imageSrc: 'https://www.huscompagniet.dk/dfsmedia/35a7daa9b85a4a16a2f4208b493b8de1/20017-50057',\r\n      floors: '1',\r\n      built: '1958',\r\n      energy: ['D', 3500, 20100, 5250, 'Montage af nye solceller'],\r\n      location: [55.6533113, 12.6313282, -95, 10],\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Vestergade\",\r\n      area: '87',\r\n      imageSrc: 'https://selvmaegler.dk/images/userimage/1593098619_01_hus_005.jpg',\r\n      floors: '1',\r\n      built: '1923',\r\n      energy: ['E', 3500, 20100, 5250, 'Montage af nye solceller'],\r\n      location: [56.1570189, 10.1983838, -195, 20],\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Kirkevej\",\r\n      area: '234',\r\n      imageSrc: 'https://bolignyheder.boligsiden.dk/wp-content/uploads/2019/05/Vedb%C3%A6k-Strandvej-328_Home-1024x683.jpg',\r\n      floors: '2',\r\n      built: '1995',\r\n      energy: ['B', 3500, 20100, 5250, 'Montage af nye solceller'],\r\n      location: [55.9750104, 12.3457449, -180, 0],\r\n      \r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Industrivej\",\r\n      area: '174',\r\n      imageSrc: 'https://www.tv2fyn.dk/files/styles/fixed_width_medium_2x/public/media/2020/40/billigt_hus_0.jpg?itok=o8VzFkzY',\r\n      floors: '1',\r\n      built: '1964',\r\n      energy: ['A', 3500, 20100, 5250, 'Montage af nye solceller'],\r\n      location: [55.6441577, 12.118778, -20, 15],\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Elmevej\",\r\n      area: '80',\r\n      imageSrc: 'https://www.bernt-nielsen.dk/wp-content/uploads/2020/09/bernt-nielsen-h-hus1500x630.jpg',\r\n      floors: '1',\r\n      built: '1939',\r\n      energy: ['C', 3500, 20100, 5250, 'Montage af nye solceller'],\r\n      location: [56.4471287, 10.0455847, -115, 15],\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Stationsvej\",\r\n      area: '133',\r\n      imageSrc: 'https://finans.dk/incoming/image/11357205/iokakl/ALTERNATES/f_b-5_3/okoestjylland.jpeg',\r\n      floors: '2',\r\n      built: '1911',\r\n      energy: ['D', 3500, 20100, 5250, 'Montage af nye solceller'],\r\n      location: [55.8177239, 12.4723253, 160, 0],\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Skovvej\",\r\n      area: '295',\r\n      imageSrc: 'https://i.boliga.org/dk/max/1709/1709468.jpg',\r\n      floors: '100',\r\n      built: '1926',\r\n      energy: ['A', 3500, 20100, 5250, 'Montage af nye solceller'],\r\n      location: [55.7650745, 12.5476359, -90, 0],\r\n    } */\r\n  ]; \r\n\r\n  export default items","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDzIX2onzsXrEtuNmovSkCH6qDMWYWW_4I\",\r\n    authDomain: \"bygningspas.firebaseapp.com\",\r\n    databaseURL: \"https://bygningspas-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"bygningspas\",\r\n    storageBucket: \"bygningspas.appspot.com\",\r\n    messagingSenderId: \"1056938501952\",\r\n    appId: \"1:1056938501952:web:1f97e62acb976a11babca5\",\r\n    measurementId: \"G-335D61C3DJ\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics()\r\n  export const db = firebase.database();\r\n\r\nexport default firebase;","import React from 'react';\nimport './SearchBar.css';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\nimport items from '../../items/items'\nimport { db } from \"../../util/firebase\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addressSelect: '',\n                  addressSelected: false,\n                  addressInfo: []}\n\n    this.handleOnAddressSelect = this.handleOnAddressSelect.bind(this)\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleOnFocus = this.handleOnFocus.bind(this);\n  }\n\n  handleOnAddressSelect = (item) => {\n    const address = item.name;\n    db.ref(address).on(\"value\", snapshot => {\n        let allInfo = [];\n        snapshot.forEach(snap => {\n          allInfo.push(snap.val());\n        });\n        this.setState({ addressInfo: allInfo });\n        console.log(this.state.addressInfo)\n      });\n  }\n\n  handleOnSelect = () => {\n    const address = this.state.addressInfo[7];\n    const area = this.state.addressInfo[0];\n    const floors = this.state.addressInfo[3];\n    const built = this.state.addressInfo[1];\n    const selectAddress = true;\n    const location = this.state.addressInfo[5];\n    const goBack = false;\n    const floorHeight = 2.5;\n    const roofType = 'Saddel';\n    const foundationType = 'Linje';\n    const energy = this.state.addressInfo[2];\n    this.props.onChange(address,area,floors,built,selectAddress,location,goBack,floorHeight,roofType,foundationType,energy)\n  }\n\n  handleOnFocus = () => {\n    console.log(\"Focused\");\n  }\n\n  render() {\n    if (this.props.building.goBack === true) {\n    return (\n      <div className='SearchPage'>\n        <div className='PageHeader'>\n          <h1>Bygningspas</h1>\n        </div>\n        <div className=\"SearchBar\">\n          <header className=\"SearchHeader\">\n            <div className=\"SearchBar-fields\" style={{ width: 200, margin: 20 }}>\n              <ReactSearchAutocomplete\n              placeholder=\"Adresse\" \n              items = {items}\n              onSelect={this.handleOnAddressSelect}\n              onFocus={this.handleOnFocus}\n              styling={{ zIndex: 2 }} // To display it on top of the search box below\n              autoFocus\n            />\n            <button onClick={this.handleOnSelect}>Søg</button>\n            </div>\n          </header>\n        </div>\n      </div>\n      \n    );\n    } else {\n      return(\n        <div></div>\n      )\n    }\n  }\n}\n\nexport default SearchBar;","import React from 'react';\r\nimport ReactStreetview from 'react-streetview';\r\n\r\nclass BuildingView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        // see https://developers.google.com/maps/documentation/javascript\r\n        const googleMapsApiKey = 'AIzaSyCwIG4lbTXNcDjbNAetvu3XMiiUYJm78Tc';\r\n\r\n        // see https://developers.google.com/maps/documentation/javascript/3.exp/reference#StreetViewPanoramaOptions\r\n        const streetView = {\r\n            position: {lat: this.props.building.location[0], lng: this.props.building.location[1]},\r\n            pov: {heading: this.props.building.location[2], pitch: this.props.building.location[3]},\r\n            zoom: 1\r\n        };\r\n\r\n        return (\r\n            <div style={{\r\n                width: '550px',\r\n                height: '550px',\r\n                backgroundColor: '#eeeeee'\r\n            }}>\r\n                <ReactStreetview\r\n                    apiKey={googleMapsApiKey}\r\n                    streetViewPanoramaOptions={streetView}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default BuildingView","export default __webpack_public_path__ + \"static/media/Saddel.6c251b99.jpg\";","export default __webpack_public_path__ + \"static/media/Valm.6d7431d0.jpg\";","export default __webpack_public_path__ + \"static/media/Skråt.90771ca1.jpg\";","export default __webpack_public_path__ + \"static/media/Fladt.8f7a7c76.jpg\";","import React from 'react'\r\nimport './RoofTypeImage.css'\r\nimport saddel from './Saddel.jpg'\r\nimport valm from './Valm.jpg'\r\nimport skråt from './Skråt.jpg'\r\nimport fladt from './Fladt.jpg'\r\n\r\nclass RoofTypeImage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.roofType === 'Saddel') {\r\n            return <img src={saddel}/>\r\n        } else if (this.props.roofType === 'Fladt') {\r\n            return <img src={fladt}/>\r\n        } else if (this.props.roofType === 'Skråt') {\r\n            return <img src={skråt}/>\r\n        } else if (this.props.roofType === 'Valm') {\r\n            return <img src={valm}/>\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default RoofTypeImage","export default __webpack_public_path__ + \"static/media/Linje.81eec288.jpg\";","export default __webpack_public_path__ + \"static/media/Punkt.272f955c.jpg\";","export default __webpack_public_path__ + \"static/media/Stribe.0febb20f.jpg\";","import React from 'react'\r\nimport './FoundationTypeImage.css'\r\nimport linje from './Linje.jpg'\r\nimport punkt from './Punkt.jpg'\r\nimport stribe from './Stribe.jpg'\r\n\r\nclass FoundationTypeImage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.foundationType === 'Linje') {\r\n            return <img src={linje}/>\r\n        } else if (this.props.foundationType === 'Punkt') {\r\n            return <img src={punkt}/>\r\n        } else if (this.props.foundationType === 'Stribe') {\r\n            return <img src={stribe}/>\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default FoundationTypeImage","import React from 'react'\r\n\r\nclass Download extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n      \r\n      const defaultFileType = \"json\"; \r\n      this.fileNames = {\r\n          json: \"states.json\",\r\n        csv: \"states.csv\",\r\n        text: \"states.txt\"\r\n      }    \r\n      this.state = {\r\n        fileType: defaultFileType,\r\n        fileDownloadUrl: null,\r\n        status: \"\",\r\n          data: [\r\n            this.props.building\r\n        ]\r\n      }\r\n        this.changeFileType = this.changeFileType.bind(this);\r\n        this.download = this.download.bind(this);\r\n        this.openFile = this.openFile.bind(this);\r\n    }\r\n    \r\n    changeFileType (event) {\r\n      const value = event.target.value;\r\n        this.setState({fileType: value});\r\n    }\r\n    \r\n    download (event) {\r\n      event.preventDefault();\r\n        // Prepare the file\r\n      let output;\r\n      if (this.state.fileType === \"json\") {\r\n          output = JSON.stringify({states: this.state.data}, \r\n            null, 4);\r\n      } else if (this.state.fileType === \"csv\"){\r\n        // Prepare data:\r\n        let contents = [];\r\n        contents.push ([\"State\", \"Electors\"]);\r\n        this.state.data.forEach(row => {\r\n            contents.push([row.state, row.electors])\r\n        });\r\n        output = this.makeCSV(contents);\r\n      } else if (this.state.fileType === \"text\"){\r\n        // Prepare data:\r\n        output = '';\r\n        this.state.data.forEach(row => {\r\n            output += `${row.state}: ${row.electors}\\n`\r\n        });\r\n      }\r\n      // Download it\r\n      const blob = new Blob([output]);\r\n      const fileDownloadUrl = URL.createObjectURL(blob);\r\n      this.setState ({fileDownloadUrl: fileDownloadUrl}, \r\n        () => {\r\n          this.dofileDownload.click(); \r\n          URL.revokeObjectURL(fileDownloadUrl);  // free up storage--no longer needed.\r\n          this.setState({fileDownloadUrl: \"\"})\r\n      })    \r\n    }\r\n  \r\n    /**\r\n     * Function returns the content as a CSV string\r\n     * See https://stackoverflow.com/a/20623188/64904\r\n     * Parameter content:\r\n     *   [\r\n     *.     [header1, header2],\r\n     *.     [data1, data2]\r\n     *.     ...\r\n     *.  ]\r\n     * NB Does not support Date items\r\n     */\r\n    makeCSV (content) {\r\n        let csv = '';\r\n      content.forEach(value => {\r\n          value.forEach((item, i) => {\r\n          let innerValue = item === null ? '' : item.toString();\r\n          let result = innerValue.replace(/\"/g, '\"\"');\r\n          if (result.search(/(\"|,|\\n)/g) >= 0) {\r\n            result = '\"' + result + '\"'\r\n          }\r\n          if (i > 0) {csv += ','}\r\n          csv += result;\r\n        })\r\n          csv += '\\n';\r\n        })\r\n      return csv\r\n    }\r\n    \r\n    /**\r\n     * Process the file within the React app. We're NOT uploading it to the server!\r\n     */\r\n    openFile(evt) {\r\n        let status = []; // Status output\r\n        const fileObj = evt.target.files[0];\r\n        const reader = new FileReader();\r\n            \r\n        let fileloaded = e => {\r\n          // e.target.result is the file's content as text\r\n          const fileContents = e.target.result;\r\n          status.push(`File name: \"${fileObj.name}\". Length: ${fileContents.length} bytes.`);\r\n          // Show first 80 characters of the file\r\n          const first80char = fileContents.substring(0,80);\r\n          status.push (`First 80 characters of the file:\\n${first80char}`)\r\n          this.setState ({status: status.join(\"\\n\")})\r\n        }\r\n        \r\n        // Mainline of the method\r\n        fileloaded = fileloaded.bind(this);\r\n        reader.onload = fileloaded;\r\n        reader.readAsText(fileObj);  \r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <div>\r\n          <h2>2020 US Swing States</h2>\r\n          <table>\r\n            <thead>\r\n            <tr><th>State</th><th>Electors</th></tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.data.map(item => (\r\n              <tr key={item.state}>\r\n                <td>{item.state}</td><td>{item.electors}</td>\r\n              </tr>\r\n            ))}          \r\n              </tbody>\r\n          </table>\r\n          <form>\r\n            <span className=\"mr\">File type:</span>\r\n            <select name=\"fileType\"\r\n              onChange={this.changeFileType}\r\n              value={this.state.fileType}\r\n              className=\"mr\"\r\n            >\r\n              <option value=\"csv\">CSV</option>\r\n              <option value=\"json\">JSON</option>\r\n              <option value=\"text\">Text</option>\r\n            </select>\r\n            \r\n            <button onClick={this.download}>\r\n              Download the file!\r\n            </button>\r\n            \r\n            <a className=\"hidden\"\r\n               download={this.fileNames[this.state.fileType]}\r\n               href={this.state.fileDownloadUrl}\r\n               ref={e=>this.dofileDownload = e}\r\n            >download it</a>\r\n            \r\n            <p><button onClick={this.upload}>\r\n              Upload a file!\r\n            </button> Only json, csv, and text files are ok.</p>\r\n  \r\n            <input type=\"file\" className=\"hidden\"\r\n              multiple={false}\r\n              accept=\".json,.csv,.txt,.text,application/json,text/csv,text/plain\"\r\n              onChange={evt => this.openFile(evt)}\r\n              ref={e=>this.dofileUpload = e}\r\n            />\r\n          </form>\r\n          <pre className=\"status\">{this.state.status}</pre>\r\n        </div>\r\n        )\r\n    }\r\n  }\r\n\r\n  export default Download","import React from 'react'\r\nimport './Results.css'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nclass Results extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.sumMaterials = this.sumMaterials.bind(this)\r\n        this.removeMissing = this.removeMissing.bind(this)\r\n        this.getLabels = this.getLabels.bind(this)\r\n        this.getData = this.getData.bind(this)\r\n    }\r\n\r\n    sumMaterials(array) {\r\n        const newArray = []\r\n        const Beton = ['Beton',0]\r\n        const Træ = ['Træ',0]\r\n        const Skifer = ['Skifer',0]\r\n        const Tegl = ['Tegl',0]\r\n        const Isolering = ['Isolering',0]\r\n        const Pap = ['Pap',0]\r\n        const Mursten = ['Mursten',0]\r\n\r\n        for (var x of array) {\r\n            if (x[0] === 'Træ') {\r\n                Træ[1] = Træ[1]+x[1]\r\n            }\r\n            if (x[0] === 'Beton') {\r\n                Beton[1] = Beton[1]+x[1]\r\n            }\r\n            if (x[0] === 'Skifer') {\r\n                Skifer[1] = Skifer[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tegl') {\r\n                Tegl[1] = Tegl[1]+x[1]\r\n            }\r\n            if (x[0] === 'Isolering') {\r\n                Isolering[1] = Isolering[1]+x[1]\r\n            }\r\n            if (x[0] === 'Pap') {\r\n                Pap[1] = Pap[1]+x[1]\r\n            }\r\n            if (x[0] === 'Mursten') {\r\n                Mursten[1] = Mursten[1]+x[1]\r\n            }        \r\n        }\r\n        newArray.push(Beton) \r\n        newArray.push(Træ)\r\n        newArray.push(Skifer)\r\n        newArray.push(Tegl)\r\n        newArray.push(Isolering)\r\n        newArray.push(Pap)\r\n        newArray.push(Mursten)\r\n        return newArray\r\n    }\r\n\r\n    removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n\r\n    getLabels(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[0])\r\n        } return newArray\r\n    }\r\n\r\n    getData(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[1])\r\n        } return newArray\r\n    }\r\n\r\n    render() {\r\n\r\n         //-------------------------------------VARIABLES-----------------------------------------------\r\n         //#region\r\n         const area = this.props.building.area\r\n         const floors = this.props.building.floors\r\n         const totalArea = area*floors\r\n         const perimeter = Math.floor(Math.sqrt(area)*4)\r\n         const wallArea = perimeter*(floors*2.5)\r\n         const roofArea = Math.floor(area*1.1)\r\n         const windowArea = Math.floor(wallArea*0.15)\r\n         //#endregion\r\n         \r\n         //-----------------------------------MATERIAL AMOUNTS------------------------------------------\r\n         //#region\r\n         const wallMaterialAmount = this.props.materials.wall.map((item) => <li>{item[0]}: {(item[1]*wallArea*0.5/100)}m3</li>)\r\n         const wallMaterialAmount2 = this.props.materials.wall.map((item) => [item[0],item[1]*wallArea*0.5/100])\r\n\r\n         const roofMaterialAmount = this.props.materials.roof.map((item) => <li>{item[0]}: {(item[1]*roofArea*0.5/100)}m3</li>)\r\n         const roofMaterialAmount2 = this.props.materials.roof.map((item) => [item[0],item[1]*roofArea*0.5/100])\r\n\r\n         const floorMaterialAmount = this.props.materials.floor.map((item) => <li>{item[0]}: {(item[1]*totalArea*0.5/100)}m3</li>)\r\n         const floorMaterialAmount2 = this.props.materials.floor.map((item) => [item[0],item[1]*totalArea*0.5/100])\r\n\r\n         const foundationMaterialAmount = this.props.materials.foundation.map((item) => <li>{item[0]}: {(item[1]*area*0.5/100)}m3</li>)\r\n         const foundationMaterialAmount2 = this.props.materials.foundation.map((item) => [item[0],item[1]*area*0.5/100])\r\n\r\n         const merged = [].concat.apply([], [wallMaterialAmount2,roofMaterialAmount2,floorMaterialAmount2,foundationMaterialAmount2]);\r\n         const mergedMaterials = this.removeMissing(this.sumMaterials(merged))\r\n\r\n         const mergedMaterialAmount = mergedMaterials.map((item) => <li>{item[0]}: {item[1]}m3</li>)\r\n         //#endregion\r\n\r\n         //---------------------------------------CHART-------------------------------------------------\r\n         //#region \r\n         const chartData = this.getData(mergedMaterials)\r\n         const chartLabels = this.getLabels(mergedMaterials)\r\n\r\n         const data = {\r\n            labels: chartLabels,\r\n            datasets: [\r\n              {\r\n                label: '',\r\n                data: chartData,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                  'rgba(153, 102, 255, 0.2)',\r\n                  'rgba(255, 159, 64, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                  'rgba(255, 159, 64, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n          \r\n          const options = {\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }\r\n        //#endregion\r\n\r\n        return(\r\n            <div>\r\n                <h1 className='ResultHeader'>Resultater</h1>\r\n                <div className='ResultContainer'>\r\n                    <div className='aResult'>\r\n                        <p>Ydervægge</p>\r\n                        {wallMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Tag</p>\r\n                        {roofMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Gulve</p>\r\n                        {floorMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Fundament</p>\r\n                        {foundationMaterialAmount}\r\n                    </div>\r\n                </div>\r\n                <div className='SumContainer'>\r\n                    <div className='SumResult'>\r\n                        <p>Samlet</p>\r\n                        {mergedMaterialAmount}\r\n                    </div>\r\n                </div>\r\n                <div className='ChartContainer'>\r\n                    <div className='BarContainer'>\r\n                        <Bar data={data} options={{ maintainAspectRatio: false }} width={400} height={400}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Results","import React from 'react'\r\nimport './ResultsSimple.css'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nclass ResultsSimple extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.sumMaterials = this.sumMaterials.bind(this)\r\n        this.removeMissing = this.removeMissing.bind(this)\r\n        this.getLabels = this.getLabels.bind(this)\r\n        this.getData = this.getData.bind(this)\r\n    }\r\n\r\n    sumMaterials(array) {\r\n        const newArray = []\r\n        const Beton = ['Beton',0]\r\n        const Træ = ['Træ',0]\r\n        const Skifer = ['Skifer',0]\r\n        const Tegl = ['Tegl',0]\r\n        const Isolering = ['Isolering',0]\r\n        const Pap = ['Pap',0]\r\n        const Mursten = ['Mursten',0]\r\n\r\n        for (var x of array) {\r\n            if (x[0] === 'Træ') {\r\n                Træ[1] = Træ[1]+x[1]\r\n            }\r\n            if (x[0] === 'Beton') {\r\n                Beton[1] = Beton[1]+x[1]\r\n            }\r\n            if (x[0] === 'Skifer') {\r\n                Skifer[1] = Skifer[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tegl') {\r\n                Tegl[1] = Tegl[1]+x[1]\r\n            }\r\n            if (x[0] === 'Isolering') {\r\n                Isolering[1] = Isolering[1]+x[1]\r\n            }\r\n            if (x[0] === 'Pap') {\r\n                Pap[1] = Pap[1]+x[1]\r\n            }\r\n            if (x[0] === 'Mursten') {\r\n                Mursten[1] = Mursten[1]+x[1]\r\n            }        \r\n        }\r\n        newArray.push(Beton) \r\n        newArray.push(Træ)\r\n        newArray.push(Skifer)\r\n        newArray.push(Tegl)\r\n        newArray.push(Isolering)\r\n        newArray.push(Pap)\r\n        newArray.push(Mursten)\r\n        return newArray\r\n    }\r\n\r\n    removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n\r\n    getLabels(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[0])\r\n        } return newArray\r\n    }\r\n\r\n    getData(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[1])\r\n        } return newArray\r\n    }\r\n\r\n    render() {\r\n\r\n         //-------------------------------------VARIABLES-----------------------------------------------\r\n         //#region\r\n         const area = this.props.building.area\r\n         const floors = this.props.building.floors\r\n         const totalArea = area*floors\r\n         const perimeter = Math.floor(Math.sqrt(area)*4)\r\n         const wallArea = perimeter*(floors*2.5)\r\n         const roofArea = Math.floor(area*1.1)\r\n         const windowArea = Math.floor(wallArea*0.15)\r\n         //#endregion\r\n         \r\n         //-----------------------------------MATERIAL AMOUNTS------------------------------------------\r\n         //#region\r\n         const wallMaterialAmount = this.props.materials.wall.map((item) => <li>{item[0]}: {(item[1]*wallArea*0.5/100)}m3</li>)\r\n         const wallMaterialAmount2 = this.props.materials.wall.map((item) => [item[0],item[1]*wallArea*0.5/100])\r\n\r\n         const roofMaterialAmount = this.props.materials.roof.map((item) => <li>{item[0]}: {(item[1]*roofArea*0.5/100)}m3</li>)\r\n         const roofMaterialAmount2 = this.props.materials.roof.map((item) => [item[0],item[1]*roofArea*0.5/100])\r\n\r\n         const floorMaterialAmount = this.props.materials.floor.map((item) => <li>{item[0]}: {(item[1]*totalArea*0.5/100)}m3</li>)\r\n         const floorMaterialAmount2 = this.props.materials.floor.map((item) => [item[0],item[1]*totalArea*0.5/100])\r\n\r\n         const foundationMaterialAmount = this.props.materials.foundation.map((item) => <li>{item[0]}: {(item[1]*area*0.5/100)}m3</li>)\r\n         const foundationMaterialAmount2 = this.props.materials.foundation.map((item) => [item[0],item[1]*area*0.5/100])\r\n\r\n         const merged = [].concat.apply([], [wallMaterialAmount2,roofMaterialAmount2,floorMaterialAmount2,foundationMaterialAmount2]);\r\n         const mergedMaterials = this.removeMissing(this.sumMaterials(merged))\r\n\r\n         const mergedMaterialAmount = mergedMaterials.map((item) => <li>{item[0]}: {item[1]}m3</li>)\r\n         //#endregion\r\n\r\n         //---------------------------------------CHART-------------------------------------------------\r\n         //#region \r\n         const chartData = this.getData(mergedMaterials)\r\n         console.log(chartData)\r\n         const chartLabels = this.getLabels(mergedMaterials)\r\n         console.log(chartLabels)\r\n\r\n         const data = {\r\n            labels: chartLabels,\r\n            datasets: [\r\n              {\r\n                label: '',\r\n                data: chartData,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                  'rgba(153, 102, 255, 0.2)',\r\n                  'rgba(255, 159, 64, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                  'rgba(255, 159, 64, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n          \r\n          const options = {\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }\r\n        //#endregion\r\n\r\n\r\n        return(\r\n            <div>\r\n                <h1 className='ResultHeader'>Resultater</h1>\r\n                <div className='ResultContainer'>\r\n                    <div className='aResult'>\r\n                        <p>Ydervægge</p>\r\n                        {this.props.materials.wallS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Tag</p>\r\n                        {this.props.materials.roofS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Gulve</p>\r\n                        {this.props.materials.floorS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Fundament</p>\r\n                        {this.props.materials.foundationS}\r\n                    </div>\r\n                </div>\r\n                <div className='SumContainer'>\r\n                    <div className='SumResult'>\r\n                        <p>Samlet</p>\r\n                        {mergedMaterialAmount}\r\n                    </div>\r\n                </div>\r\n                <div className='ChartContainer'>\r\n                    <div className='BarContainer'>\r\n                        <Bar data={data} options={{ maintainAspectRatio: false }} width={400} height={400}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ResultsSimple","import React from 'react'\r\nimport { db } from \"../../util/firebase\";\r\n\r\nclass UpdateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.updateData = this.updateData.bind(this)\r\n    }\r\n\r\n    updateData() {\r\n        const wall = this.props.materials.wall\r\n        const roof = this.props.materials.roof\r\n        const floor = this.props.materials.floor\r\n        const foundation = this.props.materials.foundation\r\n\r\n            return db\r\n            .ref(`${this.props.building.address}/materials`)\r\n            .update(\r\n                {wall,roof,floor,foundation},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ wall: this.props.materials.wall,\r\n                                roof: this.props.materials.roof,\r\n                                floor: this.props.materials.floor,\r\n                                foundation: this.props.materials.foundation});\r\n            });\r\n      }\r\n\r\n    render() {\r\n    if (this.props.materials.wall.length === 0 || this.props.materials.roof.length === 0 || this.props.materials.floor.length === 0 || this.props.materials.foundation.length === 0) {\r\n            return(\r\n                <div></div>\r\n            )\r\n        } else {\r\n            return (<button onClick={this.updateData}>Gem</button>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateButton","import React from 'react'\r\nimport Dropdown from 'react-dropdown';\r\nimport './MaterialList.css'\r\nimport Toggle from 'react-toggle'\r\nimport Results from '../Results/Results'\r\nimport ResultsSimple from '../ResultsSimple/ResultsSimple'\r\nimport UpdateButton from './updateButton'\r\nimport { db } from \"../../util/firebase\";\r\n\r\nconst Options = ['Beton', 'Træ', 'Skifer', 'Tegl', 'Isolering', 'Pap', 'Mursten']\r\nconst pOptions = [10,20,30,40,50,60,70,80,90,100]\r\n\r\n\r\nclass MaterialList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {wall: [],\r\n                      wallS: [],\r\n                      wallM: '',\r\n                      wallP: '',\r\n\r\n\r\n                      roof: [],\r\n                      roofS: [],\r\n                      roofM: '',\r\n                      roofP: '',\r\n\r\n                      floor: [],\r\n                      floorS: [],\r\n                      floorM: '',\r\n                      floorP: '',\r\n\r\n                      foundation: [],\r\n                      foundationS: [],\r\n                      foundationM: '',\r\n                      foundationP: '',\r\n                    \r\n                      advanced: false}\r\n                      \r\n        this.addWallItem = this.addWallItem.bind(this)\r\n        this.addWallMaterial = this.addWallMaterial.bind(this)\r\n        this.addWallPercentage = this.addWallPercentage.bind(this)\r\n        this.removeWallItem = this.removeWallItem.bind(this)\r\n        this.addSimpleWall = this.addSimpleWall.bind(this)\r\n        \r\n        this.addRoofItem = this.addRoofItem.bind(this)\r\n        this.addRoofMaterial = this.addRoofMaterial.bind(this)\r\n        this.addRoofPercentage = this.addRoofPercentage.bind(this)\r\n        this.removeRoofItem = this.removeRoofItem.bind(this)\r\n        this.addSimpleRoof = this.addSimpleRoof.bind(this)\r\n\r\n        this.addFloorItem = this.addFloorItem.bind(this)\r\n        this.addFloorMaterial = this.addFloorMaterial.bind(this)\r\n        this.addFloorPercentage = this.addFloorPercentage.bind(this)\r\n        this.removeFloorItem = this.removeFloorItem.bind(this)\r\n        this.addSimpleFloor = this.addSimpleFloor.bind(this)\r\n        \r\n        this.addFoundationItem = this.addFoundationItem.bind(this)\r\n        this.addFoundationMaterial = this.addFoundationMaterial.bind(this)\r\n        this.addFoundationPercentage = this.addFoundationPercentage.bind(this)\r\n        this.removeFoundationItem = this.removeFoundationItem.bind(this)\r\n        this.addSimpleFoundation = this.addSimpleFoundation.bind(this)\r\n\r\n        this.toggleAdvanced = this.toggleAdvanced.bind(this)\r\n        this.toggleSimple = this.toggleSimple.bind(this)\r\n\r\n        this.isAbove100 = this.isAbove100.bind(this)\r\n\r\n        this.updateData = this.updateData.bind(this)\r\n    }\r\n\r\n      componentDidMount() {\r\n        db.ref(this.props.building.address).on(\"value\", snapshot => {\r\n            let allInfo = [];\r\n            snapshot.forEach(snap => {\r\n              allInfo.push(snap.val());\r\n            });\r\n            this.setState({ wall: allInfo[6].wall,\r\n                            roof: allInfo[6].roof,\r\n                            floor: allInfo[6].floor,\r\n                            foundation: allInfo[6].foundation});\r\n            console.log(allInfo[6].wall)\r\n          });\r\n      }\r\n\r\n      updateData() {\r\n        const wall = this.state.wall\r\n        const roof = this.state.roof\r\n        const floor = this.state.floor\r\n        const foundation = this.state.foundation\r\n\r\n            return db\r\n            .ref(`${this.props.building.address}/materials`)\r\n            .update(\r\n                {wall,roof,floor,foundation},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ wall: this.state.wall,\r\n                                roof: this.state.roof,\r\n                                floor: this.state.floor,\r\n                                foundation: this.state.foundation});\r\n            });\r\n      }\r\n      \r\n\r\n    //-------------------WALL-----------------------\r\n    //#region\r\n    addWallItem() {\r\n        this.setState({ wall: [...this.state.wall, [this.state.wallM, this.state.wallP]] }) \r\n    }\r\n\r\n    addWallMaterial(item) {\r\n        this.setState({ wallM: item.value }) \r\n    }\r\n\r\n    addWallPercentage(item) {\r\n        this.setState({ wallP: item.value }) \r\n    }\r\n\r\n    removeWallItem() {\r\n        this.setState({ wall: this.state.wall.slice(0,this.state.wall.length-1)})\r\n    }\r\n\r\n    addSimpleWall(item) {\r\n        this.setState({ wallS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------ROOF-----------------------\r\n    //#region\r\n    addRoofItem(item) {\r\n        this.setState({ roof: [...this.state.roof, [this.state.roofM, this.state.roofP]] }) \r\n    }\r\n\r\n    addRoofMaterial(item) {\r\n        this.setState({ roofM: item.value }) \r\n    }\r\n\r\n    addRoofPercentage(item) {\r\n        this.setState({ roofP: item.value }) \r\n    }\r\n\r\n    removeRoofItem() {\r\n        this.setState({ roof: this.state.roof.slice(0,this.state.roof.length-1)})\r\n    }\r\n\r\n    addSimpleRoof(item) {\r\n        this.setState({ roofS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------FLOOR-----------------------\r\n    //#region\r\n    addFloorItem(item) {\r\n        this.setState({ floor: [...this.state.floor, [this.state.floorM, this.state.floorP]] }) \r\n    }\r\n\r\n    addFloorMaterial(item) {\r\n        this.setState({ floorM: item.value})\r\n    }\r\n\r\n    addFloorPercentage(item) {\r\n        this.setState({ floorP: item.value})\r\n    }\r\n\r\n    removeFloorItem() {\r\n        this.setState({ floor: this.state.floor.slice(0,this.state.floor.length-1)})\r\n    }\r\n\r\n    addSimpleFloor(item) {\r\n        this.setState({ floorS: item.value})\r\n    }\r\n    //#endregion\r\n    \r\n    //-------------------FOUNDATION-----------------------\r\n    //#region\r\n    addFoundationItem(item) {\r\n        this.setState({ foundation: [...this.state.foundation, [this.state.foundationM, this.state.foundationP]] }) \r\n    }\r\n\r\n    addFoundationMaterial(item) {\r\n        this.setState({ foundationM: item.value})\r\n    }\r\n\r\n    addFoundationPercentage(item) {\r\n        this.setState({ foundationP: item.value})\r\n    }\r\n\r\n    removeFoundationItem() {\r\n        this.setState({ foundation: this.state.foundation.slice(0,this.state.foundation.length-1)})\r\n    }\r\n\r\n    addSimpleFoundation(item) {\r\n        this.setState({ foundationS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------TOGGLE-----------------------\r\n    //#region\r\n    toggleAdvanced() {\r\n        this.setState({advanced: true})\r\n    }\r\n\r\n    toggleSimple() {\r\n        this.setState({advanced: false})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------FUNCTIONS-----------------------\r\n    isAbove100(number) {\r\n        if (number >= 0) {\r\n            return 'Mangler: '+number+'%'\r\n        } else {\r\n            return 'OVER 100%, FJERN MATERIALER'\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        const wallAbove100 = this.isAbove100(100-(this.state.wall.reduce((a,wall) =>  a = a + wall[1] , 0 )))\r\n        const floorAbove100 = this.isAbove100(100-(this.state.floor.reduce((a,floor) =>  a = a + floor[1] , 0 )))\r\n        const roofAbove100 = this.isAbove100(100-(this.state.roof.reduce((a,roof) =>  a = a + roof[1] , 0 )))\r\n        const foundationAbove100 = this.isAbove100(100-(this.state.foundation.reduce((a,foundation) =>  a = a + foundation[1] , 0 )))\r\n\r\n        if (this.state.advanced == true) {\r\n        return (\r\n            <div>\r\n                <div className='MaterialHeader'>\r\n                    <h1>Materialer</h1>\r\n                </div>\r\n                <div className='ToggleButton'>\r\n                        <p>Avanceret</p>\r\n                        <Toggle\r\n                            id='material-status'\r\n                            onChange={this.toggleSimple} />\r\n                </div>\r\n                <div className='materialLists'>\r\n                    <div className='materialSection'>\r\n                        <h2>Ydervægge</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addWallMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <Dropdown className='drop1' options={pOptions} onChange={this.addWallPercentage} placeholder={'Vælg en procentandel'}/>\r\n                        </div>\r\n                        <div>{this.state.wall.map((item) => <li>{item[0]} {item[1]}%</li>)}</div>\r\n                        <button onClick={this.addWallItem}>Tilføj</button>\r\n                        <button onClick={this.removeWallItem}>Fjern</button>\r\n                        <p>{wallAbove100}</p>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Tag</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addRoofMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <Dropdown className='drop1' options={pOptions} onChange={this.addRoofPercentage} placeholder={'Vælg en procentandel'}/>\r\n                        </div>\r\n                        <div>{this.state.roof.map((item) => <li>{item[0]} {item[1]}%</li>)}</div>\r\n                        <button onClick={this.addRoofItem}>Tilføj</button>\r\n                        <button onClick={this.removeRoofItem}>Fjern</button>\r\n                        <p>{roofAbove100}</p>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Gulv</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addFloorMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <Dropdown className='drop1' options={pOptions} onChange={this.addFloorPercentage} placeholder={'Vælg en procentandel'}/>\r\n                        </div>\r\n                        <div>{this.state.floor.map((item) => <li>{item[0]} {item[1]}%</li>)}</div>\r\n                        <button onClick={this.addFloorItem}>Tilføj</button>\r\n                        <button onClick={this.removeFloorItem}>Fjern</button>\r\n                        <p>{floorAbove100}</p>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Fundament</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addFoundationMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <Dropdown className='drop1' options={pOptions} onChange={this.addFoundationPercentage} placeholder={'Vælg en procentandel'}/>\r\n                        </div>\r\n                        <div>{this.state.foundation.map((item) => <li>{item[0]} {item[1]}%</li>)}</div>\r\n                        <button onClick={this.addFoundationItem}>Tilføj</button>\r\n                        <button onClick={this.removeFoundationItem}>Fjern</button>\r\n                        <p>{foundationAbove100}</p>\r\n                    </div>\r\n                </div>\r\n                <Results materials={this.state} building={this.props.building}/>\r\n                <UpdateButton materials={this.state} building={this.props.building}/>\r\n            </div>\r\n        )\r\n        } else {\r\n            return(\r\n                <div>\r\n                    <div className='MaterialHeader'>\r\n                        <h1>Materialer</h1>\r\n                    </div>\r\n                    <div className='ToggleButton'>\r\n                        <p>Avanceret</p>\r\n                        <Toggle\r\n                            id='material-status'\r\n                            onChange={this.toggleAdvanced} />\r\n                    </div>\r\n                    <div className='materialLists'>\r\n                        <div className='materialSection'>\r\n                            <h2>Ydervægge</h2>\r\n                            <div className='dropCreate'>\r\n                                <Dropdown className='drop2' options={Options} onChange={this.addSimpleWall} placeholder={'Vælg et materiale'}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Tag</h2>\r\n                            <div className='dropCreate'>\r\n                                <Dropdown className='drop2' options={Options} onChange={this.addSimpleRoof} placeholder={'Vælg et materiale'}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Gulv</h2>\r\n                            <div className='dropCreate'>\r\n                                <Dropdown className='drop2' options={Options} onChange={this.addSimpleFloor} placeholder={'Vælg et materiale'}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Fundament</h2>\r\n                            <div className='dropCreate'>\r\n                                <Dropdown className='drop2' options={Options} onChange={this.addSimpleFoundation} placeholder={'Vælg et materiale'}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <ResultsSimple materials={this.state} building={this.props.building}/>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MaterialList","import React from 'react';\nimport './Building.css';\nimport BuildingView from '../BuildingView/BuildingView'\nimport RoofTypeImage from './RoofTypeImage/RoofTypeImage'\nimport FoundationTypeImage from './FoundationTypeImage/FoundationTypeImage'\nimport Download from '../Download/Download'\nimport MaterialList from '../MaterialList/MaterialList'\nimport Dropdown from 'react-dropdown';\n\nconst roofTypeOptions = [\n  'Saddel', 'Fladt', 'Valm', 'Skråt'\n]\n\nconst foundationTypeOptions = [\n  'Linje', 'Punkt', 'Stribe'\n]\n\nclass Building extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleAreaChange = this.handleAreaChange.bind(this)\n    this.handleHeightChange = this.handleHeightChange.bind(this)\n    this.handleRoofTypeSelect = this.handleRoofTypeSelect.bind(this)\n    this.handleFoundationTypeSelect = this.handleFoundationTypeSelect.bind(this)\n  }\n\n  handleAreaChange(inputArea) {\n    const area = inputArea.target.value;\n    this.props.onAreaChange(area)\n  }\n\n  handleHeightChange(inputHeight) {\n    const height = inputHeight.target.value;\n    this.props.onFloorHeightChange(height)\n  }\n\n  handleRoofTypeSelect(inputRoofType) {\n    const roofType = inputRoofType.value;\n    this.props.onRoofTypeChange(roofType)\n  }\n\n  handleFoundationTypeSelect(inputFoundationType) {\n    const foundationType = inputFoundationType.value;\n    this.props.onFoundationTypeChange(foundationType)\n  }\n\n  render() {\n\n    const area = this.props.building.area\n    const floors = this.props.building.floors\n    const floorHeight = this.props.building.floorHeight\n    const totalArea = area*floors\n    const perimeter = Math.floor(Math.sqrt(area)*4)\n    const wallArea = Math.floor(perimeter*(floors*floorHeight))\n    const roofArea = Math.floor(area*1.1)\n    const windowArea = Math.floor(wallArea*0.15)\n    const built = this.props.building.built\n    const age = 2021-built\n\n    if (this.props.building.selectAddress === true && this.props.building.selectEdit === '') {\n    return (\n      <div className=\"Building\">\n        <div className='BuildingHeader'>\n          <h1>Bygningsinformation</h1>\n        </div>\n        <div className=\"image-container\">\n          <BuildingView building={this.props.building}/>\n        </div>\n        <h2 className='address-title'>{this.props.building.address}</h2>\n        <div className='information-container'>\n          <div className='paravar'>\n            <p className='parameter'><span>Etageareal</span></p>\n            <input className='cVariable' value={area} pattern=\"[0-9]*\" onChange={this.handleAreaChange}/>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Etagehøjde</span></p>\n            <input className='cVariable' value={floorHeight} pattern=\"[0-9]*\" onChange={this.handleHeightChange}/>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Etager</span></p>\n            <p className='variable'><span>{floors}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Samlet areal</span></p>\n            <p className='variable'><span>{totalArea}</span></p>\n          </div>\n        </div>\n        <div className='information-container' id='i2'>\n          <div className='paravar'>\n            <p className='parameter'><span>Omkreds</span></p>\n            <p className='variable'><span>{perimeter}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Vægareal</span></p>\n            <p className='variable'><span>{wallArea}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Tagareal</span></p>\n            <p className='variable'><span>{roofArea}</span></p>\n          </div>\n        </div>\n        <div className='information-container' id='i3'>\n          <div className='paravar'>\n            <p className='parameter'><span>Vinduesareal</span></p>\n            <p className='variable'><span>{windowArea}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Opført</span></p>\n            <p className='variable'><span>{built}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Alder</span></p>\n            <p className='variable'><span>{age}</span></p>\n          </div>\n        </div>\n        <div className='typeContainer'>\n          <div className='compTypeContainer'>\n            <h2>Tagtype</h2>\n            <Dropdown options={roofTypeOptions} onChange={this.handleRoofTypeSelect} placeholder={this.props.building.roofType} />\n            <RoofTypeImage roofType={this.props.building.roofType}/>\n          </div>\n          <div className='compTypeContainer'>\n            <h2>Fundamenttype</h2>\n            <Dropdown options={foundationTypeOptions} onChange={this.handleFoundationTypeSelect} placeholder={this.props.building.foundationType} />\n            <FoundationTypeImage foundationType={this.props.building.foundationType}/>\n          </div>\n        </div>\n        <div className='EnergyHeader'>\n          <h1>Energi</h1>\n        </div>\n        <div className='energyContainer'>\n          <div className='EIC'>\n            <p className='energyData'>Energiklasse:</p><p className='energyData2'>{this.props.building.energy[0]}</p>\n            <p className='energyData'>Potentiel besparelse:</p><p className='energyData2'>{this.props.building.energy[1]} kr/år</p>\n            <p className='energyData'>Beregnet forbrug:</p><p className='energyData2'>{this.props.building.energy[2]} kr/år</p>\n          </div>\n          <div className='EIC'>\n            <p className='energyData'>Investering:</p><p className='energyData2'>{this.props.building.energy[3]} kr</p>\n            <p className='energyData'>Forbedring:</p><p className='energyData2'>{this.props.building.energy[4]}</p>\n          </div>\n        </div>\n        {/*<Download building={this.props.building}/>*/}\n        <div className='MaterialSection'>\n          <MaterialList building={this.props.building}/>\n        </div>\n      </div>\n    )\n    } else {\n      return(\n        <div></div>\n      )\n    }\n  }\n}\nexport default Building;","import React from 'react'\r\nimport './Material.css'\r\n\r\nclass Material extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSimpleClick = this.handleSimpleClick.bind(this);\r\n    this.handleAdvancedClick = this.handleAdvancedClick.bind(this);\r\n    this.handleBackClick = this.handleBackClick.bind(this);\r\n  }\r\n\r\n  handleSimpleClick() {\r\n    const edit = 'simple'\r\n    this.props.onChange1(edit)\r\n  }\r\n\r\n  handleAdvancedClick() {\r\n    const edit = 'advanced'\r\n    this.props.onChange1(edit)\r\n  }\r\n\r\n  handleBackClick() {\r\n    const goBack = true\r\n    const selectAddress = false\r\n    this.props.onChange2(goBack,selectAddress)\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.building.selectAddress === true && this.props.building.selectEdit === '') {\r\n    return(\r\n      <div className=\"mainMaterial\">\r\n        <div className=\"buttonDiv\">\r\n          <a className=\"buttonMaterial\" onClick={this.handleBackClick}>Tilbage</a>\r\n        </div>\r\n      </div>\r\n    )\r\n    } else {\r\n      return(\r\n        <div></div>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default Material","import React from 'react'\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport './Simple.css'\r\nimport { simpleRoof, simpleWall, simpleFloor, simpleFoundation } from '../../functions/simpleFunctions'\r\nimport { Pie, Bar } from 'react-chartjs-2';\r\n\r\nconst wallOptions = [\r\n    'Beton', 'Træ', 'Mursten'\r\n]\r\n\r\nconst roofOptions = [\r\n    'Skifer', 'Beton', 'Tagpap', 'Tegl'\r\n];\r\n\r\nconst floorOptions = [\r\n    'Beton', 'Træ'\r\n]\r\n\r\nconst foundationOptions = [\r\n    'Beton', 'Træ'\r\n]\r\n\r\nclass Simple extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            wallMaterial: [],\r\n            roofMaterial: [],\r\n            floorMaterial: [],\r\n            foundationMaterial: []\r\n        }\r\n\r\n        this.handleWallSelect = this.handleWallSelect.bind(this)\r\n        this.handleRoofSelect = this.handleRoofSelect.bind(this)\r\n        this.handleFloorSelect = this.handleFloorSelect.bind(this)\r\n        this.handleFoundationSelect = this.handleFoundationSelect.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleWallSelect(newMaterial) {\r\n        this.setState({wallMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleRoofSelect(newMaterial) {\r\n        this.setState({roofMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleFloorSelect(newMaterial) {\r\n        this.setState({floorMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleFoundationSelect(newMaterial) {\r\n        this.setState({foundationMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleClick() {\r\n        const edit = ''\r\n        this.props.onChange(edit)\r\n    }\r\n\r\n    render() {\r\n\r\n        //-----------------------------------------------------------------------------------\r\n        const area = this.props.building.area\r\n        const floors = this.props.building.floors\r\n        const totalArea = area*floors\r\n        const perimeter = Math.floor(Math.sqrt(area)*4)\r\n        const wallArea = perimeter*(floors*2.5)\r\n        const roofArea = Math.floor(area*1.1)\r\n        const windowArea = Math.floor(wallArea*0.15)\r\n        //-----------------------------------------------------------------------------------\r\n        const wallMaterials = simpleWall(this.state.wallMaterial)\r\n        const roofMaterials = simpleRoof(this.state.roofMaterial)\r\n        const floorMaterials = simpleFloor(this.state.floorMaterial)\r\n        const foundationMaterials = simpleFoundation(this.state.foundationMaterial)\r\n        //-----------------------------------------------------------------------------------\r\n        // Beton, Isolering, Træ, Mursten, Metal\r\n        const wallMaterialAmount = wallMaterials.map(x => Math.floor(x * wallArea * 0.5));\r\n\r\n        // Beton, Isolering, Træ, Metal\r\n        const floorMaterialAmount = floorMaterials.map(x => Math.floor(x * totalArea*0.3));\r\n\r\n        // Beton, Træ, Metal, Skifer, Tagpap, Tegl\r\n        const roofMaterialAmount = roofMaterials.map(x => Math.floor(x * roofArea * 0.2));\r\n\r\n        // Beton, Isolering, Træ, Metal\r\n        const foundationMaterialAmount = foundationMaterials.map(x => Math.floor(x * area * 0.5));\r\n\r\n        const wallData = {\r\n            labels: ['Beton', 'Isolering', 'Træ', 'Mursten', 'Metal'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: wallMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                  'rgba(153, 102, 255, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const roofData = {\r\n            labels: ['Beton', 'Træ', 'Metal', 'Skifer', 'Tagpap', 'Tegl'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: roofMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                  'rgba(153, 102, 255, 0.2)',\r\n                  'rgba(100, 152, 255, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                  'rgba(100, 152, 255, 0.2)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const floorData = {\r\n            labels: ['Beton', 'Isolering', 'Træ', 'Metal'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: floorMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const foundationData = {\r\n            labels: ['Beton', 'Isolering', 'Træ', 'Metal'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: foundationMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const allData = {\r\n          labels: ['1', '2', '3', '4', '5', '6'],\r\n          datasets: [\r\n            {\r\n              label: 'Væg',\r\n              data: wallMaterialAmount,\r\n              backgroundColor: 'rgb(255, 99, 132)',\r\n            },\r\n            {\r\n              label: 'Tag',\r\n              data: roofMaterialAmount,\r\n              backgroundColor: 'rgb(54, 162, 235)',\r\n            },\r\n            {\r\n              label: 'Gulv',\r\n              data: floorMaterialAmount,\r\n              backgroundColor: 'rgb(75, 192, 192)',\r\n            },\r\n            {\r\n              label: 'Fundament',\r\n              data: foundationMaterialAmount,\r\n              backgroundColor: 'rgb(75, 192, 192)',\r\n            },\r\n          ],\r\n        }\r\n\r\n        const allOptions = {\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  stacked: true,\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  stacked: true,\r\n                },\r\n              ],\r\n            },\r\n        }\r\n        \r\n\r\n\r\n        if (this.props.building.selectAddress === true && this.props.building.selectEdit === 'simple') {\r\n            return(\r\n                <div className='simpleMain'>\r\n                    <h2>REDIGER SIMPEL</h2>\r\n                    <h3 className ='simpleInfo'>{this.props.building.address}</h3>\r\n                    <div className='dropdownContainer'>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Ydervægge</p>\r\n                            <Dropdown options={wallOptions} onChange={this.handleWallSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={wallData} className='pieChart' style='height: 140px'/>\r\n                        </div>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Tag</p>\r\n                            <Dropdown options={roofOptions} onChange={this.handleRoofSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={roofData} className='pieChart'/>\r\n                        </div>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Terrændæk</p>\r\n                            <Dropdown options={floorOptions} onChange={this.handleFloorSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={floorData} className='pieChart'/>\r\n                        </div>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Fundament</p>\r\n                            <Dropdown options={foundationOptions} onChange={this.handleFoundationSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={foundationData} className='pieChart'/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='barContainer'>\r\n                      <Bar data={allData} options={allOptions} width={400} height={400}/>\r\n                    </div>\r\n                    <div className='simpleButtonContainer'>\r\n                        <a className=\"simpleButton\" onClick={this.handleClick}>Tilbage</a>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Simple","\r\nexport function simpleRoof(material) {\r\n    // Beton, Træ, Metal, Skifer, Tagpap, Tegl\r\n    if (material === 'Beton') {\r\n        const Materialer = [0.8, 0.1, 0.1, 0, 0, 0]\r\n        return Materialer\r\n    } else if (material === 'Skifer') {\r\n        const Materialer = [0, 0.1, 0.1, 0.8, 0, 0]\r\n        return Materialer\r\n    } else if (material === 'Tagpap') {\r\n        const Materialer = [0, 0.5, 0.1, 0, 0.2, 0]\r\n        return Materialer\r\n    } else if (material === 'Tegl') {\r\n        const Materialer = [0, 0.1, 0.1, 0, 0, 0.8]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n} \r\n\r\nexport function simpleWall(material) {\r\n    // Beton, Isolering, Træ, Mursten, Metal\r\n    if (material === 'Beton') {\r\n        const Materialer = [0.3, 0.5, 0.2, 0, 0]\r\n        return Materialer\r\n    } else if (material === 'Mursten') {\r\n        const Materialer = [0, 0.5, 0.2, 0.3, 0]\r\n        return Materialer\r\n    } else if (material === 'Træ') {\r\n        const Materialer = [0, 0.8, 0.1, 0, 0.1]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n} \r\n\r\nexport function simpleFloor(material) {\r\n    // Beton, Isolering, Træ, Metal\r\n    if (material === 'Beton') {\r\n        const Materialer = [0.3, 0.5, 0.2, 0]\r\n        return Materialer\r\n    } else if (material === 'Træ') {\r\n        const Materialer = [0, 0.8, 0.1, 0.1]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nexport function simpleFoundation(material) {\r\n    // Beton, Isolering, Træ, Metal\r\n    if (material === 'Beton') {\r\n        const Materialer = [0.3, 0.5, 0.2, 0]\r\n        return Materialer\r\n    } else if (material === 'Træ') {\r\n        const Materialer = [0, 0.8, 0.1, 0.1]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './Advanced.css'\r\n\r\nclass Advanced extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleClick() {\r\n        const edit = ''\r\n        this.props.onChange(edit)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.building.selectAddress === true && this.props.building.selectEdit === 'advanced') {\r\n            return(\r\n                <div className='advancedMain'>\r\n                    <h2>REDIGER AVANCERET</h2>\r\n                    <h3>{this.props.building.address}</h3>\r\n                    <div className='advancedButtonContainer'>\r\n                        <a className=\"advancedButton\" onClick={this.handleClick}>Tilbage</a>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Advanced","import React from 'react';\nimport '../../reset.css'\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Building from '../Building/Building'\nimport Material from '../Material/Material'\nimport Simple from '../Simple/Simple'\nimport Advanced from '../Advanced/Advanced'\nimport BuildingView from '../BuildingView/BuildingView'\nimport { db } from \"../../util/firebase\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {imageSrc: '',\n                  address: '',\n                  area: '',\n                  floors: '',\n                  built: '',\n                  selectAddress: false,\n                  selectEdit: '',\n                  location: [],\n                  goBack: true,\n                  floorHeight: 2.5,\n                  roofType: 'Saddel',\n                  foundationType: 'Linje',\n                  energy: [],\n                  notes: []};\n\n    this.changeAddress = this.changeAddress.bind(this);\n    this.changeArea = this.changeArea.bind(this);\n    this.changeEdit = this.changeEdit.bind(this);\n    this.changeBack = this.changeBack.bind(this);\n    this.changeFloorHeight = this.changeFloorHeight.bind(this);\n    this.changeRoofType = this.changeRoofType.bind(this);\n    this.changeFoundationType = this.changeFoundationType.bind(this);\n  }\n\n  changeAddress(newAddress,newArea,newFloors,newBuilt,selectedAddress,newLocation,newGoBack,newFloorHeight,newRoofType, newFoundationType, newEnergy) {\n    this.setState({address: newAddress})\n    this.setState({area:newArea})\n    this.setState({floors: newFloors})\n    this.setState({built: newBuilt})\n    this.setState({selectAddress: selectedAddress})\n    this.setState({location: newLocation})\n    this.setState({goBack: newGoBack})\n    this.setState({floorHeight: newFloorHeight})\n    this.setState({roofType: newRoofType})\n    this.setState({foundationType: newFoundationType})\n    this.setState({energy: newEnergy})\n  } \n\n  changeArea(newArea) {\n    this.setState({area:newArea})\n  }\n\n  changeFloorHeight(newFloorHeight) {\n    this.setState({floorHeight: newFloorHeight})\n  }\n\n  changeRoofType(newRoofType) {\n    this.setState({roofType: newRoofType})\n  }\n\n  changeFoundationType(newFoundationType) {\n    this.setState({foundationType: newFoundationType})\n  }\n\n  changeEdit(newEdit) {\n    this.setState({selectEdit: newEdit})\n  }\n\n  changeBack(newGoBack, selectedAddress) {\n    this.setState({goBack: newGoBack})\n    this.setState({selectAddress: selectedAddress})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <SearchBar building={this.state} onChange={this.changeAddress}/>\n          <div className='Info'>\n            <Building building={this.state} onAreaChange={this.changeArea} onFloorHeightChange={this.changeFloorHeight}\n            onRoofTypeChange={this.changeRoofType} onFoundationTypeChange={this.changeFoundationType}/>\n            <Material building={this.state} onChange1={this.changeEdit} onChange2={this.changeBack}/>\n            <Simple building={this.state} onChange={this.changeEdit}/>\n            <Advanced building={this.state} onChange={this.changeEdit}/>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n        <App />,\ndocument.getElementById('root'));\n"],"sourceRoot":""}