{"version":3,"sources":["functions/simpleFunctions.js","items/items.js","util/firebase.js","components/SearchBar/SearchBar.js","components/BuildingView/BuildingView.js","components/Building/RoofTypeImage/Saddel.jpg","components/Building/RoofTypeImage/Valm.jpg","components/Building/RoofTypeImage/Skråt.jpg","components/Building/RoofTypeImage/Fladt.jpg","components/Building/RoofTypeImage/RoofTypeImage.js","components/Building/FoundationTypeImage/Linje.jpg","components/Building/FoundationTypeImage/Punkt.jpg","components/Building/FoundationTypeImage/Stribe.jpg","components/Building/FoundationTypeImage/FoundationTypeImage.js","components/MaterialList/updateButton.js","components/MaterialList/MaterialList.js","components/Building/Building.js","components/Material/Material.js","components/Simple/Simple.js","components/Advanced/Advanced.js","components/App/App.js","index.js","components/Impacts/Impacts.js","components/Results/Results.js","components/Download/Download.js","components/ResultsSimple/ResultsSimple.js","components/DownloadSimple/DownloadSimple.js"],"names":["simpleRoof","material","simpleWall","simpleFloor","simpleFoundation","simpleInWall","roofTypeValue","roofType","foundationTypeValue","foundationType","items","id","name","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","database","SearchBar","props","handleOnAddressSelect","item","address","ref","on","snapshot","allInfo","forEach","snap","push","val","setState","addressInfo","console","log","state","handleOnSelect","area","floors","built","location","roof","foundation","energy","onChange","handleOnFocus","addressSelect","addressSelected","bind","this","building","goBack","className","style","width","margin","placeholder","onSelect","onFocus","styling","zIndex","autoFocus","Provider","value","size","color","data-tip","place","type","effect","border","onClick","React","Component","BuildingView","streetView","position","lat","lng","pov","heading","pitch","zoom","height","backgroundColor","streetViewPanoramaOptions","RoofTypeImage","src","saddel","fladt","skråt","valm","FoundationTypeImage","linje","punkt","stribe","UpdateButton","updateData","updateData2","updateData3","wall","materials","floor","inwall","windows","update","then","_","roofS","wallS","floorS","foundationS","inwallS","floorsS","length","updateData4","Options","wallOptions","floorOptions","roofOptions","foundationOptions","inWallOptions","windowOptions","MaterialList","wallM","wallP","roofM","roofP","floorM","floorP","foundationM","foundationP","inwallM","inwallP","advanced","addWallItem","addWallMaterial","addWallPercentage","removeWallItem","addSimpleWall","addRoofItem","addRoofMaterial","addRoofPercentage","removeRoofItem","addSimpleRoof","addFloorItem","addFloorMaterial","addFloorPercentage","removeFloorItem","addSimpleFloor","addFoundationItem","addFoundationMaterial","addFoundationPercentage","removeFoundationItem","addSimpleFoundation","addInWallItem","addInWallMaterial","addInWallPercentage","removeInWallItem","addSimpleInWall","addWindowItem","toggleAdvanced","toggleSimple","newVal","target","slice","data-for","options","min","max","step","map","Results","ResultsSimple","roofTypeOptions","foundationTypeOptions","Building","handleAreaChange","handleHeightChange","handleRoofTypeSelect","handleFoundationTypeSelect","inputArea","onAreaChange","inputHeight","onFloorHeightChange","inputRoofType","onRoofTypeChange","inputFoundationType","onFoundationTypeChange","floorHeight","totalArea","perimeter","Math","sqrt","wallArea","roofArea","windowArea","age","selectAddress","selectEdit","pattern","Material","handleSimpleClick","handleAdvancedClick","handleBackClick","onChange1","onChange2","Simple","wallMaterial","roofMaterial","floorMaterial","foundationMaterial","handleWallSelect","handleRoofSelect","handleFloorSelect","handleFoundationSelect","handleClick","newMaterial","wallMaterials","roofMaterials","floorMaterials","foundationMaterials","wallMaterialAmount","x","floorMaterialAmount","roofMaterialAmount","foundationMaterialAmount","wallData","labels","datasets","label","data","borderColor","borderWidth","roofData","floorData","foundationData","allData","scales","yAxes","stacked","ticks","beginAtZero","xAxes","Advanced","App","imageSrc","notes","changeAddress","changeArea","changeEdit","changeBack","changeFloorHeight","changeRoofType","changeFoundationType","newAddress","newArea","newFloors","newBuilt","selectedAddress","newLocation","newGoBack","newFloorHeight","newRoofType","newFoundationType","newEnergy","newEdit","ReactDOM","render","document","getElementById","Impacts","emissions","complete","multiplyObj","getMaterialEmission","runEmissions","runPrices","removeMissing","sumObjects","obj","key","arr","newEmission","newEmissions","Beton","Træ","Skifer","Tegl","Fliser","Isolering","Tagpap","Mursten","Metal","Gips","GWP","ODP","exp","POCP","AP","EP","ADPE","ADPF","PERT","PENRT","RSF","NRSF","amount","array","newArray","Sten","objs","reduce","a","b","k","hasOwnProperty","ClimateEmissions","Object","entries","downloadZip","toFixed","BetonMatPas","require","GipsMatPas","IsoleringMatPas","MetalMatPas","MurstenMatPas","TagpapMatPas","SkiferMatPas","StenMatPas","TeglMatPas","TræMatPas","sumMaterials","getLabels","getData","passMaterials","materialPercentages","Sand","Kalk","Ler","Vand","Papir","Jern","Stål","Polyester","Bitumen","Gummi","etlag","tolag","trelag","newArray2","eval","Indhold","y","newNum","foundationArea","wallMaterialAmount2","roofMaterialAmount2","floorMaterialAmount2","foundationMaterialAmount2","inWallMaterialAmount","inWallMaterialAmount2","merged","concat","apply","mergedMaterials","mergedMaterialAmount","mergedPassMaterial","sort","mergedPassMaterialAmount","chartData","chartData2","data2","maintainAspectRatio","legend","display","gridLines","title","text","fontSize","fontColor","padding","Download","getIDs","Grunddata","Produktnavn","Revisionsnummer","BygPas","zip","JSZip","file","JSON","stringify","generateAsync","content","saveAs","wallMaterialAmountS","wallMaterialAmountS2","roofMaterialAmountS","roofMaterialAmountS2","floorMaterialAmountS","floorMaterialAmountS2","foundationMaterialAmountS","foundationMaterialAmountS2","inWallMaterialAmountS","inWallMaterialAmountS2","mergedS","mergedMaterialsS","mergedMaterialAmountS","mergedPassMaterialS","mergedPassMaterialAmountS"],"mappings":"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","file":"static/js/main.87d96a46.chunk.js","sourcesContent":["\r\nexport function simpleRoof(material) {\r\n    // Tegl, Skifer, Tagpap\r\n    if (material === 'Tegl') {\r\n        const Materialer = [['Tegl', 0.02], ['Isolering', 0.2], ['Træ', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Skifer') {\r\n        const Materialer = [['Skifer', 0.02], ['Isolering', 0.2], ['Træ', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Tagpap') {\r\n        const Materialer = [['Tagpap', 0.005], ['Isolering', 0.2], ['Træ', 0.1]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n} \r\n\r\nexport function simpleWall(material) {\r\n    // Beton, Isolering, Træ, Mursten, Metal\r\n    if (material === 'Beton') {\r\n        const Materialer = [['Beton', 0.1], ['Isolering', 0.25], ['Træ', 0.05], ['Gips', 0.02]]\r\n        return Materialer\r\n    } else if (material === 'Mursten') {\r\n        const Materialer = [['Mursten', 0.1], ['Isolering', 0.25], ['Træ', 0.05], ['Gips', 0.02]]\r\n        return Materialer\r\n    } else if (material === 'Træ') {\r\n        const Materialer = [['Træ', 0.05], ['Metal', 0.01], ['Isolering', 0.25], ['Gips', 0.02]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n} \r\n\r\nexport function simpleFloor(material) {\r\n    // Beton, Træ, Sten\r\n    if (material === 'Beton') {\r\n        const Materialer = [['Beton', 0.1], ['Isolering', 0.1], ['Træ', 0.15]]\r\n        return Materialer\r\n    } else if (material === 'Træ') {\r\n        const Materialer = [['Træ', 0.20], ['Isolering', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Sten') {\r\n        const Materialer = [['Sten', 0.02], ['Træ', 0.15], ['Isolering', 0.1]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nexport function simpleFoundation(material) {\r\n    // Beton, Skrue\r\n    if (material === 'Beton') {\r\n        const Materialer = [['Beton', 0.3], ['Isolering', 0.2]]\r\n        return Materialer\r\n    } else if (material === 'Skrue') {\r\n        const Materialer = [['Metal', 0.3], ['Isolering', 0.2]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nexport function simpleInWall(material) {\r\n    // Beton, Træ, Mursten, Gips\r\n    if (material === 'Beton') {\r\n        const Materialer = [['Beton', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Mursten') {\r\n        const Materialer = [['Mursten', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Træ') {\r\n        const Materialer = [['Træ', 0.05]]\r\n        return Materialer\r\n    } else if (material === 'Gips') {\r\n        const Materialer = [['Gips', 0.05]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n} \r\n\r\nexport function roofTypeValue(roofType) {\r\n    //Saddel, Fladt, Valm, Skråt\r\n    if (roofType === 'Saddel') {\r\n        const roofAreaConst = 1.2\r\n        return roofAreaConst\r\n    } else if (roofType === 'Fladt') {\r\n        const roofAreaConst = 1.154\r\n        return roofAreaConst\r\n    } else if (roofType === 'Valm') {\r\n        const roofAreaConst = 1.270\r\n        return roofAreaConst\r\n    } else if (roofType === 'Skråt') {\r\n        const roofAreaConst = 1.064\r\n        return roofAreaConst\r\n    } else {\r\n        return 1\r\n    }\r\n}\r\n\r\nexport function foundationTypeValue(foundationType) {\r\n    //Linje, Stribe, Punkt\r\n    if (foundationType === 'Linje') {\r\n        const foundationAreaConst = [0, 1]\r\n        return foundationAreaConst\r\n    } else if (foundationType === 'Stribe') {\r\n        const foundationAreaConst = [0.1, 1]\r\n        return foundationAreaConst\r\n    } else if (foundationType === 'Punkt') {\r\n        const foundationAreaConst = [0.1, 0]\r\n        return foundationAreaConst\r\n    } else {\r\n        return 1\r\n    }\r\n}\r\n\r\n\r\n","const items = [\r\n    {\r\n      id: 0,\r\n      name: \"Klintevej 18, 4000\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Chr Winthers Vej 20B, 2800\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Postmosen 34, 3400\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Tesdorpfsvej 73, 2000\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Tornevangsvej 14, 3460\",\r\n    },\r\n  ]; \r\n\r\n  export default items","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDzIX2onzsXrEtuNmovSkCH6qDMWYWW_4I\",\r\n    authDomain: \"bygningspas.firebaseapp.com\",\r\n    databaseURL: \"https://bygningspas-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"bygningspas\",\r\n    storageBucket: \"bygningspas.appspot.com\",\r\n    messagingSenderId: \"1056938501952\",\r\n    appId: \"1:1056938501952:web:1f97e62acb976a11babca5\",\r\n    measurementId: \"G-335D61C3DJ\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics()\r\n  export const db = firebase.database();\r\n\r\nexport default firebase;","import React from 'react';\nimport './SearchBar.css';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\nimport items from '../../items/items'\nimport { db } from \"../../util/firebase\";\nimport { IconContext } from \"react-icons\";\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\nimport ReactTooltip from 'react-tooltip';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addressSelect: '',\n                  addressSelected: false,\n                  addressInfo: []}\n\n    this.handleOnAddressSelect = this.handleOnAddressSelect.bind(this)\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleOnFocus = this.handleOnFocus.bind(this);\n  }\n\n  handleOnAddressSelect = (item) => {\n    const address = item.name;\n    db.ref(address).on(\"value\", snapshot => {\n        let allInfo = [];\n        snapshot.forEach(snap => {\n          allInfo.push(snap.val());\n        });\n        this.setState({ addressInfo: allInfo });\n        console.log(this.state.addressInfo)\n      });\n  }\n\n  handleOnSelect = () => {\n    const address = this.state.addressInfo[7];\n    const area = this.state.addressInfo[0];\n    const floors = this.state.addressInfo[3];\n    const built = this.state.addressInfo[1];\n    const selectAddress = true;\n    const location = this.state.addressInfo[5];\n    const goBack = false;\n    const floorHeight = 2.5;\n    const roofType = this.state.addressInfo[8].roof;\n    const foundationType = this.state.addressInfo[8].foundation;\n    const energy = this.state.addressInfo[2];\n    this.props.onChange(address,area,floors,built,selectAddress,location,goBack,floorHeight,roofType,foundationType,energy)\n  }\n\n  handleOnFocus = () => {\n    console.log(\"Focused\");\n  }\n\n  render() {\n    if (this.props.building.goBack === true) {\n    return (\n      <div className='SearchPage'>\n        <div className='PageHeader'>\n          <h1>Bygningspas</h1>\n        </div>\n        <div className=\"SearchBar\">\n          <header className=\"SearchHeader\">\n              <div className=\"SearchBar-fields\" style={{ width: 300, margin: 20 }}>\n                <ReactSearchAutocomplete\n                placeholder=\"Adresse\" \n                items = {items}\n                onSelect={this.handleOnAddressSelect}\n                onFocus={this.handleOnFocus}\n                styling={{ zIndex: 2 }} // To display it on top of the search box below\n                autoFocus\n              />\n              <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"searchInfo\" }}>\n                <div>\n                  <BsFillInfoCircleFill data-tip=\"\"/>\n                  <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true'>\n                    <p>Tilgængelige addresser er:</p>\n                    <ul className='ToolTipList'>\n                      <li>Chr. Winthers Vej 20B, 2800</li>\n                      <li>Klintevej 18, 4000</li>\n                      <li>Postmosen 34, 3400</li>\n                      <li>Tesdorpfsvej 73, 2000</li>\n                      <li>Tornevangsvej 14, 3460</li>\n                    </ul>\n                  </ReactTooltip>\n                </div>\n              </IconContext.Provider>\n              <a className='buttonSearch' onClick={this.handleOnSelect}>Søg</a>\n            </div>\n          </header>\n        </div>\n      </div>\n      \n    );\n    } else {\n      return(\n        <div></div>\n      )\n    }\n  }\n}\n\nexport default SearchBar;","import React from 'react';\r\nimport ReactStreetview from 'react-streetview';\r\n\r\nclass BuildingView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        // see https://developers.google.com/maps/documentation/javascript\r\n        const googleMapsApiKey = 'AIzaSyCwIG4lbTXNcDjbNAetvu3XMiiUYJm78Tc';\r\n\r\n        // see https://developers.google.com/maps/documentation/javascript/3.exp/reference#StreetViewPanoramaOptions\r\n        const streetView = {\r\n            position: {lat: this.props.building.location[0], lng: this.props.building.location[1]},\r\n            pov: {heading: this.props.building.location[2], pitch: this.props.building.location[3]},\r\n            zoom: 1\r\n        };\r\n\r\n        return (\r\n            <div style={{\r\n                width: '550px',\r\n                height: '550px',\r\n                backgroundColor: '#eeeeee'\r\n            }}>\r\n                <ReactStreetview\r\n                    apiKey={googleMapsApiKey}\r\n                    streetViewPanoramaOptions={streetView}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default BuildingView","export default __webpack_public_path__ + \"static/media/Saddel.6086a323.jpg\";","export default __webpack_public_path__ + \"static/media/Valm.c83afb79.jpg\";","export default __webpack_public_path__ + \"static/media/Skråt.90771ca1.jpg\";","export default __webpack_public_path__ + \"static/media/Fladt.8f7a7c76.jpg\";","import React from 'react'\r\nimport './RoofTypeImage.css'\r\nimport saddel from './Saddel.jpg'\r\nimport valm from './Valm.jpg'\r\nimport skråt from './Skråt.jpg'\r\nimport fladt from './Fladt.jpg'\r\n\r\nclass RoofTypeImage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.roofType === 'Saddel') {\r\n            return <img src={saddel}/>\r\n        } else if (this.props.roofType === 'Fladt') {\r\n            return <img src={fladt}/>\r\n        } else if (this.props.roofType === 'Skråt') {\r\n            return <img src={skråt}/>\r\n        } else if (this.props.roofType === 'Valm') {\r\n            return <img src={valm}/>\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default RoofTypeImage","export default __webpack_public_path__ + \"static/media/Linje.81eec288.jpg\";","export default __webpack_public_path__ + \"static/media/Punkt.272f955c.jpg\";","export default __webpack_public_path__ + \"static/media/Stribe.0febb20f.jpg\";","import React from 'react'\r\nimport './FoundationTypeImage.css'\r\nimport linje from './Linje.jpg'\r\nimport punkt from './Punkt.jpg'\r\nimport stribe from './Stribe.jpg'\r\n\r\nclass FoundationTypeImage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.foundationType === 'Linje') {\r\n            return <img src={linje}/>\r\n        } else if (this.props.foundationType === 'Punkt') {\r\n            return <img src={punkt}/>\r\n        } else if (this.props.foundationType === 'Stribe') {\r\n            return <img src={stribe}/>\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default FoundationTypeImage","import React from 'react'\r\nimport { db } from \"../../util/firebase\";\r\nimport './updateButton.css'\r\n\r\nclass UpdateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.updateData = this.updateData.bind(this)\r\n        this.updateData2 = this.updateData2.bind(this)\r\n        this.updateData3 = this.updateData3.bind(this)\r\n    }\r\n\r\n    updateData() {\r\n        const wall = this.props.materials.wall\r\n        const roof = this.props.materials.roof\r\n        const floor = this.props.materials.floor\r\n        const foundation = this.props.materials.foundation\r\n        const inwall = this.props.materials.inwall\r\n        const windows = this.props.materials.windows\r\n\r\n            return db\r\n            .ref(`${this.props.building.address}/materials`)\r\n            .update(\r\n                {wall,roof,floor,foundation,inwall,windows},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ wall: this.props.materials.wall,\r\n                                roof: this.props.materials.roof,\r\n                                floor: this.props.materials.floor,\r\n                                foundation: this.props.materials.foundation,\r\n                                inwall: this.props.materials.inwall,\r\n                                windows: this.props.materials.windows});\r\n            })\r\n      }\r\n\r\n    updateData2() {\r\n        const roof = this.props.building.roofType\r\n        const foundation = this.props.building.foundationType\r\n\r\n            return db\r\n            .ref(`${this.props.building.address}/types`)\r\n            .update(\r\n                {roof,foundation},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ roof: this.props.building.roofType,\r\n                                foundation: this.props.building.foundationType});\r\n            })\r\n      }\r\n\r\n    updateData3() {\r\n        const area = this.props.building.area\r\n\r\n            return db\r\n            .ref(this.props.building.address)\r\n            .update(\r\n                {area},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ area: this.props.building.area});\r\n            })\r\n      }\r\n\r\n      updateData4() {\r\n          const roofS = this.props.materials.roofS\r\n          const wallS = this.props.materials.wallS\r\n          const floorS = this.props.materials.floorS\r\n          const foundationS = this.props.materials.foundationS\r\n          const inwallS = this.props.materials.inwallS\r\n\r\n          return db\r\n            .ref(`${this.props.building.address}/materials`)\r\n            .update(\r\n                {roofS,wallS,floorS,foundationS,inwallS},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ roofS: this.props.building.roofS,\r\n                                wallS: this.props.building.wallS,\r\n                                floorsS: this.props.building.floorsS,\r\n                                foundationS: this.props.building.foundationS,\r\n                                inwallS: this.props.building.inwallS});\r\n            })\r\n      }\r\n\r\n    render() {\r\n    if (this.props.materials.wall.length === 0 || this.props.materials.roof.length === 0 || this.props.materials.floor.length === 0 || this.props.materials.foundation.length === 0 || this.props.materials.inwall.length === 0) {\r\n            return(\r\n                <div></div>\r\n            )\r\n        } else {\r\n            return (\r\n            <div className='buttonDivUpdate'>\r\n                <a className='buttonUpdate' onClick={() => {this.updateData(); this.updateData2(); this.updateData3(); this.updateData4();}}>Gem</a>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateButton","import React from 'react'\r\nimport Dropdown from 'react-dropdown';\r\nimport './MaterialList.css'\r\nimport Toggle from 'react-toggle'\r\nimport Results from '../Results/Results'\r\nimport ResultsSimple from '../ResultsSimple/ResultsSimple'\r\nimport UpdateButton from './updateButton'\r\nimport {RangeStepInput} from 'react-range-step-input';\r\nimport { db } from \"../../util/firebase\";\r\nimport { simpleRoof, simpleWall, simpleFloor, simpleFoundation, simpleInWall } from '../../functions/simpleFunctions'\r\nimport { IconContext } from \"react-icons\";\r\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Options = ['Beton', 'Træ', 'Skifer', 'Tegl', 'Isolering', 'Tagpap', 'Mursten', 'Metal', 'Gips', 'Sten']\r\nconst wallOptions = ['Beton', 'Træ', 'Mursten']\r\nconst floorOptions = ['Beton', 'Træ', 'Sten']\r\nconst roofOptions = ['Tegl', 'Skifer', 'Tagpap']\r\nconst foundationOptions = ['Beton', 'Skrue']\r\nconst inWallOptions = ['Beton', 'Gips', 'Træ', 'Mursten']\r\nconst windowOptions = ['1-lag', '2-lag', '3-lag']\r\n\r\nclass MaterialList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {wall: [],\r\n                      wallS: [],\r\n                      wallM: '',\r\n                      wallP: 0.1,\r\n\r\n\r\n                      roof: [],\r\n                      roofS: [],\r\n                      roofM: '',\r\n                      roofP: 0.1,\r\n\r\n                      floor: [],\r\n                      floorS: [],\r\n                      floorM: '',\r\n                      floorP: 0.1,\r\n\r\n                      foundation: [],\r\n                      foundationS: [],\r\n                      foundationM: '',\r\n                      foundationP: 0.1,\r\n\r\n                      inwall: [],\r\n                      inwallS: [],\r\n                      inwallM: '',\r\n                      inwallP: 0.1,\r\n\r\n                      windows: [],\r\n                    \r\n                      advanced: false}\r\n                      \r\n        this.addWallItem = this.addWallItem.bind(this)\r\n        this.addWallMaterial = this.addWallMaterial.bind(this)\r\n        this.addWallPercentage = this.addWallPercentage.bind(this)\r\n        this.removeWallItem = this.removeWallItem.bind(this)\r\n        this.addSimpleWall = this.addSimpleWall.bind(this)\r\n        \r\n        this.addRoofItem = this.addRoofItem.bind(this)\r\n        this.addRoofMaterial = this.addRoofMaterial.bind(this)\r\n        this.addRoofPercentage = this.addRoofPercentage.bind(this)\r\n        this.removeRoofItem = this.removeRoofItem.bind(this)\r\n        this.addSimpleRoof = this.addSimpleRoof.bind(this)\r\n\r\n        this.addFloorItem = this.addFloorItem.bind(this)\r\n        this.addFloorMaterial = this.addFloorMaterial.bind(this)\r\n        this.addFloorPercentage = this.addFloorPercentage.bind(this)\r\n        this.removeFloorItem = this.removeFloorItem.bind(this)\r\n        this.addSimpleFloor = this.addSimpleFloor.bind(this)\r\n        \r\n        this.addFoundationItem = this.addFoundationItem.bind(this)\r\n        this.addFoundationMaterial = this.addFoundationMaterial.bind(this)\r\n        this.addFoundationPercentage = this.addFoundationPercentage.bind(this)\r\n        this.removeFoundationItem = this.removeFoundationItem.bind(this)\r\n        this.addSimpleFoundation = this.addSimpleFoundation.bind(this)\r\n\r\n        this.addInWallItem = this.addInWallItem.bind(this)\r\n        this.addInWallMaterial = this.addInWallMaterial.bind(this)\r\n        this.addInWallPercentage = this.addInWallPercentage.bind(this)\r\n        this.removeInWallItem = this.removeInWallItem.bind(this)\r\n        this.addSimpleInWall = this.addSimpleInWall.bind(this)\r\n\r\n        this.addWindowItem = this.addWindowItem.bind(this)\r\n        \r\n\r\n        this.toggleAdvanced = this.toggleAdvanced.bind(this)\r\n        this.toggleSimple = this.toggleSimple.bind(this)\r\n\r\n        this.updateData = this.updateData.bind(this)\r\n    }\r\n\r\n      componentDidMount() {\r\n        db.ref(this.props.building.address).on(\"value\", snapshot => {\r\n            let allInfo = [];\r\n            snapshot.forEach(snap => {\r\n              allInfo.push(snap.val());\r\n            });\r\n            this.setState({ wall: allInfo[6].wall,\r\n                            roof: allInfo[6].roof,\r\n                            floor: allInfo[6].floor,\r\n                            foundation: allInfo[6].foundation,\r\n                            inwall: allInfo[6].inwall,\r\n                            windows: allInfo[6].windows,\r\n\r\n                            wallS: allInfo[6].wallS,\r\n                            roofS: allInfo[6].roofS,\r\n                            floorS: allInfo[6].floorS,\r\n                            foundationS: allInfo[6].foundationS,\r\n                            inwallS: allInfo[6].inwallS});\r\n          });\r\n      }\r\n\r\n      updateData() {\r\n        const wall = this.state.wall\r\n        const roof = this.state.roof\r\n        const floor = this.state.floor\r\n        const foundation = this.state.foundation\r\n\r\n            return db\r\n            .ref(`${this.props.building.address}/materials`)\r\n            .update(\r\n                {wall,roof,floor,foundation},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ wall: this.state.wall,\r\n                                roof: this.state.roof,\r\n                                floor: this.state.floor,\r\n                                foundation: this.state.foundation});\r\n            });\r\n      }\r\n      \r\n\r\n    //-------------------WALL-----------------------\r\n    //#region\r\n    addWallItem() {\r\n        this.setState({ wall: [...this.state.wall, [this.state.wallM, this.state.wallP]] }) \r\n    }\r\n\r\n    addWallMaterial(item) {\r\n        this.setState({ wallM: item.value }) \r\n    }\r\n\r\n    addWallPercentage(item) {\r\n        const newVal = item.target.value;\r\n        this.setState({ wallP: newVal }) \r\n    }\r\n\r\n    removeWallItem() {\r\n        this.setState({ wall: this.state.wall.slice(0,this.state.wall.length-1)})\r\n    }\r\n\r\n    addSimpleWall(item) {\r\n        this.setState({ wallS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------ROOF-----------------------\r\n    //#region\r\n    addRoofItem(item) {\r\n        this.setState({ roof: [...this.state.roof, [this.state.roofM, this.state.roofP]] }) \r\n    }\r\n\r\n    addRoofMaterial(item) {\r\n        this.setState({ roofM: item.value }) \r\n    }\r\n\r\n    addRoofPercentage(item) {\r\n        this.setState({ roofP: item.target.value }) \r\n    }\r\n\r\n    removeRoofItem() {\r\n        this.setState({ roof: this.state.roof.slice(0,this.state.roof.length-1)})\r\n    }\r\n\r\n    addSimpleRoof(item) {\r\n        this.setState({ roofS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------FLOOR-----------------------\r\n    //#region\r\n    addFloorItem(item) {\r\n        this.setState({ floor: [...this.state.floor, [this.state.floorM, this.state.floorP]] }) \r\n    }\r\n\r\n    addFloorMaterial(item) {\r\n        this.setState({ floorM: item.value})\r\n    }\r\n\r\n    addFloorPercentage(item) {\r\n        this.setState({ floorP: item.target.value})\r\n    }\r\n\r\n    removeFloorItem() {\r\n        this.setState({ floor: this.state.floor.slice(0,this.state.floor.length-1)})\r\n    }\r\n\r\n    addSimpleFloor(item) {\r\n        this.setState({ floorS: item.value})\r\n    }\r\n    //#endregion\r\n    \r\n    //-------------------FOUNDATION-----------------------\r\n    //#region\r\n    addFoundationItem(item) {\r\n        this.setState({ foundation: [...this.state.foundation, [this.state.foundationM, this.state.foundationP]] }) \r\n    }\r\n\r\n    addFoundationMaterial(item) {\r\n        this.setState({ foundationM: item.value})\r\n    }\r\n\r\n    addFoundationPercentage(item) {\r\n        this.setState({ foundationP: item.target.value})\r\n    }\r\n\r\n    removeFoundationItem() {\r\n        this.setState({ foundation: this.state.foundation.slice(0,this.state.foundation.length-1)})\r\n    }\r\n\r\n    addSimpleFoundation(item) {\r\n        this.setState({ foundationS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------INWALL-----------------------\r\n    //#region\r\n    addInWallItem() {\r\n        this.setState({ inwall: [...this.state.inwall, [this.state.inwallM, this.state.inwallP]] }) \r\n    }\r\n\r\n    addInWallMaterial(item) {\r\n        this.setState({ inwallM: item.value }) \r\n    }\r\n\r\n    addInWallPercentage(item) {\r\n        const newVal = item.target.value;\r\n        this.setState({ inwallP: newVal }) \r\n    }\r\n\r\n    removeInWallItem() {\r\n        this.setState({ inwall: this.state.inwall.slice(0,this.state.inwall.length-1)})\r\n    }\r\n\r\n    addSimpleInWall(item) {\r\n        this.setState({ inwallS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------WINDOWS-----------------------\r\n    //#region\r\n    addWindowItem(item) {\r\n        this.setState({ windows: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------TOGGLE-----------------------\r\n    //#region\r\n    toggleAdvanced() {\r\n        this.setState({advanced: true})\r\n    }\r\n\r\n    toggleSimple() {\r\n        this.setState({advanced: false})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------FUNCTIONS-----------------------\r\n\r\n    render () {\r\n        if (this.state.advanced == true) {\r\n        return (\r\n            <div>\r\n                <div className='MaterialHeader'>\r\n                    <h1>Materialer</h1>\r\n                    <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"materialInfo\" }}>\r\n                            <div>\r\n                                <BsFillInfoCircleFill data-tip=\"\" data-for='2'/>\r\n                                <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true' id='2'>\r\n                                    <ol className='ToolTipList' type='A'>\r\n                                    <li>Materialer vælges på 2 måder - simpelt eller avanceret</li>\r\n                                    <li>I den simple udgave vælges et preset for hvert materiale, som herefter <br></br> bestemmer hvilke materialer og tykkelser der indgår</li>\r\n                                    <li>I den avancerede udgave tilføjer brugeren selv materialer og materialetykkelser til hver af bygningsdelene</li>\r\n                                    </ol>\r\n                                </ReactTooltip>\r\n                            </div>\r\n                    </IconContext.Provider>\r\n                </div>\r\n                <div className='ToggleButton'>\r\n                        <p>Avanceret</p>\r\n                        <Toggle\r\n                            id='material-status'\r\n                            onChange={this.toggleSimple} />\r\n                </div>\r\n                <div className='materialLists'>\r\n                    <div className='materialSection'>\r\n                        <h2>Ydervægge</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addWallMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.wallP} step={0.01}\r\n                                    onChange={this.addWallPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.wallP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.wall.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addWallItem}>Tilføj</button>\r\n                        <button onClick={this.removeWallItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Tag</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addRoofMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.roofP} step={0.01}\r\n                                    onChange={this.addRoofPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.roofP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.roof.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addRoofItem}>Tilføj</button>\r\n                        <button onClick={this.removeRoofItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Gulv</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addFloorMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.floorP} step={0.01}\r\n                                    onChange={this.addFloorPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.floorP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.floor.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addFloorItem}>Tilføj</button>\r\n                        <button onClick={this.removeFloorItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Fundament</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addFoundationMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.foundationP} step={0.01}\r\n                                    onChange={this.addFoundationPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.foundationP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.foundation.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addFoundationItem}>Tilføj</button>\r\n                        <button onClick={this.removeFoundationItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Indervægge</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addInWallMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.inwallP} step={0.01}\r\n                                    onChange={this.addInWallPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.inwallP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.inwall.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addInWallItem}>Tilføj</button>\r\n                        <button onClick={this.removeInWallItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                            <h2>Vinduer</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.windows}</p>\r\n                                <Dropdown className='drop3' options={windowOptions} onChange={this.addWindowItem} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{this.state.windows}</div>\r\n                    </div>\r\n                </div>\r\n                <Results materials={this.state} building={this.props.building}/>\r\n                <UpdateButton materials={this.state} building={this.props.building}/>\r\n            </div>\r\n        )\r\n        } else {\r\n            return(\r\n                <div>\r\n                    <div className='MaterialHeader'>\r\n                        <h1>Materialer</h1>\r\n                        <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"materialInfo\" }}>\r\n                                <div>\r\n                                <BsFillInfoCircleFill data-tip=\"\" data-for='3'/>\r\n                                <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true' id='3'>\r\n                                    <ul className='ToolTipList' type='A'>\r\n                                        <li>Materialer vælges på 2 måder - simpelt eller avanceret</li>\r\n                                        <li>I den simple udgave vælges et preset for hvert materiale, som herefter <br></br> bestemmer hvilke materialer og tykkelser der indgår</li>\r\n                                        <li>I den avancerede udgave tilføjer brugeren selv materialer og materialetykkelser til hver af bygningsdelene</li>\r\n                                    </ul>\r\n                                </ReactTooltip>\r\n                                </div>\r\n                        </IconContext.Provider>\r\n                    </div>\r\n                    <div className='ToggleButton'>\r\n                        <p>Avanceret</p>\r\n                        <Toggle\r\n                            id='material-status'\r\n                            onChange={this.toggleAdvanced} />\r\n                    </div>\r\n                    <div className='materialLists'>\r\n                        <div className='materialSection'>\r\n                            <h2>Ydervægge</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.wallS}</p>\r\n                                <Dropdown className='drop2' options={wallOptions} onChange={this.addSimpleWall} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleWall(this.state.wallS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Tag</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.roofS}</p>\r\n                                <Dropdown className='drop2' options={roofOptions} onChange={this.addSimpleRoof} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleRoof(this.state.roofS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Gulv</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.floorS}</p>\r\n                                <Dropdown className='drop2' options={floorOptions} onChange={this.addSimpleFloor} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleFloor(this.state.floorS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Fundament</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.foundationS}</p>\r\n                                <Dropdown className='drop2' options={foundationOptions} onChange={this.addSimpleFoundation} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleFoundation(this.state.foundationS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Indervægge</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.inwallS}</p>\r\n                                <Dropdown className='drop2' options={inWallOptions} onChange={this.addSimpleInWall} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleInWall(this.state.inwallS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Vinduer</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.windows}</p>\r\n                                <Dropdown className='drop2' options={windowOptions} onChange={this.addWindowItem} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{this.state.windows}</div>\r\n                        </div>\r\n                    </div>\r\n                    <ResultsSimple materials={this.state} building={this.props.building}/>\r\n                    <UpdateButton materials={this.state} building={this.props.building}/>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MaterialList","import React from 'react';\nimport './Building.css';\nimport BuildingView from '../BuildingView/BuildingView'\nimport RoofTypeImage from './RoofTypeImage/RoofTypeImage'\nimport FoundationTypeImage from './FoundationTypeImage/FoundationTypeImage'\nimport MaterialList from '../MaterialList/MaterialList'\nimport Dropdown from 'react-dropdown';\nimport { IconContext } from \"react-icons\";\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\nimport ReactTooltip from 'react-tooltip';\nimport { roofTypeValue, foundationTypeValue } from '../../functions/simpleFunctions'\n\nconst roofTypeOptions = [\n  'Saddel', 'Fladt', 'Valm', 'Skråt'\n]\n\nconst foundationTypeOptions = [\n  'Linje', 'Punkt', 'Stribe'\n]\n\nclass Building extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleAreaChange = this.handleAreaChange.bind(this)\n    this.handleHeightChange = this.handleHeightChange.bind(this)\n    this.handleRoofTypeSelect = this.handleRoofTypeSelect.bind(this)\n    this.handleFoundationTypeSelect = this.handleFoundationTypeSelect.bind(this)\n  }\n\n  handleAreaChange(inputArea) {\n    const area = inputArea.target.value;\n    this.props.onAreaChange(area)\n  }\n\n  handleHeightChange(inputHeight) {\n    const height = inputHeight.target.value;\n    this.props.onFloorHeightChange(height)\n  }\n\n  handleRoofTypeSelect(inputRoofType) {\n    const roofType = inputRoofType.value;\n    this.props.onRoofTypeChange(roofType)\n  }\n\n  handleFoundationTypeSelect(inputFoundationType) {\n    const foundationType = inputFoundationType.value;\n    this.props.onFoundationTypeChange(foundationType)\n  }\n\n  render() {\n\n    const area = this.props.building.area\n    const floors = this.props.building.floors\n    const floorHeight = this.props.building.floorHeight\n    const totalArea = area*floors\n    const perimeter = Math.floor(Math.sqrt(area)*4)\n    const wallArea = Math.floor(perimeter*(floors*floorHeight))\n    const roofArea = Math.floor(area*roofTypeValue(this.props.building.roofType))\n    const windowArea = Math.floor(wallArea*0.15)\n    const built = this.props.building.built\n    const age = 2021-built\n\n    if (this.props.building.selectAddress === true && this.props.building.selectEdit === '') {\n    return (\n      <div className=\"Building\">\n        <div className='BuildingHeader'>\n          <h1>Bygningsinformation</h1>\n          <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"informationInfo\" }}>\n                <div>\n                  <BsFillInfoCircleFill data-tip=\"\" data-for='4'/>\n                  <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true' id='4'>\n                    <ol className='ToolTipList' type='A'>\n                      <li>Værdier med mørkeblå baggrund kan redigeres</li>\n                    </ol>\n                  </ReactTooltip>\n                </div>\n          </IconContext.Provider>\n        </div>\n        <div className=\"image-container\">\n          <BuildingView building={this.props.building}/>\n        </div>\n        <h2 className='address-title'>{this.props.building.address}</h2>\n        <div className='information-container'>\n          <div className='paravar'>\n            <p className='parameter'><span>Etageareal [m2]</span></p>\n            <input className='cVariable' value={area} pattern=\"[0-9]*\" onChange={this.handleAreaChange}/>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Etagehøjde [m]</span></p>\n            <input className='cVariable' value={floorHeight} pattern=\"[0-9]*\" onChange={this.handleHeightChange}/>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Etager</span></p>\n            <p className='variable'><span>{floors}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Samlet areal [m2]</span></p>\n            <p className='variable'><span>{totalArea}</span></p>\n          </div>\n        </div>\n        <div className='information-container' id='i2'>\n          <div className='paravar'>\n            <p className='parameter'><span>Omkreds [m]</span></p>\n            <p className='variable'><span>{perimeter}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Vægareal [m2]</span></p>\n            <p className='variable'><span>{wallArea}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Tagareal [m2]</span></p>\n            <p className='variable'><span>{roofArea}</span></p>\n          </div>\n        </div>\n        <div className='information-container' id='i3'>\n          <div className='paravar'>\n            <p className='parameter'><span>Vinduesareal [m2]</span></p>\n            <p className='variable'><span>{windowArea}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Opført</span></p>\n            <p className='variable'><span>{built}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Alder</span></p>\n            <p className='variable'><span>{age}</span></p>\n          </div>\n        </div>\n        <div className='typeContainer'>\n          <div className='compTypeContainer'>\n            <h2>Tagtype</h2>\n            <Dropdown options={roofTypeOptions} onChange={this.handleRoofTypeSelect} placeholder={this.props.building.roofType} />\n            <RoofTypeImage roofType={this.props.building.roofType}/>\n          </div>\n          <div className='compTypeContainer'>\n            <h2>Fundamenttype</h2>\n            <Dropdown options={foundationTypeOptions} onChange={this.handleFoundationTypeSelect} placeholder={this.props.building.foundationType} />\n            <FoundationTypeImage foundationType={this.props.building.foundationType}/>\n          </div>\n        </div>\n        <div className='EnergyHeader'>\n          <h1>Energi</h1>\n          <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"energyInfo\" }}>\n                <div>\n                  <BsFillInfoCircleFill data-tip=\"\"/>\n                  <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true'>\n                    <ol className='ToolTipList' type='A'>\n                      <li>1) Data er baseret på resultater fra Energistyrelsen</li>\n                      <li>2) Energiklassen kan variere fra A-F, hvor A er bedst</li>\n                      <li>3) Det beregnede forbrug er et estimat, og kan være væsentligt større eller mindre i realiteten</li>\n                      <li>4) Forbedring beskriver en forbedring der kan foretages, som vil reducere energiforbrugt i bygningen</li>\n                      <li>5) Investering er den sum penge det kræver at implementere forbedringen</li>\n                      <li>6) Potentiel besparelse er den årlige besparelse, som den implementerede forbedring vil medføre</li>\n                    </ol>\n                  </ReactTooltip>\n                </div>\n          </IconContext.Provider>\n        </div>\n        <div className='energyContainer'>\n          <div className='EIC'>\n            <p className='energyData'>Energiklasse:</p><p className='energyData2'>{this.props.building.energy[0]}</p>\n            <p className='energyData'>Beregnet forbrug:</p><p className='energyData2'>{this.props.building.energy[2]} kr/år</p>\n            <p className='energyData'>Varmeforsyning:</p><p className='energyData2'>{this.props.building.energy[5]}</p>\n          </div>\n          <div className='EIC'>\n            <p className='energyData'>Potentiel besparelse:</p><p className='energyData2'>{this.props.building.energy[1]} kr/år</p>\n            <p className='energyData'>Investering:</p><p className='energyData2'>{this.props.building.energy[3]} kr</p>\n            <p className='energyData'>Forbedring:</p><p className='energyData2'>{this.props.building.energy[4]}</p>\n          </div>\n        </div>\n        {/*<Download building={this.props.building}/>*/}\n        <div className='MaterialSection'>\n          <MaterialList building={this.props.building}/>\n        </div>\n      </div>\n    )\n    } else {\n      return(\n        <div></div>\n      )\n    }\n  }\n}\nexport default Building;","import React from 'react'\r\nimport './Material.css'\r\n\r\n\r\nclass Material extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSimpleClick = this.handleSimpleClick.bind(this);\r\n    this.handleAdvancedClick = this.handleAdvancedClick.bind(this);\r\n    this.handleBackClick = this.handleBackClick.bind(this);\r\n  }\r\n\r\n  handleSimpleClick() {\r\n    const edit = 'simple'\r\n    this.props.onChange1(edit)\r\n  }\r\n\r\n  handleAdvancedClick() {\r\n    const edit = 'advanced'\r\n    this.props.onChange1(edit)\r\n  }\r\n\r\n  handleBackClick() {\r\n    const goBack = true\r\n    const selectAddress = false\r\n    this.props.onChange2(goBack,selectAddress)\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.building.selectAddress === true && this.props.building.selectEdit === '') {\r\n    return(\r\n      <div className=\"mainMaterial\">\r\n        <div className=\"buttonDiv\">\r\n          <a className=\"buttonMaterial\" onClick={this.handleBackClick}>Tilbage</a>\r\n        </div>\r\n      </div>\r\n    )\r\n    } else {\r\n      return(\r\n        <div></div>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default Material","import React from 'react'\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport './Simple.css'\r\nimport { simpleRoof, simpleWall, simpleFloor, simpleFoundation } from '../../functions/simpleFunctions'\r\nimport { Pie, Bar } from 'react-chartjs-2';\r\n\r\nconst wallOptions = [\r\n    'Beton', 'Træ', 'Mursten'\r\n]\r\n\r\nconst roofOptions = [\r\n    'Skifer', 'Beton', 'Tagpap', 'Tegl'\r\n];\r\n\r\nconst floorOptions = [\r\n    'Beton', 'Træ'\r\n]\r\n\r\nconst foundationOptions = [\r\n    'Beton', 'Træ'\r\n]\r\n\r\nclass Simple extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            wallMaterial: [],\r\n            roofMaterial: [],\r\n            floorMaterial: [],\r\n            foundationMaterial: []\r\n        }\r\n\r\n        this.handleWallSelect = this.handleWallSelect.bind(this)\r\n        this.handleRoofSelect = this.handleRoofSelect.bind(this)\r\n        this.handleFloorSelect = this.handleFloorSelect.bind(this)\r\n        this.handleFoundationSelect = this.handleFoundationSelect.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleWallSelect(newMaterial) {\r\n        this.setState({wallMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleRoofSelect(newMaterial) {\r\n        this.setState({roofMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleFloorSelect(newMaterial) {\r\n        this.setState({floorMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleFoundationSelect(newMaterial) {\r\n        this.setState({foundationMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleClick() {\r\n        const edit = ''\r\n        this.props.onChange(edit)\r\n    }\r\n\r\n    render() {\r\n\r\n        //-----------------------------------------------------------------------------------\r\n        const area = this.props.building.area\r\n        const floors = this.props.building.floors\r\n        const totalArea = area*floors\r\n        const perimeter = Math.floor(Math.sqrt(area)*4)\r\n        const wallArea = perimeter*(floors*2.5)\r\n        const roofArea = Math.floor(area*1.1)\r\n        const windowArea = Math.floor(wallArea*0.15)\r\n        //-----------------------------------------------------------------------------------\r\n        const wallMaterials = simpleWall(this.state.wallMaterial)\r\n        const roofMaterials = simpleRoof(this.state.roofMaterial)\r\n        const floorMaterials = simpleFloor(this.state.floorMaterial)\r\n        const foundationMaterials = simpleFoundation(this.state.foundationMaterial)\r\n        //-----------------------------------------------------------------------------------\r\n        // Beton, Isolering, Træ, Mursten, Metal\r\n        const wallMaterialAmount = wallMaterials.map(x => Math.floor(x * wallArea * 0.5));\r\n\r\n        // Beton, Isolering, Træ, Metal\r\n        const floorMaterialAmount = floorMaterials.map(x => Math.floor(x * totalArea*0.3));\r\n\r\n        // Beton, Træ, Metal, Skifer, Tagpap, Tegl\r\n        const roofMaterialAmount = roofMaterials.map(x => Math.floor(x * roofArea * 0.2));\r\n\r\n        // Beton, Isolering, Træ, Metal\r\n        const foundationMaterialAmount = foundationMaterials.map(x => Math.floor(x * area * 0.5));\r\n\r\n        const wallData = {\r\n            labels: ['Beton', 'Isolering', 'Træ', 'Mursten', 'Metal'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: wallMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                  'rgba(153, 102, 255, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const roofData = {\r\n            labels: ['Beton', 'Træ', 'Metal', 'Skifer', 'Tagpap', 'Tegl'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: roofMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                  'rgba(153, 102, 255, 0.2)',\r\n                  'rgba(100, 152, 255, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                  'rgba(100, 152, 255, 0.2)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const floorData = {\r\n            labels: ['Beton', 'Isolering', 'Træ', 'Metal'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: floorMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const foundationData = {\r\n            labels: ['Beton', 'Isolering', 'Træ', 'Metal'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: foundationMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const allData = {\r\n          labels: ['1', '2', '3', '4', '5', '6'],\r\n          datasets: [\r\n            {\r\n              label: 'Væg',\r\n              data: wallMaterialAmount,\r\n              backgroundColor: 'rgb(255, 99, 132)',\r\n            },\r\n            {\r\n              label: 'Tag',\r\n              data: roofMaterialAmount,\r\n              backgroundColor: 'rgb(54, 162, 235)',\r\n            },\r\n            {\r\n              label: 'Gulv',\r\n              data: floorMaterialAmount,\r\n              backgroundColor: 'rgb(75, 192, 192)',\r\n            },\r\n            {\r\n              label: 'Fundament',\r\n              data: foundationMaterialAmount,\r\n              backgroundColor: 'rgb(75, 192, 192)',\r\n            },\r\n          ],\r\n        }\r\n\r\n        const allOptions = {\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  stacked: true,\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  stacked: true,\r\n                },\r\n              ],\r\n            },\r\n        }\r\n        \r\n\r\n\r\n        if (this.props.building.selectAddress === true && this.props.building.selectEdit === 'simple') {\r\n            return(\r\n                <div className='simpleMain'>\r\n                    <h2>REDIGER SIMPEL</h2>\r\n                    <h3 className ='simpleInfo'>{this.props.building.address}</h3>\r\n                    <div className='dropdownContainer'>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Ydervægge</p>\r\n                            <Dropdown options={wallOptions} onChange={this.handleWallSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={wallData} className='pieChart' style='height: 140px'/>\r\n                        </div>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Tag</p>\r\n                            <Dropdown options={roofOptions} onChange={this.handleRoofSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={roofData} className='pieChart'/>\r\n                        </div>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Terrændæk</p>\r\n                            <Dropdown options={floorOptions} onChange={this.handleFloorSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={floorData} className='pieChart'/>\r\n                        </div>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Fundament</p>\r\n                            <Dropdown options={foundationOptions} onChange={this.handleFoundationSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={foundationData} className='pieChart'/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='barContainer'>\r\n                      <Bar data={allData} options={allOptions} width={400} height={400}/>\r\n                    </div>\r\n                    <div className='simpleButtonContainer'>\r\n                        <a className=\"simpleButton\" onClick={this.handleClick}>Tilbage</a>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Simple","import React from 'react'\r\nimport './Advanced.css'\r\n\r\nclass Advanced extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleClick() {\r\n        const edit = ''\r\n        this.props.onChange(edit)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.building.selectAddress === true && this.props.building.selectEdit === 'advanced') {\r\n            return(\r\n                <div className='advancedMain'>\r\n                    <h2>REDIGER AVANCERET</h2>\r\n                    <h3>{this.props.building.address}</h3>\r\n                    <div className='advancedButtonContainer'>\r\n                        <a className=\"advancedButton\" onClick={this.handleClick}>Tilbage</a>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Advanced","import React from 'react';\nimport '../../reset.css'\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Building from '../Building/Building'\nimport Material from '../Material/Material'\nimport Simple from '../Simple/Simple'\nimport Advanced from '../Advanced/Advanced'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {imageSrc: '',\n                  address: '',\n                  area: '',\n                  floors: '',\n                  built: '',\n                  selectAddress: false,\n                  selectEdit: '',\n                  location: [],\n                  goBack: true,\n                  floorHeight: 2.5,\n                  roofType: 'Saddel',\n                  foundationType: 'Linje',\n                  energy: [],\n                  notes: []};\n\n    this.changeAddress = this.changeAddress.bind(this);\n    this.changeArea = this.changeArea.bind(this);\n    this.changeEdit = this.changeEdit.bind(this);\n    this.changeBack = this.changeBack.bind(this);\n    this.changeFloorHeight = this.changeFloorHeight.bind(this);\n    this.changeRoofType = this.changeRoofType.bind(this);\n    this.changeFoundationType = this.changeFoundationType.bind(this);\n  }\n\n  changeAddress(newAddress,newArea,newFloors,newBuilt,selectedAddress,newLocation,newGoBack,newFloorHeight,newRoofType, newFoundationType, newEnergy) {\n    this.setState({address: newAddress})\n    this.setState({area:newArea})\n    this.setState({floors: newFloors})\n    this.setState({built: newBuilt})\n    this.setState({selectAddress: selectedAddress})\n    this.setState({location: newLocation})\n    this.setState({goBack: newGoBack})\n    this.setState({floorHeight: newFloorHeight})\n    this.setState({roofType: newRoofType})\n    this.setState({foundationType: newFoundationType})\n    this.setState({energy: newEnergy})\n  } \n\n  changeArea(newArea) {\n    this.setState({area:newArea})\n  }\n\n  changeFloorHeight(newFloorHeight) {\n    this.setState({floorHeight: newFloorHeight})\n  }\n\n  changeRoofType(newRoofType) {\n    this.setState({roofType: newRoofType})\n  }\n\n  changeFoundationType(newFoundationType) {\n    this.setState({foundationType: newFoundationType})\n  }\n\n  changeEdit(newEdit) {\n    this.setState({selectEdit: newEdit})\n  }\n\n  changeBack(newGoBack, selectedAddress) {\n    this.setState({goBack: newGoBack})\n    this.setState({selectAddress: selectedAddress})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <SearchBar building={this.state} onChange={this.changeAddress}/>\n          <div className='Info'>\n            <Building building={this.state} onAreaChange={this.changeArea} onFloorHeightChange={this.changeFloorHeight}\n            onRoofTypeChange={this.changeRoofType} onFoundationTypeChange={this.changeFoundationType}/>\n            <Material building={this.state} onChange1={this.changeEdit} onChange2={this.changeBack}/>\n            <Simple building={this.state} onChange={this.changeEdit}/>\n            <Advanced building={this.state} onChange={this.changeEdit}/>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n        <App />,\ndocument.getElementById('root'));\n","import React from 'react'\r\nimport './Impacts.css'\r\n\r\nclass Impacts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {emissions: {},\r\n                     complete: false}\r\n\r\n        this.multiplyObj = this.multiplyObj.bind(this)\r\n        this.getMaterialEmission = this.getMaterialEmission.bind(this)\r\n        this.runEmissions = this.runEmissions.bind(this)\r\n        this.runPrices = this.runPrices.bind(this)\r\n        this.removeMissing = this.removeMissing.bind(this)\r\n        this.sumObjects = this.sumObjects.bind(this)\r\n    }\r\n\r\n    multiplyObj(obj,val) {\r\n        for (let key in obj) {\r\n            if (typeof obj[key] == 'number') {\r\n              obj[key] *= val;\r\n            }\r\n        } return obj\r\n    }\r\n\r\n    getMaterialEmission(arr,obj) {\r\n        const newEmission = {}\r\n        const newEmissions = obj\r\n        for (var x of arr) {\r\n            if (x[0] === 'Beton') {\r\n                newEmission.Beton = this.multiplyObj(newEmissions.Beton, x[1])\r\n            } \r\n            if (x[0] === 'Træ') {\r\n                newEmission.Træ = this.multiplyObj(newEmissions.Træ, x[1])\r\n            } \r\n            if (x[0] === 'Skifer') {\r\n                newEmission.Skifer = this.multiplyObj(newEmissions.Skifer, x[1])\r\n            } \r\n            if (x[0] === 'Tegl') {\r\n                newEmission.Tegl = this.multiplyObj(newEmissions.Tegl, x[1])\r\n            } \r\n            if (x[0] === 'Sten') {\r\n                newEmission.Fliser = this.multiplyObj(newEmissions.Fliser, x[1])\r\n            } \r\n            if (x[0] === 'Isolering') {\r\n                newEmission.Isolering = this.multiplyObj(newEmissions.Isolering, x[1])\r\n            } \r\n            if (x[0] === 'Pap') {\r\n                newEmission.Tagpap = this.multiplyObj(newEmissions.Tagpap, x[1])\r\n            } \r\n            if (x[0] === 'Mursten') {\r\n                newEmission.Mursten = this.multiplyObj(newEmissions.Mursten, x[1])\r\n            } \r\n            if (x[0] === 'Metal') {\r\n                newEmission.Metal = this.multiplyObj(newEmissions.Metal, x[1])\r\n            } \r\n            if (x[0] === 'Gips') {\r\n                newEmission.Gips = this.multiplyObj(newEmissions.Gips, x[1])\r\n            }\r\n        }\r\n        return newEmission\r\n    } \r\n\r\n    runEmissions() {\r\n        const emissions = {\r\n    \r\n            //M2 2cm\r\n            Fliser:     {GWP: 6.18*50,\r\n                        ODP: (4.96*Math.exp(-14))*50,\r\n                        POCP: 0.000326*50,\r\n                        AP: 0.00613*50,\r\n                        EP: 0.00119*50,\r\n                        ADPE: 7.81*Math.exp(-7)*50,\r\n                        ADPF: 97.66*50,\r\n                        PERT: 9.186*50,\r\n                        PENRT: 100.42*50,\r\n                        RSF: 0*50,\r\n                        NRSF: 0*50},\r\n        \r\n            Beton:      {GWP: 197,\r\n                        ODP: 5.36*Math.exp(-8),\r\n                        POCP: 0.023,\r\n                        AP: 0.287,\r\n                        EP: 0.0535,\r\n                        ADPE: 0.000634,\r\n                        ADPF: 900,\r\n                        PERT: 190,\r\n                        PENRT: 999,\r\n                        RSF: 193,\r\n                        NRSF: 348},\r\n        \r\n            Træ:        {GWP: 0,\r\n                        ODP: 6.49*Math.exp(-12),\r\n                        POCP: 0.059,\r\n                        AP: 0.667,\r\n                        EP: 0.152,\r\n                        ADPE: 6.75*Math.exp(-5),\r\n                        ADPF: 2494,\r\n                        PERT: 12719,\r\n                        PENRT: 2853,\r\n                        RSF: 0,\r\n                        NRSF: 0},\r\n            //M2 2cm\r\n            Tegl:       {GWP: 15.87*50,\r\n                        ODP: (1.14*Math.exp(-13))*50,\r\n                        POCP: 0.003*50,\r\n                        AP: 0.0123*50,\r\n                        EP: 0.0023*50,\r\n                        ADPE: 1.84*Math.exp(-6)*50,\r\n                        ADPF: 242*50,\r\n                        PERT: 21.34*50,\r\n                        PENRT: 248.8*50,\r\n                        RSF: 0*50,\r\n                        NRSF: 0*50},\r\n            //M2 2cm\r\n            Skifer:     {GWP: 15.03*50,\r\n                        ODP: (2.21*Math.exp(-13))*50,\r\n                        POCP: 0.0088*50,\r\n                        AP: 0.088*50,\r\n                        EP: 0.02*50,\r\n                        ADPE: 4.55*Math.exp(-6)*50,\r\n                        ADPF: 189*50,\r\n                        PERT: 49*50,\r\n                        PENRT: 202.9*50,\r\n                        RSF: 0*50,\r\n                        NRSF: 0}*50,\r\n        \r\n            Isolering:  {GWP: 40,\r\n                        ODP: 6.18*Math.exp(-13),\r\n                        POCP: 0.0097,\r\n                        AP: 0.18,\r\n                        EP: 0.026,\r\n                        ADPE: 8.53*Math.exp(-6),\r\n                        ADPF: 459,\r\n                        PERT: 78,\r\n                        PENRT: 481.1,\r\n                        RSF: 0.0068,\r\n                        NRSF: 0},\r\n            //M2 1cm\r\n            Tagpap:     {GWP: 5.36*100,\r\n                        ODP: (4.9*Math.exp(-14))*100,\r\n                        POCP: 0.0015*100,\r\n                        AP: 0.0084*100,\r\n                        EP: 0.0011*100,\r\n                        ADPE: 1.1*Math.exp(-6)*100,\r\n                        ADPF: 254*100,\r\n                        PERT: 9.46*100,\r\n                        PENRT: 258*100,\r\n                        RSF: 0*100,\r\n                        NRSF: 0*100},\r\n        \r\n            Mursten:    {GWP: 528,\r\n                        ODP: 3.03*Math.exp(-12),\r\n                        POCP: 0.079,\r\n                        AP: 0.45,\r\n                        EP: 0.084,\r\n                        ADPE: 5.4*Math.exp(-5),\r\n                        ADPF: 7980,\r\n                        PERT: 574,\r\n                        PENRT: 8150,\r\n                        RSF: 0,\r\n                        NRSF: 0},\r\n            \r\n            Metal:      {GWP: 1125,\r\n                        ODP: 1.95*Math.exp(-11),\r\n                        POCP: 0.4,\r\n                        AP: 2.164,\r\n                        EP: 0.219,\r\n                        ADPE: 0.000049,\r\n                        ADPF: 10200,\r\n                        PERT: 1516,\r\n                        PENRT: 11470,\r\n                        RSF: 0,\r\n                        NRSF: 0},\r\n            //2cm\r\n            Gips:       {GWP: 1.54*50,\r\n                        ODP: (1.44*Math.exp(-14))*50,\r\n                        POCP: 0.00001*50,\r\n                        AP: 0.0028*50,\r\n                        EP: 0.000088*50,\r\n                        ADPE: 2.48*Math.exp(-7)*50,\r\n                        ADPF: 32.68*50,\r\n                        PERT: 9.8*50,\r\n                        PENRT: 33.5*50,\r\n                        RSF: 0,\r\n                        NRSF: 0},\r\n        }\r\n\r\n        const newEmission = this.getMaterialEmission(this.props.amount,emissions)\r\n\r\n        this.setState({emissions: newEmission})\r\n        this.setState({complete: true})\r\n    }\r\n\r\n    runPrices(array) {\r\n        const newArray = []\r\n        const Beton = ['Beton',0]\r\n        const Træ = ['Træ',0]\r\n        const Skifer = ['Skifer',0]\r\n        const Tegl = ['Tegl',0]\r\n        const Isolering = ['Isolering',0]\r\n        const Tagpap = ['Pap',0]\r\n        const Mursten = ['Mursten',0]\r\n        const Gips = ['Gips', 0]\r\n        const Metal = ['Metal', 0]\r\n        const Sten = ['Sten', 0]\r\n\r\n        for (var x of array) {\r\n            if (x[0] === 'Træ') {\r\n                Træ[1] = x[1]*70\r\n            }\r\n            if (x[0] === 'Beton') {\r\n                Beton[1] = x[1]*60\r\n            }\r\n            if (x[0] === 'Skifer') {\r\n                Skifer[1] = x[1]*80\r\n            }\r\n            if (x[0] === 'Tegl') {\r\n                Tegl[1] = x[1]*85\r\n            }\r\n            if (x[0] === 'Isolering') {\r\n                Isolering[1] = x[1]*55\r\n            }\r\n            if (x[0] === 'Tagpap') {\r\n                Tagpap[1] = x[1]*20\r\n            }\r\n            if (x[0] === 'Mursten') {\r\n                Mursten[1] = x[1]*70\r\n            }\r\n            if (x[0] === 'Gips') {\r\n                Gips[1] = x[1]*40\r\n            }\r\n            if (x[0] === 'Metal') {\r\n                Metal[1] = x[1]*200\r\n            }\r\n            if (x[0] === 'Sten') {\r\n                Sten[1] = x[1]*85\r\n            }             \r\n        }\r\n        newArray.push(Beton) \r\n        newArray.push(Træ)\r\n        newArray.push(Skifer)\r\n        newArray.push(Tegl)\r\n        newArray.push(Isolering)\r\n        newArray.push(Tagpap)\r\n        newArray.push(Mursten)\r\n        newArray.push(Metal)\r\n        newArray.push(Gips)\r\n        newArray.push(Sten)\r\n        return newArray\r\n    }\r\n\r\n    removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n\r\n    sumObjects(...objs) {\r\n        return objs.reduce((a, b) => {\r\n          for (let k in b) {\r\n            if (b.hasOwnProperty(k))\r\n              a[k] = (a[k] || 0) + b[k];\r\n          }\r\n          return a;\r\n        }, {});\r\n    }\r\n\r\n    render() { \r\n        const ClimateEmissions = Object.entries(this.sumObjects(this.state.emissions.Beton,this.state.emissions.Isolering,this.state.emissions.Metal,this.state.emissions.Fliser,\r\n            this.state.emissions.Træ,this.state.emissions.Tegl,this.state.emissions.Skifer,this.state.emissions.Tagpap,this.state.emissions.Mursten,\r\n            this.state.emissions.Gips))\r\n\r\n        if (this.state.complete === false) {\r\n        return(\r\n            <div className='ImpactSection'>\r\n                <div className='ImpactHeader'>\r\n                    <h1>Klimapåvirkning</h1>\r\n                </div>\r\n                <a className='emissionUpdate' onClick={this.runEmissions}>Beregn/Opdater</a>\r\n                <button className='zipButton' onClick={this.downloadZip}>hent</button>\r\n                <p></p>\r\n            </div>\r\n        )\r\n        } else if (this.state.complete === true) {\r\n            return(\r\n                <div className='ImpactSection'>\r\n                    <div className='ImpactHeader'>\r\n                        <h1>Klimapåvirkning</h1>\r\n                    </div>\r\n                    <div>\r\n                        <a className='emissionUpdate' onClick={this.runEmissions}>Beregn/Opdater</a>\r\n                    </div>\r\n                    <div className='SumContainer'>\r\n                        <div className='SumResult'>\r\n                            <p>{ClimateEmissions.map((item) => <li>{item[0]}: {(item[1]).toFixed(1)}</li>)}</p>\r\n                            <p id='climateText'>GWP (Global Warming Potential, eller Drivhuspotentiale) er udledningen af drivhusgasser og har her en værdi på {ClimateEmissions[0][1]}</p>\r\n                            <p id='climateText'>Dette svarer til den gennemsnitlige årlige udledning af {(ClimateEmissions[0][1]/6060).toFixed(1)} danskere, eller alternativt at køre {(ClimateEmissions[0][1]/0.120).toFixed(1)} kilometer i en moderne passagerbil</p>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Impacts","import React from 'react'\r\nimport './Results.css'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Impacts from '../Impacts/Impacts'\r\nimport Download from '../Download/Download'\r\nimport { roofTypeValue, foundationTypeValue } from '../../functions/simpleFunctions'\r\n\r\nconst BetonMatPas = require(\"../../materialepas/beton.json\")\r\nconst GipsMatPas = require(\"../../materialepas/gips.json\")\r\nconst IsoleringMatPas = require(\"../../materialepas/isolering.json\")\r\nconst MetalMatPas = require(\"../../materialepas/metal.json\")\r\nconst MurstenMatPas = require(\"../../materialepas/mursten.json\")\r\nconst TagpapMatPas = require(\"../../materialepas/tagpap.json\")\r\nconst SkiferMatPas = require(\"../../materialepas/skifer.json\")\r\nconst StenMatPas = require(\"../../materialepas/sten.json\")\r\nconst TeglMatPas = require(\"../../materialepas/tegl.json\")\r\nconst TræMatPas = require(\"../../materialepas/træ.json\")\r\n\r\nclass Results extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.sumMaterials = this.sumMaterials.bind(this)\r\n        this.removeMissing = this.removeMissing.bind(this)\r\n        this.getLabels = this.getLabels.bind(this)\r\n        this.getData = this.getData.bind(this)\r\n        this.passMaterials = this.passMaterials.bind(this)\r\n        this.materialPercentages = this.materialPercentages.bind(this)\r\n    }\r\n\r\n    sumMaterials(array) {\r\n        const newArray = []\r\n        const Beton = ['Beton',0]\r\n        const Træ = ['Træ',0]\r\n        const Skifer = ['Skifer',0]\r\n        const Tegl = ['Tegl',0]\r\n        const Isolering = ['Isolering',0]\r\n        const Tagpap = ['Tagpap',0]\r\n        const Mursten = ['Mursten',0]\r\n        const Gips = ['Gips', 0]\r\n        const Metal = ['Metal', 0]\r\n        const Sten = ['Sten', 0]\r\n        const Sand = ['Sand', 0]\r\n        const Kalk = ['Kalk', 0]\r\n        const Ler = ['Ler', 0]\r\n        const Vand = ['Vand', 0]\r\n        const Papir = ['Papir', 0]\r\n        const Jern = ['Jern', 0]\r\n        const Stål = ['Stål', 0]\r\n        const Polyester = ['Polyester', 0]\r\n        const Bitumen = ['Bitumen', 0]\r\n        const Gummi = ['Gummi', 0]\r\n        const etlag = ['1-lags', 0]\r\n        const tolag = ['2-lags', 0]\r\n        const trelag = ['3-algs', 0]\r\n\r\n        for (var x of array) {\r\n            if (x[0] === 'Træ') {\r\n                Træ[1] = Træ[1]+x[1]\r\n            }\r\n            if (x[0] === 'Beton') {\r\n                Beton[1] = Beton[1]+x[1]\r\n            }\r\n            if (x[0] === 'Skifer') {\r\n                Skifer[1] = Skifer[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tegl') {\r\n                Tegl[1] = Tegl[1]+x[1]\r\n            }\r\n            if (x[0] === 'Isolering') {\r\n                Isolering[1] = Isolering[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tagpap') {\r\n                Tagpap[1] = Tagpap[1]+x[1]\r\n            }\r\n            if (x[0] === 'Mursten') {\r\n                Mursten[1] = Mursten[1]+x[1]\r\n            }\r\n            if (x[0] === 'Gips') {\r\n                Gips[1] = Gips[1]+x[1]\r\n            }\r\n            if (x[0] === 'Metal') {\r\n                Metal[1] = Metal[1]+x[1]\r\n            }\r\n            if (x[0] === 'Sten') {\r\n                Sten[1] = Sten[1]+x[1]\r\n            }\r\n            if (x[0] === 'Sand') {\r\n                Sand[1] = Sand[1]+x[1]\r\n            } \r\n            if (x[0] === 'Kalk') {\r\n                Kalk[1] = Kalk[1]+x[1]\r\n            } \r\n            if (x[0] === 'Ler') {\r\n                Ler[1] = Ler[1]+x[1]\r\n            }\r\n            if (x[0] === 'Vand') {\r\n                Vand[1] = Vand[1]+x[1]\r\n            }\r\n            if (x[0] === 'Papir') {\r\n                Papir[1] = Papir[1]+x[1]\r\n            }\r\n            if (x[0] === 'Jern') {\r\n                Jern[1] = Jern[1]+x[1]\r\n            }\r\n            if (x[0] === 'Stål') {\r\n                Stål[1] = Stål[1]+x[1]\r\n            }\r\n            if (x[0] === 'Polyester') {\r\n                Polyester[1] = Polyester[1]+x[1]\r\n            }\r\n            if (x[0] === 'Bitumen') {\r\n                Bitumen[1] = Bitumen[1]+x[1]\r\n            }          \r\n            if (x[0] === 'Gummi') {\r\n                Gummi[1] = Gummi[1]+x[1]\r\n            }\r\n            if (x[0] === '1-lags') {\r\n                etlag[1] = etlag[1]+x[1]\r\n            }\r\n            if (x[0] === '2-lags') {\r\n                tolag[1] = tolag[1]+x[1]\r\n            }\r\n            if (x[0] === '3-lags') {\r\n                trelag[1] = trelag[1]+x[1]\r\n            }                            \r\n        }\r\n        newArray.push(Beton) \r\n        newArray.push(Træ)\r\n        newArray.push(Skifer)\r\n        newArray.push(Tegl)\r\n        newArray.push(Isolering)\r\n        newArray.push(Tagpap)\r\n        newArray.push(Mursten)\r\n        newArray.push(Metal)\r\n        newArray.push(Gips)\r\n        newArray.push(Sten)\r\n        newArray.push(Sand)\r\n        newArray.push(Kalk)\r\n        newArray.push(Ler)\r\n        newArray.push(Vand)\r\n        newArray.push(Papir)\r\n        newArray.push(Jern)\r\n        newArray.push(Stål)\r\n        newArray.push(Polyester)\r\n        newArray.push(Bitumen)\r\n        newArray.push(Gummi)\r\n        newArray.push(etlag)\r\n        newArray.push(tolag)\r\n        newArray.push(trelag)\r\n        return newArray\r\n    }\r\n\r\n    removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n\r\n    getLabels(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[0])\r\n        } return newArray\r\n    }\r\n\r\n    getData(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[1])\r\n        } return newArray\r\n    }\r\n\r\n    passMaterials(array) {\r\n        const newArray = []\r\n        const newArray2 = []\r\n        for (var x of array) {\r\n            if (eval(`${x[0]}`+'MatPas').Indhold['Komponent/materiale'] === x[0]) {\r\n                newArray.push([x,eval(`${x[0]}`+'MatPas').Indhold['Komponent består af']])\r\n            } \r\n        } \r\n        for (var x of newArray) {\r\n            for (var y of x[1]) {\r\n                newArray2.push([y[0], x[0][1]*y[1]])\r\n            }\r\n        }\r\n        return newArray2\r\n    }\r\n\r\n    materialPercentages(array) {\r\n        var newNum = 0\r\n        var newArray = []\r\n        for (var x of array) {\r\n            newNum = newNum + x[1]\r\n        }\r\n        for (var x of array) {\r\n            newArray.push([x[0],(x[1]/newNum)*100])\r\n        } return newArray\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n         //-------------------------------------VARIABLES-----------------------------------------------\r\n         //#region\r\n         const area = this.props.building.area\r\n         const floors = this.props.building.floors\r\n         const totalArea = area*floors\r\n         const perimeter = Math.floor(Math.sqrt(area)*4)\r\n         const wallArea = perimeter*(floors*2.5)\r\n         const roofArea = Math.floor(area*roofTypeValue(this.props.building.roofType))\r\n         const foundationArea = ((area*foundationTypeValue(this.props.building.foundationType)[0])+(perimeter*foundationTypeValue(this.props.building.foundationType)[1]))*0.4*1\r\n         const windowArea = Math.floor(wallArea*0.15)\r\n         //#endregion\r\n         \r\n         //-----------------------------------MATERIAL AMOUNTS------------------------------------------\r\n         //#region\r\n         const wallMaterialAmount = this.props.materials.wall.map((item) => <li>{item[0]}: {(item[1]*wallArea).toFixed(2)}m3</li>)\r\n         const wallMaterialAmount2 = this.props.materials.wall.map((item) => [item[0],item[1]*wallArea])\r\n\r\n         const roofMaterialAmount = this.props.materials.roof.map((item) => <li>{item[0]}: {(item[1]*roofArea).toFixed(2)}m3</li>)\r\n         const roofMaterialAmount2 = this.props.materials.roof.map((item) => [item[0],item[1]*roofArea])\r\n\r\n         const floorMaterialAmount = this.props.materials.floor.map((item) => <li>{item[0]}: {(item[1]*totalArea).toFixed(2)}m3</li>)\r\n         const floorMaterialAmount2 = this.props.materials.floor.map((item) => [item[0],item[1]*totalArea])\r\n\r\n         const foundationMaterialAmount = this.props.materials.foundation.map((item) => <li>{item[0]}: {(item[1]*foundationArea).toFixed(2)}m3</li>)\r\n         const foundationMaterialAmount2 = this.props.materials.foundation.map((item) => [item[0],item[1]*foundationArea])\r\n\r\n         const inWallMaterialAmount = this.props.materials.inwall.map((item) => <li>{item[0]}: {(item[1]*wallArea*0.5).toFixed(2)}m3</li>)\r\n         const inWallMaterialAmount2 = this.props.materials.inwall.map((item) => [item[0],item[1]*wallArea*0.5])\r\n\r\n         const merged = [].concat.apply([], [wallMaterialAmount2,roofMaterialAmount2,floorMaterialAmount2,foundationMaterialAmount2,inWallMaterialAmount2]);\r\n         const mergedMaterials = this.removeMissing(this.sumMaterials(merged))\r\n\r\n         const mergedMaterialAmount = mergedMaterials.map((item) => <li>{item[0]}: {item[1].toFixed(2)}m3</li>)\r\n\r\n         const mergedPassMaterial = this.removeMissing(this.sumMaterials(this.passMaterials(this.materialPercentages(mergedMaterials)))).sort(function(a,b){return b[1] - a[1]})\r\n         const mergedPassMaterialAmount = mergedPassMaterial.map((item) => <li>{item[0]}: {item[1].toFixed(2)}%</li>)\r\n         //#endregion\r\n\r\n         //---------------------------------------CHART-------------------------------------------------\r\n         //#region \r\n         const chartData = this.getData(mergedMaterials)\r\n         const chartLabels = this.getLabels(mergedMaterials)\r\n\r\n         const data = {\r\n            labels: chartLabels,\r\n            datasets: [\r\n              {\r\n                label: '',\r\n                data: chartData,\r\n                backgroundColor: [\r\n                  'rgba(70, 200, 235, 1)',\r\n                  'rgba(30, 132, 235, 1)',\r\n                  'rgba(50, 170, 150, 1)',\r\n                  'rgba(24, 200, 235, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(100, 162, 235, 1)',\r\n                  'rgba(120, 152, 205, 1)',\r\n                  'rgba(50, 255, 205, 1)',\r\n                  'rgba(50, 105, 255, 1)',\r\n                  'rgba(70, 125, 235, 1)',\r\n                ],\r\n              },\r\n            ],\r\n          }\r\n          \r\n          const options = {\r\n            maintainAspectRatio: false, \r\n            legend: {\r\n                display: false\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display:false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    gridLines: {\r\n                        display:true\r\n                    }   \r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Samlede materialemængder [m3]',\r\n                fontSize: 20,\r\n                fontColor: 'DarkSlateGrey',\r\n                padding: 15,\r\n               }\r\n          }\r\n        //#endregion\r\n         //#region \r\n        const chartData2 = this.getData(mergedPassMaterial)\r\n        const chartLabels2 = this.getLabels(mergedPassMaterial)\r\n\r\n        const data2 = {\r\n           labels: chartLabels2,\r\n           datasets: [\r\n             {\r\n               label: '',\r\n               data: chartData2,\r\n               backgroundColor: [\r\n                   'rgba(70, 200, 235, 1)',\r\n                   'rgba(30, 132, 235, 1)',\r\n                   'rgba(50, 170, 150, 1)',\r\n                   'rgba(24, 200, 235, 1)',\r\n                   'rgba(54, 162, 235, 1)',\r\n                   'rgba(100, 162, 235, 1)',\r\n                   'rgba(120, 152, 205, 1)',\r\n                   'rgba(50, 255, 205, 1)',\r\n                   'rgba(50, 105, 255, 1)',\r\n                   'rgba(70, 125, 235, 1)',\r\n               ],\r\n             },\r\n           ],\r\n         }\r\n         \r\n         const options2 = {\r\n           maintainAspectRatio: false, \r\n           legend: {\r\n               display: false\r\n           },\r\n           scales: {\r\n               xAxes: [{\r\n                   gridLines: {\r\n                       display:false\r\n                   }\r\n               }],\r\n               yAxes: [{\r\n                   gridLines: {\r\n                       display:true\r\n                   }   \r\n               }]\r\n           },\r\n           title: {\r\n               display: true,\r\n               text: 'Samlede råmaterialemængder [%]',\r\n               fontSize: 20,\r\n               fontColor: 'DarkSlateGrey',\r\n               padding: 15,\r\n              }\r\n         }\r\n       //#endregion\r\n        return(\r\n            <div>\r\n                <h1 className='ResultHeader'>Materialemængder</h1>\r\n                <div className='ResultContainer'>\r\n                    <div className='aResult'>\r\n                        <p>Ydervægge</p>\r\n                        {wallMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Tag</p>\r\n                        {roofMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Gulve</p>\r\n                        {floorMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Fundament</p>\r\n                        {foundationMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult' id='NoBorder'>\r\n                        <p>Indervægge</p>\r\n                        {inWallMaterialAmount}\r\n                    </div>\r\n                </div>\r\n                <div className='SumContainer'>\r\n                    <div className='SumResult'>\r\n                        <p>Samlet</p>\r\n                        {mergedMaterialAmount}\r\n                    </div>\r\n                    <div className='BarContainer'>\r\n                        <Bar data={data} options={options} width={620} height={620}/>\r\n                    </div>\r\n                    <div className='SumResult'>\r\n                        <p>Samlede råmaterialemængder</p>\r\n                        {mergedPassMaterialAmount}\r\n                    </div>\r\n                    <div className='BarContainer'>\r\n                        <Bar data={data2} options={options2} width={620} height={620}/>\r\n                    </div>\r\n                </div>\r\n                <Impacts materials={this.props.materials} building={this.props.building} amount={mergedMaterials}/>\r\n                <Download materials={this.props.materials} amount={mergedMaterials} building={this.props.building}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Results","import './Download.css'\r\nimport React from 'react'\r\nimport JSZip from 'jszip'\r\nimport saveAs from 'file-saver'\r\n\r\nconst BetonMatPas = require(\"../../materialepas/beton.json\")\r\nconst GipsMatPas = require(\"../../materialepas/gips.json\")\r\nconst IsoleringMatPas = require(\"../../materialepas/isolering.json\")\r\nconst MetalMatPas = require(\"../../materialepas/metal.json\")\r\nconst MurstenMatPas = require(\"../../materialepas/mursten.json\")\r\nconst TagpapMatPas = require(\"../../materialepas/tagpap.json\")\r\nconst SkiferMatPas = require(\"../../materialepas/skifer.json\")\r\nconst StenMatPas = require(\"../../materialepas/sten.json\")\r\nconst TeglMatPas = require(\"../../materialepas/tegl.json\")\r\nconst TræMatPas = require(\"../../materialepas/træ.json\")\r\n\r\n\r\nclass Download extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n\r\n      this.downloadZip = this.downloadZip.bind(this)\r\n      this.removeMissing = this.removeMissing.bind(this)\r\n      this.getIDs = this.getIDs.bind(this)\r\n      }    \r\n\r\n      removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n\r\n    getIDs(array) {\r\n      const newArray = []\r\n      for (var x of this.removeMissing(array)) {\r\n        if (x[0] === eval(`${x[0]}`+'MatPas').Grunddata.Produktnavn) {\r\n          newArray.push([eval(`${x[0]}`+'MatPas').Grunddata.Produktnavn,eval(`${x[0]}`+'MatPas').Grunddata.Revisionsnummer,['Mængde:',x[1].toFixed(2)]])\r\n        }\r\n      } return newArray\r\n    }\r\n    \r\n      downloadZip() {\r\n        const BygPas = [[this.props.building.address],[this.getIDs(this.props.amount)]]\r\n\r\n        var zip = new JSZip();\r\n\r\n        for (var x of this.removeMissing(this.props.amount)) {\r\n            zip.file(`${x[0]}.json`, JSON.stringify(eval(`${x[0]}`+'MatPas'), null, 2))\r\n        }\r\n\r\n        zip.file('Bygningspas.json', JSON.stringify(BygPas, null, 2))\r\n\r\n        zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n            // see FileSaver.js\r\n            saveAs(content, \"Bygningspas.zip\");\r\n        });\r\n    }\r\n\r\n    \r\n    render() {\r\n      return (\r\n        <a className='buttonDownload' onClick={this.downloadZip}>Download</a>\r\n        )\r\n    }\r\n  }\r\n\r\n  export default Download","import React from 'react'\r\nimport './ResultsSimple.css'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Impacts from '../Impacts/Impacts'\r\nimport DownloadSimple from '../DownloadSimple/DownloadSimple'\r\nimport { simpleRoof, simpleWall, simpleFloor, simpleFoundation, simpleInWall, roofTypeValue, foundationTypeValue } from '../../functions/simpleFunctions'\r\n\r\nconst BetonMatPas = require(\"../../materialepas/beton.json\")\r\nconst GipsMatPas = require(\"../../materialepas/gips.json\")\r\nconst IsoleringMatPas = require(\"../../materialepas/isolering.json\")\r\nconst MetalMatPas = require(\"../../materialepas/metal.json\")\r\nconst MurstenMatPas = require(\"../../materialepas/mursten.json\")\r\nconst TagpapMatPas = require(\"../../materialepas/tagpap.json\")\r\nconst SkiferMatPas = require(\"../../materialepas/skifer.json\")\r\nconst StenMatPas = require(\"../../materialepas/sten.json\")\r\nconst TeglMatPas = require(\"../../materialepas/tegl.json\")\r\nconst TræMatPas = require(\"../../materialepas/træ.json\")\r\n\r\nclass ResultsSimple extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.sumMaterials = this.sumMaterials.bind(this)\r\n        this.removeMissing = this.removeMissing.bind(this)\r\n        this.getLabels = this.getLabels.bind(this)\r\n        this.getData = this.getData.bind(this)\r\n        this.passMaterials = this.passMaterials.bind(this)\r\n        this.materialPercentages = this.materialPercentages.bind(this)\r\n    }\r\n\r\n    sumMaterials(array) {\r\n        const newArray = []\r\n        const Beton = ['Beton',0]\r\n        const Træ = ['Træ',0]\r\n        const Skifer = ['Skifer',0]\r\n        const Tegl = ['Tegl',0]\r\n        const Isolering = ['Isolering',0]\r\n        const Tagpap = ['Tagpap',0]\r\n        const Mursten = ['Mursten',0]\r\n        const Gips = ['Gips', 0]\r\n        const Metal = ['Metal', 0]\r\n        const Sten = ['Sten', 0]\r\n        const Sand = ['Sand', 0]\r\n        const Kalk = ['Kalk', 0]\r\n        const Ler = ['Ler', 0]\r\n        const Vand = ['Vand', 0]\r\n        const Papir = ['Papir', 0]\r\n        const Jern = ['Jern', 0]\r\n        const Stål = ['Stål', 0]\r\n        const Polyester = ['Polyester', 0]\r\n        const Bitumen = ['Bitumen', 0]\r\n        const Gummi = ['Gummi', 0]\r\n\r\n        for (var x of array) {\r\n            if (x[0] === 'Træ') {\r\n                Træ[1] = Træ[1]+x[1]\r\n            }\r\n            if (x[0] === 'Beton') {\r\n                Beton[1] = Beton[1]+x[1]\r\n            }\r\n            if (x[0] === 'Skifer') {\r\n                Skifer[1] = Skifer[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tegl') {\r\n                Tegl[1] = Tegl[1]+x[1]\r\n            }\r\n            if (x[0] === 'Isolering') {\r\n                Isolering[1] = Isolering[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tagpap') {\r\n                Tagpap[1] = Tagpap[1]+x[1]\r\n            }\r\n            if (x[0] === 'Mursten') {\r\n                Mursten[1] = Mursten[1]+x[1]\r\n            }\r\n            if (x[0] === 'Gips') {\r\n                Gips[1] = Gips[1]+x[1]\r\n            }\r\n            if (x[0] === 'Metal') {\r\n                Metal[1] = Metal[1]+x[1]\r\n            }\r\n            if (x[0] === 'Sten') {\r\n                Sten[1] = Sten[1]+x[1]\r\n            }\r\n            if (x[0] === 'Sand') {\r\n                Sand[1] = Sand[1]+x[1]\r\n            } \r\n            if (x[0] === 'Kalk') {\r\n                Kalk[1] = Kalk[1]+x[1]\r\n            } \r\n            if (x[0] === 'Ler') {\r\n                Ler[1] = Ler[1]+x[1]\r\n            }\r\n            if (x[0] === 'Vand') {\r\n                Vand[1] = Vand[1]+x[1]\r\n            }\r\n            if (x[0] === 'Papir') {\r\n                Papir[1] = Papir[1]+x[1]\r\n            }\r\n            if (x[0] === 'Jern') {\r\n                Jern[1] = Jern[1]+x[1]\r\n            }\r\n            if (x[0] === 'Stål') {\r\n                Stål[1] = Stål[1]+x[1]\r\n            }\r\n            if (x[0] === 'Polyester') {\r\n                Polyester[1] = Polyester[1]+x[1]\r\n            }\r\n            if (x[0] === 'Bitumen') {\r\n                Bitumen[1] = Bitumen[1]+x[1]\r\n            }          \r\n            if (x[0] === 'Gummi') {\r\n                Gummi[1] = Gummi[1]+x[1]\r\n            }                   \r\n        }\r\n        newArray.push(Beton) \r\n        newArray.push(Træ)\r\n        newArray.push(Skifer)\r\n        newArray.push(Tegl)\r\n        newArray.push(Isolering)\r\n        newArray.push(Tagpap)\r\n        newArray.push(Mursten)\r\n        newArray.push(Metal)\r\n        newArray.push(Gips)\r\n        newArray.push(Sten)\r\n        newArray.push(Sand)\r\n        newArray.push(Kalk)\r\n        newArray.push(Ler)\r\n        newArray.push(Vand)\r\n        newArray.push(Papir)\r\n        newArray.push(Jern)\r\n        newArray.push(Stål)\r\n        newArray.push(Polyester)\r\n        newArray.push(Bitumen)\r\n        newArray.push(Gummi)\r\n        return newArray\r\n    }\r\n\r\n    removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n\r\n    getLabels(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[0])\r\n        } return newArray\r\n    }\r\n\r\n    getData(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[1])\r\n        } return newArray\r\n    }\r\n\r\n    passMaterials(array) {\r\n        const newArray = []\r\n        const newArray2 = []\r\n        for (var x of array) {\r\n            if (eval(`${x[0]}`+'MatPas').Indhold['Komponent/materiale'] === x[0]) {\r\n                newArray.push([x,eval(`${x[0]}`+'MatPas').Indhold['Komponent består af']])\r\n            } \r\n        } \r\n        for (var x of newArray) {\r\n            for (var y of x[1]) {\r\n                newArray2.push([y[0], x[0][1]*y[1]])\r\n            }\r\n        }\r\n        return newArray2\r\n    }\r\n\r\n    materialPercentages(array) {\r\n        var newNum = 0\r\n        var newArray = []\r\n        for (var x of array) {\r\n            newNum = newNum + x[1]\r\n        }\r\n        for (var x of array) {\r\n            newArray.push([x[0],(x[1]/newNum)*100])\r\n        } return newArray\r\n    }\r\n\r\n    render() {\r\n         //-------------------------------------VARIABLES-----------------------------------------------\r\n         //#region\r\n         const area = this.props.building.area\r\n         const floors = this.props.building.floors\r\n         const totalArea = area*floors\r\n         const perimeter = Math.floor(Math.sqrt(area)*4)\r\n         const wallArea = perimeter*(floors*2.5)\r\n         const roofArea = Math.floor(area*roofTypeValue(this.props.building.roofType))\r\n         const foundationArea = ((area*foundationTypeValue(this.props.building.foundationType)[0])+(perimeter*foundationTypeValue(this.props.building.foundationType)[1]))*0.4*1\r\n         const windowArea = Math.floor(wallArea*0.15)\r\n         //#endregion\r\n         \r\n         //-----------------------------------MATERIAL AMOUNTS------------------------------------------\r\n         //#region\r\n         const wallMaterialAmountS = simpleWall(this.props.materials.wallS).map((item) => <li>{item[0]}: {(item[1]*wallArea).toFixed(2)}m3</li>)\r\n         const wallMaterialAmountS2 = simpleWall(this.props.materials.wallS).map((item) => [item[0],item[1]*wallArea])\r\n\r\n         const roofMaterialAmountS = simpleRoof(this.props.materials.roofS).map((item) => <li>{item[0]}: {(item[1]*roofArea).toFixed(2)}m3</li>)\r\n         const roofMaterialAmountS2 = simpleRoof(this.props.materials.roofS).map((item) => [item[0],item[1]*roofArea])\r\n\r\n         const floorMaterialAmountS = simpleFloor(this.props.materials.floorS).map((item) => <li>{item[0]}: {(item[1]*totalArea).toFixed(2)}m3</li>)\r\n         const floorMaterialAmountS2 = simpleFloor(this.props.materials.floorS).map((item) => [item[0],item[1]*totalArea])\r\n\r\n         const foundationMaterialAmountS = simpleFoundation(this.props.materials.foundationS).map((item) => <li>{item[0]}: {(item[1]*foundationArea).toFixed(2)}m3</li>)\r\n         const foundationMaterialAmountS2 = simpleFoundation(this.props.materials.foundationS).map((item) => [item[0],item[1]*foundationArea])\r\n\r\n         const inWallMaterialAmountS = simpleInWall(this.props.materials.inwallS).map((item) => <li>{item[0]}: {(item[1]*wallArea*0.5).toFixed(2)}m3</li>)\r\n         const inWallMaterialAmountS2 = simpleInWall(this.props.materials.inwallS).map((item) => [item[0],item[1]*wallArea*0.5])\r\n\r\n         const mergedS = [].concat.apply([], [wallMaterialAmountS2,roofMaterialAmountS2,floorMaterialAmountS2,foundationMaterialAmountS2,inWallMaterialAmountS2]);\r\n         const mergedMaterialsS = this.removeMissing(this.sumMaterials(mergedS))\r\n\r\n         const mergedMaterialAmountS = mergedMaterialsS.map((item) => <li>{item[0]}: {item[1].toFixed(2)}m3</li>)\r\n\r\n         const mergedPassMaterialS = this.removeMissing(this.sumMaterials(this.passMaterials(this.materialPercentages(mergedMaterialsS)))).sort(function(a,b){return b[1] - a[1]})\r\n         const mergedPassMaterialAmountS = mergedPassMaterialS.map((item) => <li>{item[0]}: {item[1].toFixed(2)}%</li>)\r\n         //#endregion\r\n\r\n         //---------------------------------------CHART-------------------------------------------------\r\n         //#region \r\n         const chartData = this.getData(mergedMaterialsS)\r\n         const chartLabels = this.getLabels(mergedMaterialsS)\r\n\r\n         const data = {\r\n            labels: chartLabels,\r\n            datasets: [\r\n              {\r\n                label: '',\r\n                data: chartData,\r\n                backgroundColor: [\r\n                    'rgba(70, 200, 235, 1)',\r\n                    'rgba(30, 132, 235, 1)',\r\n                    'rgba(50, 170, 150, 1)',\r\n                    'rgba(24, 200, 235, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(100, 162, 235, 1)',\r\n                    'rgba(120, 152, 205, 1)',\r\n                    'rgba(50, 255, 205, 1)',\r\n                    'rgba(50, 105, 255, 1)',\r\n                    'rgba(70, 125, 235, 1)',\r\n                ],\r\n              },\r\n            ],\r\n          }\r\n          \r\n          const options = {\r\n            maintainAspectRatio: false, \r\n            legend: {\r\n                display: false\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display:false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    gridLines: {\r\n                        display:true\r\n                    }   \r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Samlede materialemængder [m3]',\r\n                fontSize: 20,\r\n                fontColor: 'DarkSlateGrey',\r\n                padding: 15,\r\n               }\r\n          }\r\n        //#endregion\r\n         //#region \r\n         const chartData2 = this.getData(mergedPassMaterialS)\r\n         const chartLabels2 = this.getLabels(mergedPassMaterialS)\r\n\r\n         const data2 = {\r\n            labels: chartLabels2,\r\n            datasets: [\r\n              {\r\n                label: '',\r\n                data: chartData2,\r\n                backgroundColor: [\r\n                    'rgba(70, 200, 235, 1)',\r\n                    'rgba(30, 132, 235, 1)',\r\n                    'rgba(50, 170, 150, 1)',\r\n                    'rgba(24, 200, 235, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(100, 162, 235, 1)',\r\n                    'rgba(120, 152, 205, 1)',\r\n                    'rgba(50, 255, 205, 1)',\r\n                    'rgba(50, 105, 255, 1)',\r\n                    'rgba(70, 125, 235, 1)',\r\n                ],\r\n              },\r\n            ],\r\n          }\r\n          \r\n          const options2 = {\r\n            maintainAspectRatio: false, \r\n            legend: {\r\n                display: false\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display:false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    gridLines: {\r\n                        display:true\r\n                    }   \r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Samlede råmaterialemængder [%]',\r\n                fontSize: 20,\r\n                fontColor: 'DarkSlateGrey',\r\n                padding: 15,\r\n               }\r\n          }\r\n        //#endregion\r\n        console.log(mergedPassMaterialS)\r\n        return(\r\n            <div>\r\n                <h1 className='ResultHeader'>Materialemængder</h1>\r\n                <div className='ResultContainer'>\r\n                    <div className='aResult'>\r\n                        <p>Ydervægge</p>\r\n                        {wallMaterialAmountS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Tag</p>\r\n                        {roofMaterialAmountS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Gulve</p>\r\n                        {floorMaterialAmountS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Fundament</p>\r\n                        {foundationMaterialAmountS}\r\n                    </div>\r\n                    <div className='aResult' id='NoBorder'>\r\n                        <p>Indervægge</p>\r\n                        {inWallMaterialAmountS}\r\n                    </div>\r\n                </div>\r\n                <div className='SumContainer'>\r\n                    <div className='SumResult'>\r\n                        <p>Samlet</p>\r\n                        {mergedMaterialAmountS}\r\n                    </div>\r\n                    <div className='BarContainer'>\r\n                        <Bar data={data} options={options} width={620} height={620}/>\r\n                    </div>\r\n                    <div className='SumResult'>\r\n                        <p>Samlede råmaterialemængder</p>\r\n                        {mergedPassMaterialAmountS}\r\n                    </div>\r\n                    <div className='BarContainer'>\r\n                        <Bar data={data2} options={options2} width={620} height={620}/>\r\n                    </div>\r\n                </div>\r\n                <Impacts materials={this.props.materials} building={this.props.building} amount={mergedMaterialsS}/>\r\n                <DownloadSimple materials={this.props.materials} amount={mergedMaterialsS} building={this.props.building}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ResultsSimple","import './DownloadSimple.css'\r\nimport React from 'react'\r\nimport JSZip from 'jszip'\r\nimport saveAs from 'file-saver'\r\n\r\nconst BetonMatPas = require(\"../../materialepas/beton.json\")\r\nconst GipsMatPas = require(\"../../materialepas/gips.json\")\r\nconst IsoleringMatPas = require(\"../../materialepas/isolering.json\")\r\nconst MetalMatPas = require(\"../../materialepas/metal.json\")\r\nconst MurstenMatPas = require(\"../../materialepas/mursten.json\")\r\nconst TagpapMatPas = require(\"../../materialepas/tagpap.json\")\r\nconst SkiferMatPas = require(\"../../materialepas/skifer.json\")\r\nconst StenMatPas = require(\"../../materialepas/sten.json\")\r\nconst TeglMatPas = require(\"../../materialepas/tegl.json\")\r\nconst TræMatPas = require(\"../../materialepas/træ.json\")\r\n\r\n\r\nclass Download extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.downloadZip = this.downloadZip.bind(this)\r\n    this.removeMissing = this.removeMissing.bind(this)\r\n    this.getIDs = this.getIDs.bind(this)\r\n    }    \r\n\r\n    removeMissing(array) {\r\n      const newArray = []\r\n      for (var x of array) {\r\n          if (x[1] !== 0) {\r\n              newArray.push(x)\r\n          }\r\n      } return newArray\r\n  }\r\n\r\n  getIDs(array) {\r\n    const newArray = []\r\n    for (var x of this.removeMissing(array)) {\r\n      if (x[0] === eval(`${x[0]}`+'MatPas').Grunddata.Produktnavn) {\r\n        newArray.push([eval(`${x[0]}`+'MatPas').Grunddata.Produktnavn,eval(`${x[0]}`+'MatPas').Grunddata.Revisionsnummer,['Mængde:',x[1].toFixed(2)]])\r\n      }\r\n    } return newArray\r\n  }\r\n  \r\n    downloadZip() {\r\n      const BygPas = [[this.props.building.address],[this.getIDs(this.props.amount)]]\r\n\r\n      var zip = new JSZip();\r\n\r\n      for (var x of this.removeMissing(this.props.amount)) {\r\n          zip.file(`${x[0]}.json`, JSON.stringify(eval(`${x[0]}`+'MatPas'), null, 2))\r\n      }\r\n\r\n      zip.file('Bygningspas.json', JSON.stringify(BygPas, null, 2))\r\n\r\n      zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n          // see FileSaver.js\r\n          saveAs(content, \"Bygningspas.zip\");\r\n      });\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <a className='buttonDownload' onClick={this.downloadZip}>Download</a>\r\n      )\r\n  }\r\n}\r\n\r\n  export default Download"],"sourceRoot":""}