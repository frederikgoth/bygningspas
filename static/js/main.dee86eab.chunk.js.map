{"version":3,"sources":["items/items.js","util/firebase.js","components/SearchBar/SearchBar.js","components/BuildingView/BuildingView.js","components/Building/RoofTypeImage/Saddel.jpg","components/Building/RoofTypeImage/Valm.jpg","components/Building/RoofTypeImage/Skråt.jpg","components/Building/RoofTypeImage/Fladt.jpg","components/Building/RoofTypeImage/RoofTypeImage.js","components/Building/FoundationTypeImage/Linje.jpg","components/Building/FoundationTypeImage/Punkt.jpg","components/Building/FoundationTypeImage/Stribe.jpg","components/Building/FoundationTypeImage/FoundationTypeImage.js","components/Impacts/Impacts.js","functions/simpleFunctions.js","components/Results/Results.js","components/ResultsSimple/ResultsSimple.js","components/MaterialList/updateButton.js","components/MaterialList/MaterialList.js","components/Building/Building.js","components/Material/Material.js","components/Simple/Simple.js","components/Advanced/Advanced.js","components/App/App.js","index.js","components/Download/Download.js","components/DownloadSimple/DownloadSimple.js"],"names":["items","id","name","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","database","SearchBar","props","handleOnAddressSelect","item","address","ref","on","snapshot","allInfo","forEach","snap","push","val","setState","addressInfo","console","log","state","handleOnSelect","area","floors","built","location","roofType","roof","foundationType","foundation","energy","onChange","handleOnFocus","addressSelect","addressSelected","bind","this","building","goBack","className","style","width","margin","placeholder","onSelect","onFocus","styling","zIndex","autoFocus","Provider","value","size","color","data-tip","place","type","effect","border","onClick","React","Component","BuildingView","streetView","position","lat","lng","pov","heading","pitch","zoom","height","backgroundColor","streetViewPanoramaOptions","RoofTypeImage","src","saddel","fladt","skråt","valm","FoundationTypeImage","linje","punkt","stribe","Impacts","emissions","complete","multiplyObj","getMaterialEmission","runEmissions","runPrices","removeMissing","sumObjects","obj","key","arr","newEmission","newEmissions","x","Beton","Træ","Skifer","Tegl","Fliser","Isolering","Tagpap","Mursten","Metal","Gips","GWP","ODP","Math","exp","POCP","AP","EP","ADPE","ADPF","PERT","PENRT","RSF","NRSF","amount","array","newArray","Sten","objs","reduce","a","b","k","hasOwnProperty","downloadZip","Object","entries","map","toFixed","simpleRoof","material","simpleWall","simpleFloor","simpleFoundation","simpleInWall","roofTypeValue","foundationTypeValue","Results","sumMaterials","getLabels","getData","totalArea","wallArea","floor","sqrt","roofArea","foundationArea","wallMaterialAmount","materials","wall","wallMaterialAmount2","roofMaterialAmount","roofMaterialAmount2","floorMaterialAmount","floorMaterialAmount2","foundationMaterialAmount","foundationMaterialAmount2","inWallMaterialAmount","inwall","inWallMaterialAmount2","merged","concat","apply","mergedMaterials","mergedMaterialAmount","chartData","data","labels","datasets","label","options","maintainAspectRatio","legend","display","scales","xAxes","gridLines","yAxes","title","text","fontSize","fontColor","padding","Download","ResultsSimple","wallMaterialAmountS","wallS","wallMaterialAmountS2","roofMaterialAmountS","roofS","roofMaterialAmountS2","floorMaterialAmountS","floorS","floorMaterialAmountS2","foundationMaterialAmountS","foundationS","foundationMaterialAmountS2","inWallMaterialAmountS","inwallS","inWallMaterialAmountS2","mergedS","mergedMaterialsS","mergedMaterialAmountS","DownloadSimple","UpdateButton","updateData","updateData2","updateData3","windows","update","then","_","floorsS","length","updateData4","Options","wallOptions","floorOptions","roofOptions","foundationOptions","inWallOptions","windowOptions","MaterialList","wallM","wallP","roofM","roofP","floorM","floorP","foundationM","foundationP","inwallM","inwallP","advanced","addWallItem","addWallMaterial","addWallPercentage","removeWallItem","addSimpleWall","addRoofItem","addRoofMaterial","addRoofPercentage","removeRoofItem","addSimpleRoof","addFloorItem","addFloorMaterial","addFloorPercentage","removeFloorItem","addSimpleFloor","addFoundationItem","addFoundationMaterial","addFoundationPercentage","removeFoundationItem","addSimpleFoundation","addInWallItem","addInWallMaterial","addInWallPercentage","removeInWallItem","addSimpleInWall","addWindowItem","toggleAdvanced","toggleSimple","isAbove100","newVal","target","slice","number","data-for","min","max","step","roofTypeOptions","foundationTypeOptions","Building","handleAreaChange","handleHeightChange","handleRoofTypeSelect","handleFoundationTypeSelect","inputArea","onAreaChange","inputHeight","onFloorHeightChange","inputRoofType","onRoofTypeChange","inputFoundationType","onFoundationTypeChange","floorHeight","perimeter","windowArea","age","selectAddress","selectEdit","pattern","Material","handleSimpleClick","handleAdvancedClick","handleBackClick","onChange1","onChange2","Simple","wallMaterial","roofMaterial","floorMaterial","foundationMaterial","handleWallSelect","handleRoofSelect","handleFloorSelect","handleFoundationSelect","handleClick","newMaterial","wallMaterials","roofMaterials","floorMaterials","foundationMaterials","wallData","borderColor","borderWidth","roofData","floorData","foundationData","allData","stacked","ticks","beginAtZero","Advanced","App","imageSrc","notes","changeAddress","changeArea","changeEdit","changeBack","changeFloorHeight","changeRoofType","changeFoundationType","newAddress","newArea","newFloors","newBuilt","selectedAddress","newLocation","newGoBack","newFloorHeight","newRoofType","newFoundationType","newEnergy","newEdit","ReactDOM","render","document","getElementById","BetonMatPas","require","GipsMatPas","IsoleringMatPas","MetalMatPas","MurstenMatPas","PapMatPas","SkiferMatPas","StenMatPas","TeglMatPas","TræMatPas","BygPas","Bygningsdele","Væg","Tag","Gulv","Fundament","Indervæg","Mængder","zip","JSZip","file","JSON","stringify","eval","generateAsync","content","saveAs"],"mappings":"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","file":"static/js/main.dee86eab.chunk.js","sourcesContent":["const items = [\r\n    {\r\n      id: 0,\r\n      name: \"Klintevej 18, 4000\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Chr Winthers Vej 20B, 2800\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Postmosen 34, 3400\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Tesdorpfsvej 73, 2000\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Tornevangsvej 14, 3460\",\r\n    },\r\n  ]; \r\n\r\n  export default items","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDzIX2onzsXrEtuNmovSkCH6qDMWYWW_4I\",\r\n    authDomain: \"bygningspas.firebaseapp.com\",\r\n    databaseURL: \"https://bygningspas-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"bygningspas\",\r\n    storageBucket: \"bygningspas.appspot.com\",\r\n    messagingSenderId: \"1056938501952\",\r\n    appId: \"1:1056938501952:web:1f97e62acb976a11babca5\",\r\n    measurementId: \"G-335D61C3DJ\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics()\r\n  export const db = firebase.database();\r\n\r\nexport default firebase;","import React from 'react';\nimport './SearchBar.css';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\nimport items from '../../items/items'\nimport { db } from \"../../util/firebase\";\nimport { IconContext } from \"react-icons\";\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\nimport ReactTooltip from 'react-tooltip';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addressSelect: '',\n                  addressSelected: false,\n                  addressInfo: []}\n\n    this.handleOnAddressSelect = this.handleOnAddressSelect.bind(this)\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleOnFocus = this.handleOnFocus.bind(this);\n  }\n\n  handleOnAddressSelect = (item) => {\n    const address = item.name;\n    db.ref(address).on(\"value\", snapshot => {\n        let allInfo = [];\n        snapshot.forEach(snap => {\n          allInfo.push(snap.val());\n        });\n        this.setState({ addressInfo: allInfo });\n        console.log(this.state.addressInfo)\n      });\n  }\n\n  handleOnSelect = () => {\n    const address = this.state.addressInfo[7];\n    const area = this.state.addressInfo[0];\n    const floors = this.state.addressInfo[3];\n    const built = this.state.addressInfo[1];\n    const selectAddress = true;\n    const location = this.state.addressInfo[5];\n    const goBack = false;\n    const floorHeight = 2.5;\n    const roofType = this.state.addressInfo[8].roof;\n    const foundationType = this.state.addressInfo[8].foundation;\n    const energy = this.state.addressInfo[2];\n    this.props.onChange(address,area,floors,built,selectAddress,location,goBack,floorHeight,roofType,foundationType,energy)\n  }\n\n  handleOnFocus = () => {\n    console.log(\"Focused\");\n  }\n\n  render() {\n    if (this.props.building.goBack === true) {\n    return (\n      <div className='SearchPage'>\n        <div className='PageHeader'>\n          <h1>Bygningspas</h1>\n        </div>\n        <div className=\"SearchBar\">\n          <header className=\"SearchHeader\">\n              <div className=\"SearchBar-fields\" style={{ width: 300, margin: 20 }}>\n                <ReactSearchAutocomplete\n                placeholder=\"Adresse\" \n                items = {items}\n                onSelect={this.handleOnAddressSelect}\n                onFocus={this.handleOnFocus}\n                styling={{ zIndex: 2 }} // To display it on top of the search box below\n                autoFocus\n              />\n              <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"searchInfo\" }}>\n                <div>\n                  <BsFillInfoCircleFill data-tip=\"\"/>\n                  <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true'>\n                    <p>Tilgængelige addresser er:</p>\n                    <ul className='ToolTipList'>\n                      <li>Chr. Winthers Vej 20B, 2800</li>\n                      <li>Klintevej 18, 4000</li>\n                      <li>Postmosen 34, 3400</li>\n                      <li>Tesdorpfsvej 73, 2000</li>\n                      <li>Tornevangsvej 14, 3460</li>\n                    </ul>\n                  </ReactTooltip>\n                </div>\n              </IconContext.Provider>\n              <a className='buttonSearch' onClick={this.handleOnSelect}>Søg</a>\n            </div>\n          </header>\n        </div>\n      </div>\n      \n    );\n    } else {\n      return(\n        <div></div>\n      )\n    }\n  }\n}\n\nexport default SearchBar;","import React from 'react';\r\nimport ReactStreetview from 'react-streetview';\r\n\r\nclass BuildingView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        // see https://developers.google.com/maps/documentation/javascript\r\n        const googleMapsApiKey = 'AIzaSyCwIG4lbTXNcDjbNAetvu3XMiiUYJm78Tc';\r\n\r\n        // see https://developers.google.com/maps/documentation/javascript/3.exp/reference#StreetViewPanoramaOptions\r\n        const streetView = {\r\n            position: {lat: this.props.building.location[0], lng: this.props.building.location[1]},\r\n            pov: {heading: this.props.building.location[2], pitch: this.props.building.location[3]},\r\n            zoom: 1\r\n        };\r\n\r\n        return (\r\n            <div style={{\r\n                width: '550px',\r\n                height: '550px',\r\n                backgroundColor: '#eeeeee'\r\n            }}>\r\n                <ReactStreetview\r\n                    apiKey={googleMapsApiKey}\r\n                    streetViewPanoramaOptions={streetView}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default BuildingView","export default __webpack_public_path__ + \"static/media/Saddel.6c251b99.jpg\";","export default __webpack_public_path__ + \"static/media/Valm.6d7431d0.jpg\";","export default __webpack_public_path__ + \"static/media/Skråt.90771ca1.jpg\";","export default __webpack_public_path__ + \"static/media/Fladt.8f7a7c76.jpg\";","import React from 'react'\r\nimport './RoofTypeImage.css'\r\nimport saddel from './Saddel.jpg'\r\nimport valm from './Valm.jpg'\r\nimport skråt from './Skråt.jpg'\r\nimport fladt from './Fladt.jpg'\r\n\r\nclass RoofTypeImage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.roofType === 'Saddel') {\r\n            return <img src={saddel}/>\r\n        } else if (this.props.roofType === 'Fladt') {\r\n            return <img src={fladt}/>\r\n        } else if (this.props.roofType === 'Skråt') {\r\n            return <img src={skråt}/>\r\n        } else if (this.props.roofType === 'Valm') {\r\n            return <img src={valm}/>\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default RoofTypeImage","export default __webpack_public_path__ + \"static/media/Linje.81eec288.jpg\";","export default __webpack_public_path__ + \"static/media/Punkt.272f955c.jpg\";","export default __webpack_public_path__ + \"static/media/Stribe.0febb20f.jpg\";","import React from 'react'\r\nimport './FoundationTypeImage.css'\r\nimport linje from './Linje.jpg'\r\nimport punkt from './Punkt.jpg'\r\nimport stribe from './Stribe.jpg'\r\n\r\nclass FoundationTypeImage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.foundationType === 'Linje') {\r\n            return <img src={linje}/>\r\n        } else if (this.props.foundationType === 'Punkt') {\r\n            return <img src={punkt}/>\r\n        } else if (this.props.foundationType === 'Stribe') {\r\n            return <img src={stribe}/>\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default FoundationTypeImage","import React from 'react'\r\nimport './Impacts.css'\r\n\r\nclass Impacts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {emissions: {},\r\n                     complete: false}\r\n\r\n        this.multiplyObj = this.multiplyObj.bind(this)\r\n        this.getMaterialEmission = this.getMaterialEmission.bind(this)\r\n        this.runEmissions = this.runEmissions.bind(this)\r\n        this.runPrices = this.runPrices.bind(this)\r\n        this.removeMissing = this.removeMissing.bind(this)\r\n        this.sumObjects = this.sumObjects.bind(this)\r\n    }\r\n\r\n    multiplyObj(obj,val) {\r\n        for (let key in obj) {\r\n            if (typeof obj[key] == 'number') {\r\n              obj[key] *= val;\r\n            }\r\n        } return obj\r\n    }\r\n\r\n    getMaterialEmission(arr,obj) {\r\n        const newEmission = {}\r\n        const newEmissions = obj\r\n        for (var x of arr) {\r\n            if (x[0] === 'Beton') {\r\n                newEmission.Beton = this.multiplyObj(newEmissions.Beton, x[1])\r\n            } \r\n            if (x[0] === 'Træ') {\r\n                newEmission.Træ = this.multiplyObj(newEmissions.Træ, x[1])\r\n            } \r\n            if (x[0] === 'Skifer') {\r\n                newEmission.Skifer = this.multiplyObj(newEmissions.Skifer, x[1])\r\n            } \r\n            if (x[0] === 'Tegl') {\r\n                newEmission.Tegl = this.multiplyObj(newEmissions.Tegl, x[1])\r\n            } \r\n            if (x[0] === 'Sten') {\r\n                newEmission.Fliser = this.multiplyObj(newEmissions.Fliser, x[1])\r\n            } \r\n            if (x[0] === 'Isolering') {\r\n                newEmission.Isolering = this.multiplyObj(newEmissions.Isolering, x[1])\r\n            } \r\n            if (x[0] === 'Pap') {\r\n                newEmission.Tagpap = this.multiplyObj(newEmissions.Tagpap, x[1])\r\n            } \r\n            if (x[0] === 'Mursten') {\r\n                newEmission.Mursten = this.multiplyObj(newEmissions.Mursten, x[1])\r\n            } \r\n            if (x[0] === 'Metal') {\r\n                newEmission.Metal = this.multiplyObj(newEmissions.Metal, x[1])\r\n            } \r\n            if (x[0] === 'Gips') {\r\n                newEmission.Gips = this.multiplyObj(newEmissions.Gips, x[1])\r\n            }\r\n        }\r\n        return newEmission\r\n    } \r\n\r\n    runEmissions() {\r\n        const emissions = {\r\n    \r\n            //M2 2cm\r\n            Fliser:     {GWP: 6.18*50,\r\n                        ODP: (4.96*Math.exp(-14))*50,\r\n                        POCP: 0.000326*50,\r\n                        AP: 0.00613*50,\r\n                        EP: 0.00119*50,\r\n                        ADPE: 7.81*Math.exp(-7)*50,\r\n                        ADPF: 97.66*50,\r\n                        PERT: 9.186*50,\r\n                        PENRT: 100.42*50,\r\n                        RSF: 0*50,\r\n                        NRSF: 0*50},\r\n        \r\n            Beton:      {GWP: 197,\r\n                        ODP: 5.36*Math.exp(-8),\r\n                        POCP: 0.023,\r\n                        AP: 0.287,\r\n                        EP: 0.0535,\r\n                        ADPE: 0.000634,\r\n                        ADPF: 900,\r\n                        PERT: 190,\r\n                        PENRT: 999,\r\n                        RSF: 193,\r\n                        NRSF: 348},\r\n        \r\n            Træ:        {GWP: 0,\r\n                        ODP: 6.49*Math.exp(-12),\r\n                        POCP: 0.059,\r\n                        AP: 0.667,\r\n                        EP: 0.152,\r\n                        ADPE: 6.75*Math.exp(-5),\r\n                        ADPF: 2494,\r\n                        PERT: 12719,\r\n                        PENRT: 2853,\r\n                        RSF: 0,\r\n                        NRSF: 0},\r\n            //M2 2cm\r\n            Tegl:       {GWP: 15.87*50,\r\n                        ODP: (1.14*Math.exp(-13))*50,\r\n                        POCP: 0.003*50,\r\n                        AP: 0.0123*50,\r\n                        EP: 0.0023*50,\r\n                        ADPE: 1.84*Math.exp(-6)*50,\r\n                        ADPF: 242*50,\r\n                        PERT: 21.34*50,\r\n                        PENRT: 248.8*50,\r\n                        RSF: 0*50,\r\n                        NRSF: 0*50},\r\n            //M2 2cm\r\n            Skifer:     {GWP: 15.03*50,\r\n                        ODP: (2.21*Math.exp(-13))*50,\r\n                        POCP: 0.0088*50,\r\n                        AP: 0.088*50,\r\n                        EP: 0.02*50,\r\n                        ADPE: 4.55*Math.exp(-6)*50,\r\n                        ADPF: 189*50,\r\n                        PERT: 49*50,\r\n                        PENRT: 202.9*50,\r\n                        RSF: 0*50,\r\n                        NRSF: 0}*50,\r\n        \r\n            Isolering:  {GWP: 40,\r\n                        ODP: 6.18*Math.exp(-13),\r\n                        POCP: 0.0097,\r\n                        AP: 0.18,\r\n                        EP: 0.026,\r\n                        ADPE: 8.53*Math.exp(-6),\r\n                        ADPF: 459,\r\n                        PERT: 78,\r\n                        PENRT: 481.1,\r\n                        RSF: 0.0068,\r\n                        NRSF: 0},\r\n            //M2 1cm\r\n            Tagpap:     {GWP: 5.36*100,\r\n                        ODP: (4.9*Math.exp(-14))*100,\r\n                        POCP: 0.0015*100,\r\n                        AP: 0.0084*100,\r\n                        EP: 0.0011*100,\r\n                        ADPE: 1.1*Math.exp(-6)*100,\r\n                        ADPF: 254*100,\r\n                        PERT: 9.46*100,\r\n                        PENRT: 258*100,\r\n                        RSF: 0*100,\r\n                        NRSF: 0*100},\r\n        \r\n            Mursten:    {GWP: 528,\r\n                        ODP: 3.03*Math.exp(-12),\r\n                        POCP: 0.079,\r\n                        AP: 0.45,\r\n                        EP: 0.084,\r\n                        ADPE: 5.4*Math.exp(-5),\r\n                        ADPF: 7980,\r\n                        PERT: 574,\r\n                        PENRT: 8150,\r\n                        RSF: 0,\r\n                        NRSF: 0},\r\n            \r\n            Metal:      {GWP: 1125,\r\n                        ODP: 1.95*Math.exp(-11),\r\n                        POCP: 0.4,\r\n                        AP: 2.164,\r\n                        EP: 0.219,\r\n                        ADPE: 0.000049,\r\n                        ADPF: 10200,\r\n                        PERT: 1516,\r\n                        PENRT: 11470,\r\n                        RSF: 0,\r\n                        NRSF: 0},\r\n            //2cm\r\n            Gips:       {GWP: 1.54*50,\r\n                        ODP: (1.44*Math.exp(-14))*50,\r\n                        POCP: 0.00001*50,\r\n                        AP: 0.0028*50,\r\n                        EP: 0.000088*50,\r\n                        ADPE: 2.48*Math.exp(-7)*50,\r\n                        ADPF: 32.68*50,\r\n                        PERT: 9.8*50,\r\n                        PENRT: 33.5*50,\r\n                        RSF: 0,\r\n                        NRSF: 0},\r\n        }\r\n\r\n        const newEmission = this.getMaterialEmission(this.props.amount,emissions)\r\n\r\n        this.setState({emissions: newEmission})\r\n        this.setState({complete: true})\r\n    }\r\n\r\n    runPrices(array) {\r\n        const newArray = []\r\n        const Beton = ['Beton',0]\r\n        const Træ = ['Træ',0]\r\n        const Skifer = ['Skifer',0]\r\n        const Tegl = ['Tegl',0]\r\n        const Isolering = ['Isolering',0]\r\n        const Tagpap = ['Pap',0]\r\n        const Mursten = ['Mursten',0]\r\n        const Gips = ['Gips', 0]\r\n        const Metal = ['Metal', 0]\r\n        const Sten = ['Sten', 0]\r\n\r\n        for (var x of array) {\r\n            if (x[0] === 'Træ') {\r\n                Træ[1] = x[1]*70\r\n            }\r\n            if (x[0] === 'Beton') {\r\n                Beton[1] = x[1]*60\r\n            }\r\n            if (x[0] === 'Skifer') {\r\n                Skifer[1] = x[1]*80\r\n            }\r\n            if (x[0] === 'Tegl') {\r\n                Tegl[1] = x[1]*85\r\n            }\r\n            if (x[0] === 'Isolering') {\r\n                Isolering[1] = x[1]*55\r\n            }\r\n            if (x[0] === 'Tagpap') {\r\n                Tagpap[1] = x[1]*20\r\n            }\r\n            if (x[0] === 'Mursten') {\r\n                Mursten[1] = x[1]*70\r\n            }\r\n            if (x[0] === 'Gips') {\r\n                Gips[1] = x[1]*40\r\n            }\r\n            if (x[0] === 'Metal') {\r\n                Metal[1] = x[1]*200\r\n            }\r\n            if (x[0] === 'Sten') {\r\n                Sten[1] = x[1]*85\r\n            }             \r\n        }\r\n        newArray.push(Beton) \r\n        newArray.push(Træ)\r\n        newArray.push(Skifer)\r\n        newArray.push(Tegl)\r\n        newArray.push(Isolering)\r\n        newArray.push(Tagpap)\r\n        newArray.push(Mursten)\r\n        newArray.push(Metal)\r\n        newArray.push(Gips)\r\n        newArray.push(Sten)\r\n        return newArray\r\n    }\r\n\r\n    removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n\r\n    sumObjects(...objs) {\r\n        return objs.reduce((a, b) => {\r\n          for (let k in b) {\r\n            if (b.hasOwnProperty(k))\r\n              a[k] = (a[k] || 0) + b[k];\r\n          }\r\n          return a;\r\n        }, {});\r\n    }\r\n\r\n    render() { \r\n\r\n        if (this.state.complete === false) {\r\n        return(\r\n            <div className='ImpactSection'>\r\n                <div className='ImpactHeader'>\r\n                    <h1>Klimapåvirkning</h1>\r\n                </div>\r\n                <a className='emissionUpdate' onClick={this.runEmissions}>Beregn/Opdater</a>\r\n                <button className='zipButton' onClick={this.downloadZip}>hent</button>\r\n                <p></p>\r\n            </div>\r\n        )\r\n        } else if (this.state.complete === true) {\r\n            return(\r\n                <div className='ImpactSection'>\r\n                    <div className='ImpactHeader'>\r\n                        <h1>Klimapåvirkning</h1>\r\n                    </div>\r\n                    <div>\r\n                        <a className='emissionUpdate' onClick={this.runEmissions}>Beregn/Opdater</a>\r\n                    </div>\r\n                    <div className='emissionContainer'>\r\n                        <div className='climateEmission'>\r\n                            <p className='emissionTitle'>Klima</p>\r\n                            <p>{Object.entries(this.sumObjects(this.state.emissions.Beton,this.state.emissions.Isolering,this.state.emissions.Metal,this.state.emissions.Fliser,\r\n                                this.state.emissions.Træ,this.state.emissions.Tegl,this.state.emissions.Skifer,this.state.emissions.Tagpap,this.state.emissions.Mursten,\r\n                                this.state.emissions.Gips)).map((item) => <li>{item[0]}: {(item[1]).toFixed(1)}</li>)}</p>\r\n                        </div>\r\n                        <div className='financialEmission'>\r\n                            <p className='emissionTitle'>Financielt</p>\r\n                            <p>{this.removeMissing(this.runPrices(this.props.amount)).map((item) => <li>{item[0]}: {(item[1].toFixed(1))} DKK</li>)}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Impacts","\r\nexport function simpleRoof(material) {\r\n    // Tegl, Skifer, Tagpap\r\n    if (material === 'Tegl') {\r\n        const Materialer = [['Tegl', 0.02], ['Isolering', 0.2], ['Træ', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Skifer') {\r\n        const Materialer = [['Skifer', 0.02], ['Isolering', 0.2], ['Træ', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Tagpap') {\r\n        const Materialer = [['Tagpap', 0.005], ['Isolering', 0.2], ['Træ', 0.1]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n} \r\n\r\nexport function simpleWall(material) {\r\n    // Beton, Isolering, Træ, Mursten, Metal\r\n    if (material === 'Beton') {\r\n        const Materialer = [['Beton', 0.1], ['Isolering', 0.25], ['Træ', 0.05], ['Gips', 0.02]]\r\n        return Materialer\r\n    } else if (material === 'Mursten') {\r\n        const Materialer = [['Mursten', 0.1], ['Isolering', 0.25], ['Træ', 0.05], ['Gips', 0.02]]\r\n        return Materialer\r\n    } else if (material === 'Træ') {\r\n        const Materialer = [['Træ', 0.05], ['Metal', 0.01], ['Isolering', 0.25], ['Gips', 0.02]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n} \r\n\r\nexport function simpleFloor(material) {\r\n    // Beton, Træ, Sten\r\n    if (material === 'Beton') {\r\n        const Materialer = [['Beton', 0.1], ['Isolering', 0.1], ['Træ', 0.15]]\r\n        return Materialer\r\n    } else if (material === 'Træ') {\r\n        const Materialer = [['Træ', 0.20], ['Isolering', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Sten') {\r\n        const Materialer = [['Sten', 0.02], ['Træ', 0.15], ['Isolering', 0.1]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nexport function simpleFoundation(material) {\r\n    // Beton, Skrue\r\n    if (material === 'Beton') {\r\n        const Materialer = [['Beton', 0.3], ['Isolering', 0.2]]\r\n        return Materialer\r\n    } else if (material === 'Skrue') {\r\n        const Materialer = [['Metal', 0.3], ['Isolering', 0.2]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nexport function simpleInWall(material) {\r\n    // Beton, Træ, Mursten, Gips\r\n    if (material === 'Beton') {\r\n        const Materialer = [['Beton', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Mursten') {\r\n        const Materialer = [['Mursten', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Træ') {\r\n        const Materialer = [['Træ', 0.05]]\r\n        return Materialer\r\n    } else if (material === 'Gips') {\r\n        const Materialer = [['Gips', 0.05]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n} \r\n\r\nexport function roofTypeValue(roofType) {\r\n    //Saddel, Fladt, Valm, Skråt\r\n    if (roofType === 'Saddel') {\r\n        const roofAreaConst = 1.2\r\n        return roofAreaConst\r\n    } else if (roofType === 'Fladt') {\r\n        const roofAreaConst = 1\r\n        return roofAreaConst\r\n    } else if (roofType === 'Valm') {\r\n        const roofAreaConst = 1.4\r\n        return roofAreaConst\r\n    } else if (roofType === 'Skråt') {\r\n        const roofAreaConst = 1.1\r\n        return roofAreaConst\r\n    } else {\r\n        return 1\r\n    }\r\n}\r\n\r\nexport function foundationTypeValue(foundationType) {\r\n    //Linje, Stribe, Punkt\r\n    if (foundationType === 'Linje') {\r\n        const foundationAreaConst = 0.25\r\n        return foundationAreaConst\r\n    } else if (foundationType === 'Stribe') {\r\n        const foundationAreaConst = 0.4\r\n        return foundationAreaConst\r\n    } else if (foundationType === 'Punkt') {\r\n        const foundationAreaConst = 0.1\r\n        return foundationAreaConst\r\n    } else {\r\n        return 1\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './Results.css'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Impacts from '../Impacts/Impacts'\r\nimport Download from '../Download/Download'\r\nimport { roofTypeValue, foundationTypeValue } from '../../functions/simpleFunctions'\r\n\r\nclass Results extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.sumMaterials = this.sumMaterials.bind(this)\r\n        this.removeMissing = this.removeMissing.bind(this)\r\n        this.getLabels = this.getLabels.bind(this)\r\n        this.getData = this.getData.bind(this)\r\n    }\r\n\r\n    sumMaterials(array) {\r\n        const newArray = []\r\n        const Beton = ['Beton',0]\r\n        const Træ = ['Træ',0]\r\n        const Skifer = ['Skifer',0]\r\n        const Tegl = ['Tegl',0]\r\n        const Isolering = ['Isolering',0]\r\n        const Tagpap = ['Pap',0]\r\n        const Mursten = ['Mursten',0]\r\n        const Gips = ['Gips', 0]\r\n        const Metal = ['Metal', 0]\r\n        const Sten = ['Sten', 0]\r\n\r\n        for (var x of array) {\r\n            if (x[0] === 'Træ') {\r\n                Træ[1] = Træ[1]+x[1]\r\n            }\r\n            if (x[0] === 'Beton') {\r\n                Beton[1] = Beton[1]+x[1]\r\n            }\r\n            if (x[0] === 'Skifer') {\r\n                Skifer[1] = Skifer[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tegl') {\r\n                Tegl[1] = Tegl[1]+x[1]\r\n            }\r\n            if (x[0] === 'Isolering') {\r\n                Isolering[1] = Isolering[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tagpap') {\r\n                Tagpap[1] = Tagpap[1]+x[1]\r\n            }\r\n            if (x[0] === 'Mursten') {\r\n                Mursten[1] = Mursten[1]+x[1]\r\n            }\r\n            if (x[0] === 'Gips') {\r\n                Gips[1] = Gips[1]+x[1]\r\n            }\r\n            if (x[0] === 'Metal') {\r\n                Metal[1] = Metal[1]+x[1]\r\n            }\r\n            if (x[0] === 'Sten') {\r\n                Sten[1] = Sten[1]+x[1]\r\n            }             \r\n        }\r\n        newArray.push(Beton) \r\n        newArray.push(Træ)\r\n        newArray.push(Skifer)\r\n        newArray.push(Tegl)\r\n        newArray.push(Isolering)\r\n        newArray.push(Tagpap)\r\n        newArray.push(Mursten)\r\n        newArray.push(Metal)\r\n        newArray.push(Gips)\r\n        newArray.push(Sten)\r\n        return newArray\r\n    }\r\n\r\n    removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n\r\n    getLabels(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[0])\r\n        } return newArray\r\n    }\r\n\r\n    getData(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[1])\r\n        } return newArray\r\n    }\r\n\r\n    render() {\r\n\r\n         //-------------------------------------VARIABLES-----------------------------------------------\r\n         //#region\r\n         const area = this.props.building.area\r\n         const floors = this.props.building.floors\r\n         const totalArea = area*floors\r\n         const perimeter = Math.floor(Math.sqrt(area)*4)\r\n         const wallArea = perimeter*(floors*2.5)\r\n         const roofArea = Math.floor(area*roofTypeValue(this.props.building.roofType))\r\n         const foundationArea = area*foundationTypeValue(this.props.building.foundationType)\r\n         const windowArea = Math.floor(wallArea*0.15)\r\n         //#endregion\r\n         \r\n         //-----------------------------------MATERIAL AMOUNTS------------------------------------------\r\n         //#region\r\n         const wallMaterialAmount = this.props.materials.wall.map((item) => <li>{item[0]}: {(item[1]*wallArea).toFixed(2)}m3</li>)\r\n         const wallMaterialAmount2 = this.props.materials.wall.map((item) => [item[0],item[1]*wallArea])\r\n\r\n         const roofMaterialAmount = this.props.materials.roof.map((item) => <li>{item[0]}: {(item[1]*roofArea).toFixed(2)}m3</li>)\r\n         const roofMaterialAmount2 = this.props.materials.roof.map((item) => [item[0],item[1]*roofArea])\r\n\r\n         const floorMaterialAmount = this.props.materials.floor.map((item) => <li>{item[0]}: {(item[1]*totalArea).toFixed(2)}m3</li>)\r\n         const floorMaterialAmount2 = this.props.materials.floor.map((item) => [item[0],item[1]*totalArea])\r\n\r\n         const foundationMaterialAmount = this.props.materials.foundation.map((item) => <li>{item[0]}: {(item[1]*foundationArea).toFixed(2)}m3</li>)\r\n         const foundationMaterialAmount2 = this.props.materials.foundation.map((item) => [item[0],item[1]*foundationArea])\r\n\r\n         const inWallMaterialAmount = this.props.materials.inwall.map((item) => <li>{item[0]}: {(item[1]*wallArea*0.5).toFixed(2)}m3</li>)\r\n         const inWallMaterialAmount2 = this.props.materials.inwall.map((item) => [item[0],item[1]*wallArea*0.5])\r\n\r\n         const merged = [].concat.apply([], [wallMaterialAmount2,roofMaterialAmount2,floorMaterialAmount2,foundationMaterialAmount2,inWallMaterialAmount2]);\r\n         const mergedMaterials = this.removeMissing(this.sumMaterials(merged))\r\n\r\n         const mergedMaterialAmount = mergedMaterials.map((item) => <li>{item[0]}: {item[1].toFixed(2)}m3</li>)\r\n         //#endregion\r\n\r\n         //---------------------------------------CHART-------------------------------------------------\r\n         //#region \r\n         const chartData = this.getData(mergedMaterials)\r\n         const chartLabels = this.getLabels(mergedMaterials)\r\n\r\n         const data = {\r\n            labels: chartLabels,\r\n            datasets: [\r\n              {\r\n                label: '',\r\n                data: chartData,\r\n                backgroundColor: [\r\n                  'rgba(70, 200, 235, 1)',\r\n                  'rgba(30, 132, 235, 1)',\r\n                  'rgba(50, 170, 150, 1)',\r\n                  'rgba(24, 200, 235, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(100, 162, 235, 1)',\r\n                  'rgba(120, 152, 205, 1)',\r\n                  'rgba(50, 255, 205, 1)',\r\n                  'rgba(50, 105, 255, 1)',\r\n                  'rgba(70, 125, 235, 1)',\r\n                ],\r\n              },\r\n            ],\r\n          }\r\n          \r\n          const options = {\r\n            maintainAspectRatio: false, \r\n            legend: {\r\n                display: false\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display:false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    gridLines: {\r\n                        display:true\r\n                    }   \r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Samlede materialemængder [m3]',\r\n                fontSize: 20,\r\n                fontColor: 'DarkSlateGrey',\r\n                padding: 15,\r\n               }\r\n          }\r\n        //#endregion\r\n\r\n        return(\r\n            <div>\r\n                <h1 className='ResultHeader'>Materialemængder</h1>\r\n                <div className='ResultContainer'>\r\n                    <div className='aResult'>\r\n                        <p>Ydervægge</p>\r\n                        {wallMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Tag</p>\r\n                        {roofMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Gulve</p>\r\n                        {floorMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Fundament</p>\r\n                        {foundationMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult' id='NoBorder'>\r\n                        <p>Indervægge</p>\r\n                        {inWallMaterialAmount}\r\n                    </div>\r\n                </div>\r\n                <div className='SumContainer'>\r\n                    <div className='SumResult'>\r\n                        <p>Samlet</p>\r\n                        {mergedMaterialAmount}\r\n                    </div>\r\n                    <div className='BarContainer'>\r\n                        <Bar data={data} options={options} width={620} height={620}/>\r\n                    </div>\r\n                </div>\r\n                <Impacts materials={this.props.materials} building={this.props.building} amount={mergedMaterials}/>\r\n                <Download materials={this.props.materials} amount={mergedMaterials}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Results","import React from 'react'\r\nimport './ResultsSimple.css'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Impacts from '../Impacts/Impacts'\r\nimport DownloadSimple from '../DownloadSimple/DownloadSimple'\r\nimport { simpleRoof, simpleWall, simpleFloor, simpleFoundation, simpleInWall, roofTypeValue, foundationTypeValue } from '../../functions/simpleFunctions'\r\n\r\nclass ResultsSimple extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.sumMaterials = this.sumMaterials.bind(this)\r\n        this.removeMissing = this.removeMissing.bind(this)\r\n        this.getLabels = this.getLabels.bind(this)\r\n        this.getData = this.getData.bind(this)\r\n    }\r\n\r\n    sumMaterials(array) {\r\n        const newArray = []\r\n        const Beton = ['Beton',0]\r\n        const Træ = ['Træ',0]\r\n        const Skifer = ['Skifer',0]\r\n        const Tegl = ['Tegl',0]\r\n        const Isolering = ['Isolering',0]\r\n        const Tagpap = ['Pap',0]\r\n        const Mursten = ['Mursten',0]\r\n        const Gips = ['Gips', 0]\r\n        const Metal = ['Metal', 0]\r\n        const Sten = ['Sten', 0]\r\n\r\n        for (var x of array) {\r\n            if (x[0] === 'Træ') {\r\n                Træ[1] = Træ[1]+x[1]\r\n            }\r\n            if (x[0] === 'Beton') {\r\n                Beton[1] = Beton[1]+x[1]\r\n            }\r\n            if (x[0] === 'Skifer') {\r\n                Skifer[1] = Skifer[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tegl') {\r\n                Tegl[1] = Tegl[1]+x[1]\r\n            }\r\n            if (x[0] === 'Isolering') {\r\n                Isolering[1] = Isolering[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tagpap') {\r\n                Tagpap[1] = Tagpap[1]+x[1]\r\n            }\r\n            if (x[0] === 'Mursten') {\r\n                Mursten[1] = Mursten[1]+x[1]\r\n            }\r\n            if (x[0] === 'Gips') {\r\n                Gips[1] = Gips[1]+x[1]\r\n            }\r\n            if (x[0] === 'Metal') {\r\n                Metal[1] = Metal[1]+x[1]\r\n            }\r\n            if (x[0] === 'Sten') {\r\n                Sten[1] = Sten[1]+x[1]\r\n            }             \r\n        }\r\n        newArray.push(Beton) \r\n        newArray.push(Træ)\r\n        newArray.push(Skifer)\r\n        newArray.push(Tegl)\r\n        newArray.push(Isolering)\r\n        newArray.push(Tagpap)\r\n        newArray.push(Mursten)\r\n        newArray.push(Metal)\r\n        newArray.push(Gips)\r\n        newArray.push(Sten)\r\n        return newArray\r\n    }\r\n\r\n    removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n\r\n    getLabels(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[0])\r\n        } return newArray\r\n    }\r\n\r\n    getData(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[1])\r\n        } return newArray\r\n    }\r\n\r\n    render() {\r\n\r\n         //-------------------------------------VARIABLES-----------------------------------------------\r\n         //#region\r\n         const area = this.props.building.area\r\n         const floors = this.props.building.floors\r\n         const totalArea = area*floors\r\n         const perimeter = Math.floor(Math.sqrt(area)*4)\r\n         const wallArea = perimeter*(floors*2.5)\r\n         const roofArea = Math.floor(area*roofTypeValue(this.props.building.roofType))\r\n         const foundationArea = area*foundationTypeValue(this.props.building.foundationType)\r\n         const windowArea = Math.floor(wallArea*0.15)\r\n         //#endregion\r\n         \r\n         //-----------------------------------MATERIAL AMOUNTS------------------------------------------\r\n         //#region\r\n         const wallMaterialAmountS = simpleWall(this.props.materials.wallS).map((item) => <li>{item[0]}: {(item[1]*wallArea).toFixed(2)}m3</li>)\r\n         const wallMaterialAmountS2 = simpleWall(this.props.materials.wallS).map((item) => [item[0],item[1]*wallArea])\r\n\r\n         const roofMaterialAmountS = simpleRoof(this.props.materials.roofS).map((item) => <li>{item[0]}: {(item[1]*roofArea).toFixed(2)}m3</li>)\r\n         const roofMaterialAmountS2 = simpleRoof(this.props.materials.roofS).map((item) => [item[0],item[1]*roofArea])\r\n\r\n         const floorMaterialAmountS = simpleFloor(this.props.materials.floorS).map((item) => <li>{item[0]}: {(item[1]*totalArea).toFixed(2)}m3</li>)\r\n         const floorMaterialAmountS2 = simpleFloor(this.props.materials.floorS).map((item) => [item[0],item[1]*totalArea])\r\n\r\n         const foundationMaterialAmountS = simpleFoundation(this.props.materials.foundationS).map((item) => <li>{item[0]}: {(item[1]*foundationArea).toFixed(2)}m3</li>)\r\n         const foundationMaterialAmountS2 = simpleFoundation(this.props.materials.foundationS).map((item) => [item[0],item[1]*foundationArea])\r\n\r\n         const inWallMaterialAmountS = simpleInWall(this.props.materials.inwallS).map((item) => <li>{item[0]}: {(item[1]*wallArea*0.5).toFixed(2)}m3</li>)\r\n         const inWallMaterialAmountS2 = simpleInWall(this.props.materials.inwallS).map((item) => [item[0],item[1]*wallArea*0.5])\r\n\r\n         const mergedS = [].concat.apply([], [wallMaterialAmountS2,roofMaterialAmountS2,floorMaterialAmountS2,foundationMaterialAmountS2,inWallMaterialAmountS2]);\r\n         const mergedMaterialsS = this.removeMissing(this.sumMaterials(mergedS))\r\n\r\n         const mergedMaterialAmountS = mergedMaterialsS.map((item) => <li>{item[0]}: {item[1].toFixed(2)}m3</li>)\r\n         //#endregion\r\n\r\n         //---------------------------------------CHART-------------------------------------------------\r\n         //#region \r\n         const chartData = this.getData(mergedMaterialsS)\r\n         const chartLabels = this.getLabels(mergedMaterialsS)\r\n\r\n         const data = {\r\n            labels: chartLabels,\r\n            datasets: [\r\n              {\r\n                label: '',\r\n                data: chartData,\r\n                backgroundColor: [\r\n                    'rgba(70, 200, 235, 1)',\r\n                    'rgba(30, 132, 235, 1)',\r\n                    'rgba(50, 170, 150, 1)',\r\n                    'rgba(24, 200, 235, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(100, 162, 235, 1)',\r\n                    'rgba(120, 152, 205, 1)',\r\n                    'rgba(50, 255, 205, 1)',\r\n                    'rgba(50, 105, 255, 1)',\r\n                    'rgba(70, 125, 235, 1)',\r\n                ],\r\n              },\r\n            ],\r\n          }\r\n          \r\n          const options = {\r\n            maintainAspectRatio: false, \r\n            legend: {\r\n                display: false\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display:false\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    gridLines: {\r\n                        display:true\r\n                    }   \r\n                }]\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Samlede materialemængder [m3]',\r\n                fontSize: 20,\r\n                fontColor: 'DarkSlateGrey',\r\n                padding: 15,\r\n               }\r\n          }\r\n        //#endregion\r\n\r\n        return(\r\n            <div>\r\n                <h1 className='ResultHeader'>Materialemængder</h1>\r\n                <div className='ResultContainer'>\r\n                    <div className='aResult'>\r\n                        <p>Ydervægge</p>\r\n                        {wallMaterialAmountS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Tag</p>\r\n                        {roofMaterialAmountS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Gulve</p>\r\n                        {floorMaterialAmountS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Fundament</p>\r\n                        {foundationMaterialAmountS}\r\n                    </div>\r\n                    <div className='aResult' id='NoBorder'>\r\n                        <p>Indervægge</p>\r\n                        {inWallMaterialAmountS}\r\n                    </div>\r\n                </div>\r\n                <div className='SumContainer'>\r\n                    <div className='SumResult'>\r\n                        <p>Samlet</p>\r\n                        {mergedMaterialAmountS}\r\n                    </div>\r\n                    <div className='BarContainer'>\r\n                        <Bar data={data} options={options} width={620} height={620}/>\r\n                    </div>\r\n                </div>\r\n                <Impacts materials={this.props.materials} building={this.props.building} amount={mergedMaterialsS}/>\r\n                <DownloadSimple materials={this.props.materials} amount={mergedMaterialsS}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ResultsSimple","import React from 'react'\r\nimport { db } from \"../../util/firebase\";\r\nimport './updateButton.css'\r\n\r\nclass UpdateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.updateData = this.updateData.bind(this)\r\n        this.updateData2 = this.updateData2.bind(this)\r\n        this.updateData3 = this.updateData3.bind(this)\r\n    }\r\n\r\n    updateData() {\r\n        const wall = this.props.materials.wall\r\n        const roof = this.props.materials.roof\r\n        const floor = this.props.materials.floor\r\n        const foundation = this.props.materials.foundation\r\n        const inwall = this.props.materials.inwall\r\n        const windows = this.props.materials.windows\r\n\r\n            return db\r\n            .ref(`${this.props.building.address}/materials`)\r\n            .update(\r\n                {wall,roof,floor,foundation,inwall,windows},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ wall: this.props.materials.wall,\r\n                                roof: this.props.materials.roof,\r\n                                floor: this.props.materials.floor,\r\n                                foundation: this.props.materials.foundation,\r\n                                inwall: this.props.materials.inwall,\r\n                                windows: this.props.materials.windows});\r\n            })\r\n      }\r\n\r\n    updateData2() {\r\n        const roof = this.props.building.roofType\r\n        const foundation = this.props.building.foundationType\r\n\r\n            return db\r\n            .ref(`${this.props.building.address}/types`)\r\n            .update(\r\n                {roof,foundation},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ roof: this.props.building.roofType,\r\n                                foundation: this.props.building.foundationType});\r\n            })\r\n      }\r\n\r\n    updateData3() {\r\n        const area = this.props.building.area\r\n\r\n            return db\r\n            .ref(this.props.building.address)\r\n            .update(\r\n                {area},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ area: this.props.building.area});\r\n            })\r\n      }\r\n\r\n      updateData4() {\r\n          const roofS = this.props.materials.roofS\r\n          const wallS = this.props.materials.wallS\r\n          const floorS = this.props.materials.floorS\r\n          const foundationS = this.props.materials.foundationS\r\n          const inwallS = this.props.materials.inwallS\r\n\r\n          return db\r\n            .ref(`${this.props.building.address}/materials`)\r\n            .update(\r\n                {roofS,wallS,floorS,foundationS,inwallS},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ roofS: this.props.building.roofS,\r\n                                wallS: this.props.building.wallS,\r\n                                floorsS: this.props.building.floorsS,\r\n                                foundationS: this.props.building.foundationS,\r\n                                inwallS: this.props.building.inwallS});\r\n            })\r\n      }\r\n\r\n    render() {\r\n    if (this.props.materials.wall.length === 0 || this.props.materials.roof.length === 0 || this.props.materials.floor.length === 0 || this.props.materials.foundation.length === 0 || this.props.materials.inwall.length === 0) {\r\n            return(\r\n                <div></div>\r\n            )\r\n        } else {\r\n            return (\r\n            <div className='buttonDivUpdate'>\r\n                <a className='buttonUpdate' onClick={() => {this.updateData(); this.updateData2(); this.updateData3(); this.updateData4();}}>Gem</a>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateButton","import React from 'react'\r\nimport Dropdown from 'react-dropdown';\r\nimport './MaterialList.css'\r\nimport Toggle from 'react-toggle'\r\nimport Results from '../Results/Results'\r\nimport ResultsSimple from '../ResultsSimple/ResultsSimple'\r\nimport UpdateButton from './updateButton'\r\nimport {RangeStepInput} from 'react-range-step-input';\r\nimport { db } from \"../../util/firebase\";\r\nimport { simpleRoof, simpleWall, simpleFloor, simpleFoundation, simpleInWall } from '../../functions/simpleFunctions'\r\nimport { IconContext } from \"react-icons\";\r\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Options = ['Beton', 'Træ', 'Skifer', 'Tegl', 'Isolering', 'Pap', 'Mursten', 'Metal', 'Gips', 'Sten']\r\nconst wallOptions = ['Beton', 'Træ', 'Mursten']\r\nconst floorOptions = ['Beton', 'Træ', 'Sten']\r\nconst roofOptions = ['Tegl', 'Skifer', 'Tagpap']\r\nconst foundationOptions = ['Beton', 'Skrue']\r\nconst inWallOptions = ['Beton', 'Gips', 'Træ', 'Mursten']\r\nconst windowOptions = ['1-lag', '2-lag', '3-lag']\r\n\r\nclass MaterialList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {wall: [],\r\n                      wallS: [],\r\n                      wallM: '',\r\n                      wallP: 0.1,\r\n\r\n\r\n                      roof: [],\r\n                      roofS: [],\r\n                      roofM: '',\r\n                      roofP: 0.1,\r\n\r\n                      floor: [],\r\n                      floorS: [],\r\n                      floorM: '',\r\n                      floorP: 0.1,\r\n\r\n                      foundation: [],\r\n                      foundationS: [],\r\n                      foundationM: '',\r\n                      foundationP: 0.1,\r\n\r\n                      inwall: [],\r\n                      inwallS: [],\r\n                      inwallM: '',\r\n                      inwallP: 0.1,\r\n\r\n                      windows: [],\r\n                    \r\n                      advanced: false}\r\n                      \r\n        this.addWallItem = this.addWallItem.bind(this)\r\n        this.addWallMaterial = this.addWallMaterial.bind(this)\r\n        this.addWallPercentage = this.addWallPercentage.bind(this)\r\n        this.removeWallItem = this.removeWallItem.bind(this)\r\n        this.addSimpleWall = this.addSimpleWall.bind(this)\r\n        \r\n        this.addRoofItem = this.addRoofItem.bind(this)\r\n        this.addRoofMaterial = this.addRoofMaterial.bind(this)\r\n        this.addRoofPercentage = this.addRoofPercentage.bind(this)\r\n        this.removeRoofItem = this.removeRoofItem.bind(this)\r\n        this.addSimpleRoof = this.addSimpleRoof.bind(this)\r\n\r\n        this.addFloorItem = this.addFloorItem.bind(this)\r\n        this.addFloorMaterial = this.addFloorMaterial.bind(this)\r\n        this.addFloorPercentage = this.addFloorPercentage.bind(this)\r\n        this.removeFloorItem = this.removeFloorItem.bind(this)\r\n        this.addSimpleFloor = this.addSimpleFloor.bind(this)\r\n        \r\n        this.addFoundationItem = this.addFoundationItem.bind(this)\r\n        this.addFoundationMaterial = this.addFoundationMaterial.bind(this)\r\n        this.addFoundationPercentage = this.addFoundationPercentage.bind(this)\r\n        this.removeFoundationItem = this.removeFoundationItem.bind(this)\r\n        this.addSimpleFoundation = this.addSimpleFoundation.bind(this)\r\n\r\n        this.addInWallItem = this.addInWallItem.bind(this)\r\n        this.addInWallMaterial = this.addInWallMaterial.bind(this)\r\n        this.addInWallPercentage = this.addInWallPercentage.bind(this)\r\n        this.removeInWallItem = this.removeInWallItem.bind(this)\r\n        this.addSimpleInWall = this.addSimpleInWall.bind(this)\r\n\r\n        this.addWindowItem = this.addWindowItem.bind(this)\r\n        \r\n\r\n        this.toggleAdvanced = this.toggleAdvanced.bind(this)\r\n        this.toggleSimple = this.toggleSimple.bind(this)\r\n\r\n        this.isAbove100 = this.isAbove100.bind(this)\r\n\r\n        this.updateData = this.updateData.bind(this)\r\n    }\r\n\r\n      componentDidMount() {\r\n        db.ref(this.props.building.address).on(\"value\", snapshot => {\r\n            let allInfo = [];\r\n            snapshot.forEach(snap => {\r\n              allInfo.push(snap.val());\r\n            });\r\n            this.setState({ wall: allInfo[6].wall,\r\n                            roof: allInfo[6].roof,\r\n                            floor: allInfo[6].floor,\r\n                            foundation: allInfo[6].foundation,\r\n                            inwall: allInfo[6].inwall,\r\n                            windows: allInfo[6].windows,\r\n\r\n                            wallS: allInfo[6].wallS,\r\n                            roofS: allInfo[6].roofS,\r\n                            floorS: allInfo[6].floorS,\r\n                            foundationS: allInfo[6].foundationS,\r\n                            inwallS: allInfo[6].inwallS});\r\n          });\r\n      }\r\n\r\n      updateData() {\r\n        const wall = this.state.wall\r\n        const roof = this.state.roof\r\n        const floor = this.state.floor\r\n        const foundation = this.state.foundation\r\n\r\n            return db\r\n            .ref(`${this.props.building.address}/materials`)\r\n            .update(\r\n                {wall,roof,floor,foundation},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ wall: this.state.wall,\r\n                                roof: this.state.roof,\r\n                                floor: this.state.floor,\r\n                                foundation: this.state.foundation});\r\n            });\r\n      }\r\n      \r\n\r\n    //-------------------WALL-----------------------\r\n    //#region\r\n    addWallItem() {\r\n        this.setState({ wall: [...this.state.wall, [this.state.wallM, this.state.wallP]] }) \r\n    }\r\n\r\n    addWallMaterial(item) {\r\n        this.setState({ wallM: item.value }) \r\n    }\r\n\r\n    addWallPercentage(item) {\r\n        const newVal = item.target.value;\r\n        this.setState({ wallP: newVal }) \r\n    }\r\n\r\n    removeWallItem() {\r\n        this.setState({ wall: this.state.wall.slice(0,this.state.wall.length-1)})\r\n    }\r\n\r\n    addSimpleWall(item) {\r\n        this.setState({ wallS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------ROOF-----------------------\r\n    //#region\r\n    addRoofItem(item) {\r\n        this.setState({ roof: [...this.state.roof, [this.state.roofM, this.state.roofP]] }) \r\n    }\r\n\r\n    addRoofMaterial(item) {\r\n        this.setState({ roofM: item.value }) \r\n    }\r\n\r\n    addRoofPercentage(item) {\r\n        this.setState({ roofP: item.target.value }) \r\n    }\r\n\r\n    removeRoofItem() {\r\n        this.setState({ roof: this.state.roof.slice(0,this.state.roof.length-1)})\r\n    }\r\n\r\n    addSimpleRoof(item) {\r\n        this.setState({ roofS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------FLOOR-----------------------\r\n    //#region\r\n    addFloorItem(item) {\r\n        this.setState({ floor: [...this.state.floor, [this.state.floorM, this.state.floorP]] }) \r\n    }\r\n\r\n    addFloorMaterial(item) {\r\n        this.setState({ floorM: item.value})\r\n    }\r\n\r\n    addFloorPercentage(item) {\r\n        this.setState({ floorP: item.target.value})\r\n    }\r\n\r\n    removeFloorItem() {\r\n        this.setState({ floor: this.state.floor.slice(0,this.state.floor.length-1)})\r\n    }\r\n\r\n    addSimpleFloor(item) {\r\n        this.setState({ floorS: item.value})\r\n    }\r\n    //#endregion\r\n    \r\n    //-------------------FOUNDATION-----------------------\r\n    //#region\r\n    addFoundationItem(item) {\r\n        this.setState({ foundation: [...this.state.foundation, [this.state.foundationM, this.state.foundationP]] }) \r\n    }\r\n\r\n    addFoundationMaterial(item) {\r\n        this.setState({ foundationM: item.value})\r\n    }\r\n\r\n    addFoundationPercentage(item) {\r\n        this.setState({ foundationP: item.target.value})\r\n    }\r\n\r\n    removeFoundationItem() {\r\n        this.setState({ foundation: this.state.foundation.slice(0,this.state.foundation.length-1)})\r\n    }\r\n\r\n    addSimpleFoundation(item) {\r\n        this.setState({ foundationS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------INWALL-----------------------\r\n    //#region\r\n    addInWallItem() {\r\n        this.setState({ inwall: [...this.state.inwall, [this.state.inwallM, this.state.inwallP]] }) \r\n    }\r\n\r\n    addInWallMaterial(item) {\r\n        this.setState({ inwallM: item.value }) \r\n    }\r\n\r\n    addInWallPercentage(item) {\r\n        const newVal = item.target.value;\r\n        this.setState({ inwallP: newVal }) \r\n    }\r\n\r\n    removeInWallItem() {\r\n        this.setState({ inwall: this.state.inwall.slice(0,this.state.inwall.length-1)})\r\n    }\r\n\r\n    addSimpleInWall(item) {\r\n        this.setState({ inwallS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------WINDOWS-----------------------\r\n    //#region\r\n    addWindowItem(item) {\r\n        this.setState({ windows: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------TOGGLE-----------------------\r\n    //#region\r\n    toggleAdvanced() {\r\n        this.setState({advanced: true})\r\n    }\r\n\r\n    toggleSimple() {\r\n        this.setState({advanced: false})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------FUNCTIONS-----------------------\r\n    isAbove100(number) {\r\n        if (number >= 0) {\r\n            return 'Mangler: '+number+'%'\r\n        } else {\r\n            return 'OVER 100%, FJERN MATERIALER'\r\n        }\r\n    }\r\n\r\n    render () {\r\n        if (this.state.advanced == true) {\r\n        return (\r\n            <div>\r\n                <div className='MaterialHeader'>\r\n                    <h1>Materialer</h1>\r\n                    <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"materialInfo\" }}>\r\n                            <div>\r\n                                <BsFillInfoCircleFill data-tip=\"\" data-for='2'/>\r\n                                <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true' id='2'>\r\n                                    <ol className='ToolTipList' type='A'>\r\n                                    <li>Materialer vælges på 2 måder - simpelt eller avanceret</li>\r\n                                    <li>I den simple udgave vælges et preset for hvert materiale, som herefter <br></br> bestemmer hvilke materialer og tykkelser der indgår</li>\r\n                                    <li>I den avancerede udgave tilføjer brugeren selv materialer og materialetykkelser til hver af bygningsdelene</li>\r\n                                    </ol>\r\n                                </ReactTooltip>\r\n                            </div>\r\n                    </IconContext.Provider>\r\n                </div>\r\n                <div className='ToggleButton'>\r\n                        <p>Avanceret</p>\r\n                        <Toggle\r\n                            id='material-status'\r\n                            onChange={this.toggleSimple} />\r\n                </div>\r\n                <div className='materialLists'>\r\n                    <div className='materialSection'>\r\n                        <h2>Ydervægge</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addWallMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.wallP} step={0.01}\r\n                                    onChange={this.addWallPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.wallP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.wall.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addWallItem}>Tilføj</button>\r\n                        <button onClick={this.removeWallItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Tag</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addRoofMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.roofP} step={0.01}\r\n                                    onChange={this.addRoofPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.roofP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.roof.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addRoofItem}>Tilføj</button>\r\n                        <button onClick={this.removeRoofItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Gulv</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addFloorMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.floorP} step={0.01}\r\n                                    onChange={this.addFloorPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.floorP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.floor.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addFloorItem}>Tilføj</button>\r\n                        <button onClick={this.removeFloorItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Fundament</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addFoundationMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.foundationP} step={0.01}\r\n                                    onChange={this.addFoundationPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.foundationP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.foundation.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addFoundationItem}>Tilføj</button>\r\n                        <button onClick={this.removeFoundationItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Indervægge</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addInWallMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.inwallP} step={0.01}\r\n                                    onChange={this.addInWallPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.inwallP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.inwall.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addInWallItem}>Tilføj</button>\r\n                        <button onClick={this.removeInWallItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                            <h2>Vinduer</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.windows}</p>\r\n                                <Dropdown className='drop3' options={windowOptions} onChange={this.addWindowItem} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{this.state.windows}</div>\r\n                    </div>\r\n                </div>\r\n                <Results materials={this.state} building={this.props.building}/>\r\n                <UpdateButton materials={this.state} building={this.props.building}/>\r\n            </div>\r\n        )\r\n        } else {\r\n            return(\r\n                <div>\r\n                    <div className='MaterialHeader'>\r\n                        <h1>Materialer</h1>\r\n                        <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"materialInfo\" }}>\r\n                                <div>\r\n                                <BsFillInfoCircleFill data-tip=\"\" data-for='3'/>\r\n                                <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true' id='3'>\r\n                                    <ul className='ToolTipList' type='A'>\r\n                                        <li>Materialer vælges på 2 måder - simpelt eller avanceret</li>\r\n                                        <li>I den simple udgave vælges et preset for hvert materiale, som herefter <br></br> bestemmer hvilke materialer og tykkelser der indgår</li>\r\n                                        <li>I den avancerede udgave tilføjer brugeren selv materialer og materialetykkelser til hver af bygningsdelene</li>\r\n                                    </ul>\r\n                                </ReactTooltip>\r\n                                </div>\r\n                        </IconContext.Provider>\r\n                    </div>\r\n                    <div className='ToggleButton'>\r\n                        <p>Avanceret</p>\r\n                        <Toggle\r\n                            id='material-status'\r\n                            onChange={this.toggleAdvanced} />\r\n                    </div>\r\n                    <div className='materialLists'>\r\n                        <div className='materialSection'>\r\n                            <h2>Ydervægge</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.wallS}</p>\r\n                                <Dropdown className='drop2' options={wallOptions} onChange={this.addSimpleWall} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleWall(this.state.wallS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Tag</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.roofS}</p>\r\n                                <Dropdown className='drop2' options={roofOptions} onChange={this.addSimpleRoof} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleRoof(this.state.roofS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Gulv</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.floorS}</p>\r\n                                <Dropdown className='drop2' options={floorOptions} onChange={this.addSimpleFloor} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleFloor(this.state.floorS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Fundament</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.foundationS}</p>\r\n                                <Dropdown className='drop2' options={foundationOptions} onChange={this.addSimpleFoundation} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleFoundation(this.state.foundationS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Indervægge</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.inwallS}</p>\r\n                                <Dropdown className='drop2' options={inWallOptions} onChange={this.addSimpleInWall} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleInWall(this.state.inwallS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Vinduer</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.windows}</p>\r\n                                <Dropdown className='drop2' options={windowOptions} onChange={this.addWindowItem} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{this.state.windows}</div>\r\n                        </div>\r\n                    </div>\r\n                    <ResultsSimple materials={this.state} building={this.props.building}/>\r\n                    <UpdateButton materials={this.state} building={this.props.building}/>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MaterialList","import React from 'react';\nimport './Building.css';\nimport BuildingView from '../BuildingView/BuildingView'\nimport RoofTypeImage from './RoofTypeImage/RoofTypeImage'\nimport FoundationTypeImage from './FoundationTypeImage/FoundationTypeImage'\nimport MaterialList from '../MaterialList/MaterialList'\nimport Dropdown from 'react-dropdown';\nimport { IconContext } from \"react-icons\";\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\nimport ReactTooltip from 'react-tooltip';\nimport { roofTypeValue, foundationTypeValue } from '../../functions/simpleFunctions'\n\nconst roofTypeOptions = [\n  'Saddel', 'Fladt', 'Valm', 'Skråt'\n]\n\nconst foundationTypeOptions = [\n  'Linje', 'Punkt', 'Stribe'\n]\n\nclass Building extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleAreaChange = this.handleAreaChange.bind(this)\n    this.handleHeightChange = this.handleHeightChange.bind(this)\n    this.handleRoofTypeSelect = this.handleRoofTypeSelect.bind(this)\n    this.handleFoundationTypeSelect = this.handleFoundationTypeSelect.bind(this)\n  }\n\n  handleAreaChange(inputArea) {\n    const area = inputArea.target.value;\n    this.props.onAreaChange(area)\n  }\n\n  handleHeightChange(inputHeight) {\n    const height = inputHeight.target.value;\n    this.props.onFloorHeightChange(height)\n  }\n\n  handleRoofTypeSelect(inputRoofType) {\n    const roofType = inputRoofType.value;\n    this.props.onRoofTypeChange(roofType)\n  }\n\n  handleFoundationTypeSelect(inputFoundationType) {\n    const foundationType = inputFoundationType.value;\n    this.props.onFoundationTypeChange(foundationType)\n  }\n\n  render() {\n\n    const area = this.props.building.area\n    const floors = this.props.building.floors\n    const floorHeight = this.props.building.floorHeight\n    const totalArea = area*floors\n    const perimeter = Math.floor(Math.sqrt(area)*4)\n    const wallArea = Math.floor(perimeter*(floors*floorHeight))\n    const roofArea = Math.floor(area*roofTypeValue(this.props.building.roofType))\n    const windowArea = Math.floor(wallArea*0.15)\n    const built = this.props.building.built\n    const age = 2021-built\n\n    if (this.props.building.selectAddress === true && this.props.building.selectEdit === '') {\n    return (\n      <div className=\"Building\">\n        <div className='BuildingHeader'>\n          <h1>Bygningsinformation</h1>\n          <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"informationInfo\" }}>\n                <div>\n                  <BsFillInfoCircleFill data-tip=\"\" data-for='4'/>\n                  <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true' id='4'>\n                    <ol className='ToolTipList' type='A'>\n                      <li>Værdier med mørkeblå baggrund kan redigeres</li>\n                    </ol>\n                  </ReactTooltip>\n                </div>\n          </IconContext.Provider>\n        </div>\n        <div className=\"image-container\">\n          <BuildingView building={this.props.building}/>\n        </div>\n        <h2 className='address-title'>{this.props.building.address}</h2>\n        <div className='information-container'>\n          <div className='paravar'>\n            <p className='parameter'><span>Etageareal</span></p>\n            <input className='cVariable' value={area} pattern=\"[0-9]*\" onChange={this.handleAreaChange}/>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Etagehøjde</span></p>\n            <input className='cVariable' value={floorHeight} pattern=\"[0-9]*\" onChange={this.handleHeightChange}/>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Etager</span></p>\n            <p className='variable'><span>{floors}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Samlet areal</span></p>\n            <p className='variable'><span>{totalArea}</span></p>\n          </div>\n        </div>\n        <div className='information-container' id='i2'>\n          <div className='paravar'>\n            <p className='parameter'><span>Omkreds</span></p>\n            <p className='variable'><span>{perimeter}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Vægareal</span></p>\n            <p className='variable'><span>{wallArea}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Tagareal</span></p>\n            <p className='variable'><span>{roofArea}</span></p>\n          </div>\n        </div>\n        <div className='information-container' id='i3'>\n          <div className='paravar'>\n            <p className='parameter'><span>Vinduesareal</span></p>\n            <p className='variable'><span>{windowArea}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Opført</span></p>\n            <p className='variable'><span>{built}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Alder</span></p>\n            <p className='variable'><span>{age}</span></p>\n          </div>\n        </div>\n        <div className='typeContainer'>\n          <div className='compTypeContainer'>\n            <h2>Tagtype</h2>\n            <Dropdown options={roofTypeOptions} onChange={this.handleRoofTypeSelect} placeholder={this.props.building.roofType} />\n            <RoofTypeImage roofType={this.props.building.roofType}/>\n          </div>\n          <div className='compTypeContainer'>\n            <h2>Fundamenttype</h2>\n            <Dropdown options={foundationTypeOptions} onChange={this.handleFoundationTypeSelect} placeholder={this.props.building.foundationType} />\n            <FoundationTypeImage foundationType={this.props.building.foundationType}/>\n          </div>\n        </div>\n        <div className='EnergyHeader'>\n          <h1>Energi</h1>\n          <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"energyInfo\" }}>\n                <div>\n                  <BsFillInfoCircleFill data-tip=\"\"/>\n                  <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true'>\n                    <ol className='ToolTipList' type='A'>\n                      <li>1) Data er baseret på resultater fra Energistyrelsen</li>\n                      <li>2) Energiklassen kan variere fra A-F, hvor A er bedst</li>\n                      <li>3) Det beregnede forbrug er et estimat, og kan være væsentligt større eller mindre i realiteten</li>\n                      <li>4) Forbedring beskriver en forbedring der kan foretages, som vil reducere energiforbrugt i bygningen</li>\n                      <li>5) Investering er den sum penge det kræver at implementere forbedringen</li>\n                      <li>6) Potentiel besparelse er den årlige besparelse, som den implementerede forbedring vil medføre</li>\n                    </ol>\n                  </ReactTooltip>\n                </div>\n          </IconContext.Provider>\n        </div>\n        <div className='energyContainer'>\n          <div className='EIC'>\n            <p className='energyData'>Energiklasse:</p><p className='energyData2'>{this.props.building.energy[0]}</p>\n            <p className='energyData'>Beregnet forbrug:</p><p className='energyData2'>{this.props.building.energy[2]} kr/år</p>\n          </div>\n          <div className='EIC'>\n            <p className='energyData'>Potentiel besparelse:</p><p className='energyData2'>{this.props.building.energy[1]} kr/år</p>\n            <p className='energyData'>Investering:</p><p className='energyData2'>{this.props.building.energy[3]} kr</p>\n            <p className='energyData'>Forbedring:</p><p className='energyData2'>{this.props.building.energy[4]}</p>\n          </div>\n        </div>\n        {/*<Download building={this.props.building}/>*/}\n        <div className='MaterialSection'>\n          <MaterialList building={this.props.building}/>\n        </div>\n      </div>\n    )\n    } else {\n      return(\n        <div></div>\n      )\n    }\n  }\n}\nexport default Building;","import React from 'react'\r\nimport './Material.css'\r\n\r\n\r\nclass Material extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSimpleClick = this.handleSimpleClick.bind(this);\r\n    this.handleAdvancedClick = this.handleAdvancedClick.bind(this);\r\n    this.handleBackClick = this.handleBackClick.bind(this);\r\n  }\r\n\r\n  handleSimpleClick() {\r\n    const edit = 'simple'\r\n    this.props.onChange1(edit)\r\n  }\r\n\r\n  handleAdvancedClick() {\r\n    const edit = 'advanced'\r\n    this.props.onChange1(edit)\r\n  }\r\n\r\n  handleBackClick() {\r\n    const goBack = true\r\n    const selectAddress = false\r\n    this.props.onChange2(goBack,selectAddress)\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.building.selectAddress === true && this.props.building.selectEdit === '') {\r\n    return(\r\n      <div className=\"mainMaterial\">\r\n        <div className=\"buttonDiv\">\r\n          <a className=\"buttonMaterial\" onClick={this.handleBackClick}>Tilbage</a>\r\n        </div>\r\n      </div>\r\n    )\r\n    } else {\r\n      return(\r\n        <div></div>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default Material","import React from 'react'\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport './Simple.css'\r\nimport { simpleRoof, simpleWall, simpleFloor, simpleFoundation } from '../../functions/simpleFunctions'\r\nimport { Pie, Bar } from 'react-chartjs-2';\r\n\r\nconst wallOptions = [\r\n    'Beton', 'Træ', 'Mursten'\r\n]\r\n\r\nconst roofOptions = [\r\n    'Skifer', 'Beton', 'Tagpap', 'Tegl'\r\n];\r\n\r\nconst floorOptions = [\r\n    'Beton', 'Træ'\r\n]\r\n\r\nconst foundationOptions = [\r\n    'Beton', 'Træ'\r\n]\r\n\r\nclass Simple extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            wallMaterial: [],\r\n            roofMaterial: [],\r\n            floorMaterial: [],\r\n            foundationMaterial: []\r\n        }\r\n\r\n        this.handleWallSelect = this.handleWallSelect.bind(this)\r\n        this.handleRoofSelect = this.handleRoofSelect.bind(this)\r\n        this.handleFloorSelect = this.handleFloorSelect.bind(this)\r\n        this.handleFoundationSelect = this.handleFoundationSelect.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleWallSelect(newMaterial) {\r\n        this.setState({wallMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleRoofSelect(newMaterial) {\r\n        this.setState({roofMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleFloorSelect(newMaterial) {\r\n        this.setState({floorMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleFoundationSelect(newMaterial) {\r\n        this.setState({foundationMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleClick() {\r\n        const edit = ''\r\n        this.props.onChange(edit)\r\n    }\r\n\r\n    render() {\r\n\r\n        //-----------------------------------------------------------------------------------\r\n        const area = this.props.building.area\r\n        const floors = this.props.building.floors\r\n        const totalArea = area*floors\r\n        const perimeter = Math.floor(Math.sqrt(area)*4)\r\n        const wallArea = perimeter*(floors*2.5)\r\n        const roofArea = Math.floor(area*1.1)\r\n        const windowArea = Math.floor(wallArea*0.15)\r\n        //-----------------------------------------------------------------------------------\r\n        const wallMaterials = simpleWall(this.state.wallMaterial)\r\n        const roofMaterials = simpleRoof(this.state.roofMaterial)\r\n        const floorMaterials = simpleFloor(this.state.floorMaterial)\r\n        const foundationMaterials = simpleFoundation(this.state.foundationMaterial)\r\n        //-----------------------------------------------------------------------------------\r\n        // Beton, Isolering, Træ, Mursten, Metal\r\n        const wallMaterialAmount = wallMaterials.map(x => Math.floor(x * wallArea * 0.5));\r\n\r\n        // Beton, Isolering, Træ, Metal\r\n        const floorMaterialAmount = floorMaterials.map(x => Math.floor(x * totalArea*0.3));\r\n\r\n        // Beton, Træ, Metal, Skifer, Tagpap, Tegl\r\n        const roofMaterialAmount = roofMaterials.map(x => Math.floor(x * roofArea * 0.2));\r\n\r\n        // Beton, Isolering, Træ, Metal\r\n        const foundationMaterialAmount = foundationMaterials.map(x => Math.floor(x * area * 0.5));\r\n\r\n        const wallData = {\r\n            labels: ['Beton', 'Isolering', 'Træ', 'Mursten', 'Metal'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: wallMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                  'rgba(153, 102, 255, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const roofData = {\r\n            labels: ['Beton', 'Træ', 'Metal', 'Skifer', 'Tagpap', 'Tegl'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: roofMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                  'rgba(153, 102, 255, 0.2)',\r\n                  'rgba(100, 152, 255, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                  'rgba(100, 152, 255, 0.2)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const floorData = {\r\n            labels: ['Beton', 'Isolering', 'Træ', 'Metal'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: floorMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const foundationData = {\r\n            labels: ['Beton', 'Isolering', 'Træ', 'Metal'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: foundationMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const allData = {\r\n          labels: ['1', '2', '3', '4', '5', '6'],\r\n          datasets: [\r\n            {\r\n              label: 'Væg',\r\n              data: wallMaterialAmount,\r\n              backgroundColor: 'rgb(255, 99, 132)',\r\n            },\r\n            {\r\n              label: 'Tag',\r\n              data: roofMaterialAmount,\r\n              backgroundColor: 'rgb(54, 162, 235)',\r\n            },\r\n            {\r\n              label: 'Gulv',\r\n              data: floorMaterialAmount,\r\n              backgroundColor: 'rgb(75, 192, 192)',\r\n            },\r\n            {\r\n              label: 'Fundament',\r\n              data: foundationMaterialAmount,\r\n              backgroundColor: 'rgb(75, 192, 192)',\r\n            },\r\n          ],\r\n        }\r\n\r\n        const allOptions = {\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  stacked: true,\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  stacked: true,\r\n                },\r\n              ],\r\n            },\r\n        }\r\n        \r\n\r\n\r\n        if (this.props.building.selectAddress === true && this.props.building.selectEdit === 'simple') {\r\n            return(\r\n                <div className='simpleMain'>\r\n                    <h2>REDIGER SIMPEL</h2>\r\n                    <h3 className ='simpleInfo'>{this.props.building.address}</h3>\r\n                    <div className='dropdownContainer'>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Ydervægge</p>\r\n                            <Dropdown options={wallOptions} onChange={this.handleWallSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={wallData} className='pieChart' style='height: 140px'/>\r\n                        </div>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Tag</p>\r\n                            <Dropdown options={roofOptions} onChange={this.handleRoofSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={roofData} className='pieChart'/>\r\n                        </div>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Terrændæk</p>\r\n                            <Dropdown options={floorOptions} onChange={this.handleFloorSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={floorData} className='pieChart'/>\r\n                        </div>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Fundament</p>\r\n                            <Dropdown options={foundationOptions} onChange={this.handleFoundationSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={foundationData} className='pieChart'/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='barContainer'>\r\n                      <Bar data={allData} options={allOptions} width={400} height={400}/>\r\n                    </div>\r\n                    <div className='simpleButtonContainer'>\r\n                        <a className=\"simpleButton\" onClick={this.handleClick}>Tilbage</a>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Simple","import React from 'react'\r\nimport './Advanced.css'\r\n\r\nclass Advanced extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleClick() {\r\n        const edit = ''\r\n        this.props.onChange(edit)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.building.selectAddress === true && this.props.building.selectEdit === 'advanced') {\r\n            return(\r\n                <div className='advancedMain'>\r\n                    <h2>REDIGER AVANCERET</h2>\r\n                    <h3>{this.props.building.address}</h3>\r\n                    <div className='advancedButtonContainer'>\r\n                        <a className=\"advancedButton\" onClick={this.handleClick}>Tilbage</a>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Advanced","import React from 'react';\nimport '../../reset.css'\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Building from '../Building/Building'\nimport Material from '../Material/Material'\nimport Simple from '../Simple/Simple'\nimport Advanced from '../Advanced/Advanced'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {imageSrc: '',\n                  address: '',\n                  area: '',\n                  floors: '',\n                  built: '',\n                  selectAddress: false,\n                  selectEdit: '',\n                  location: [],\n                  goBack: true,\n                  floorHeight: 2.5,\n                  roofType: 'Saddel',\n                  foundationType: 'Linje',\n                  energy: [],\n                  notes: []};\n\n    this.changeAddress = this.changeAddress.bind(this);\n    this.changeArea = this.changeArea.bind(this);\n    this.changeEdit = this.changeEdit.bind(this);\n    this.changeBack = this.changeBack.bind(this);\n    this.changeFloorHeight = this.changeFloorHeight.bind(this);\n    this.changeRoofType = this.changeRoofType.bind(this);\n    this.changeFoundationType = this.changeFoundationType.bind(this);\n  }\n\n  changeAddress(newAddress,newArea,newFloors,newBuilt,selectedAddress,newLocation,newGoBack,newFloorHeight,newRoofType, newFoundationType, newEnergy) {\n    this.setState({address: newAddress})\n    this.setState({area:newArea})\n    this.setState({floors: newFloors})\n    this.setState({built: newBuilt})\n    this.setState({selectAddress: selectedAddress})\n    this.setState({location: newLocation})\n    this.setState({goBack: newGoBack})\n    this.setState({floorHeight: newFloorHeight})\n    this.setState({roofType: newRoofType})\n    this.setState({foundationType: newFoundationType})\n    this.setState({energy: newEnergy})\n  } \n\n  changeArea(newArea) {\n    this.setState({area:newArea})\n  }\n\n  changeFloorHeight(newFloorHeight) {\n    this.setState({floorHeight: newFloorHeight})\n  }\n\n  changeRoofType(newRoofType) {\n    this.setState({roofType: newRoofType})\n  }\n\n  changeFoundationType(newFoundationType) {\n    this.setState({foundationType: newFoundationType})\n  }\n\n  changeEdit(newEdit) {\n    this.setState({selectEdit: newEdit})\n  }\n\n  changeBack(newGoBack, selectedAddress) {\n    this.setState({goBack: newGoBack})\n    this.setState({selectAddress: selectedAddress})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <SearchBar building={this.state} onChange={this.changeAddress}/>\n          <div className='Info'>\n            <Building building={this.state} onAreaChange={this.changeArea} onFloorHeightChange={this.changeFloorHeight}\n            onRoofTypeChange={this.changeRoofType} onFoundationTypeChange={this.changeFoundationType}/>\n            <Material building={this.state} onChange1={this.changeEdit} onChange2={this.changeBack}/>\n            <Simple building={this.state} onChange={this.changeEdit}/>\n            <Advanced building={this.state} onChange={this.changeEdit}/>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n        <App />,\ndocument.getElementById('root'));\n","import './Download.css'\r\nimport React from 'react'\r\nimport JSZip from 'jszip'\r\nimport saveAs from 'file-saver'\r\n\r\nconst BetonMatPas = require(\"../../materialepas/beton.json\")\r\nconst GipsMatPas = require(\"../../materialepas/gips.json\")\r\nconst IsoleringMatPas = require(\"../../materialepas/isolering.json\")\r\nconst MetalMatPas = require(\"../../materialepas/metal.json\")\r\nconst MurstenMatPas = require(\"../../materialepas/mursten.json\")\r\nconst PapMatPas = require(\"../../materialepas/pap.json\")\r\nconst SkiferMatPas = require(\"../../materialepas/skifer.json\")\r\nconst StenMatPas = require(\"../../materialepas/sten.json\")\r\nconst TeglMatPas = require(\"../../materialepas/tegl.json\")\r\nconst TræMatPas = require(\"../../materialepas/træ.json\")\r\n\r\n\r\nclass Download extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n\r\n      this.downloadZip = this.downloadZip.bind(this)\r\n      this.removeMissing = this.removeMissing.bind(this)\r\n\r\n      }    \r\n\r\n      removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n    \r\n      downloadZip() {\r\n        const BygPas = {Bygningsdele: [{Væg: this.props.materials.wall},\r\n            {Tag: this.props.materials.roof},\r\n            {Gulv: this.props.materials.floor},\r\n            {Fundament: this.props.materials.foundation},\r\n            {Indervæg: this.props.materials.inwall}],\r\n            Mængder: this.props.amount}\r\n\r\n        var zip = new JSZip();\r\n\r\n        for (var x of this.removeMissing(this.props.amount)) {\r\n            zip.file(`${x[0]}.json`, JSON.stringify(eval(`${x[0]}`+'MatPas'), null, 2))\r\n        }\r\n\r\n        zip.file('Bygningspas.json', JSON.stringify(BygPas, null, 2))\r\n\r\n        zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n            // see FileSaver.js\r\n            saveAs(content, \"Bygningspas.zip\");\r\n        });\r\n    }\r\n\r\n    \r\n    render() {\r\n      return (\r\n        <a className='buttonDownload' onClick={this.downloadZip}>Download</a>\r\n        )\r\n    }\r\n  }\r\n\r\n  export default Download","import './DownloadSimple.css'\r\nimport React from 'react'\r\nimport JSZip from 'jszip'\r\nimport saveAs from 'file-saver'\r\n\r\nconst BetonMatPas = require(\"../../materialepas/beton.json\")\r\nconst GipsMatPas = require(\"../../materialepas/gips.json\")\r\nconst IsoleringMatPas = require(\"../../materialepas/isolering.json\")\r\nconst MetalMatPas = require(\"../../materialepas/metal.json\")\r\nconst MurstenMatPas = require(\"../../materialepas/mursten.json\")\r\nconst PapMatPas = require(\"../../materialepas/pap.json\")\r\nconst SkiferMatPas = require(\"../../materialepas/skifer.json\")\r\nconst StenMatPas = require(\"../../materialepas/sten.json\")\r\nconst TeglMatPas = require(\"../../materialepas/tegl.json\")\r\nconst TræMatPas = require(\"../../materialepas/træ.json\")\r\n\r\n\r\nclass Download extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n\r\n      this.downloadZip = this.downloadZip.bind(this)\r\n      this.removeMissing = this.removeMissing.bind(this)\r\n\r\n      }    \r\n\r\n      removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n    \r\n      downloadZip() {\r\n        const BygPas = {Bygningsdele: [{Væg: this.props.materials.wallS},\r\n            {Tag: this.props.materials.roofS},\r\n            {Gulv: this.props.materials.floorS},\r\n            {Fundament: this.props.materials.foundationS},\r\n            {Indervæg: this.props.materials.inwallS}],\r\n            Mængder: [this.props.amount]}\r\n\r\n        var zip = new JSZip();\r\n\r\n        for (var x of this.removeMissing(this.props.amount)) {\r\n            zip.file(`${x[0]}.json`, JSON.stringify(eval(`${x[0]}`+'MatPas'), null, 2))\r\n        }\r\n\r\n        zip.file('Bygningspas.json', JSON.stringify(BygPas, null, 2))\r\n\r\n        zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n            // see FileSaver.js\r\n            saveAs(content, \"Bygningspas.zip\");\r\n        });\r\n    }\r\n\r\n    \r\n    render() {\r\n      return (\r\n        <a className='buttonDownloadS' onClick={this.downloadZip}>Download</a>\r\n        )\r\n    }\r\n  }\r\n\r\n  export default Download"],"sourceRoot":""}