{"version":3,"sources":["items/items.js","util/firebase.js","components/SearchBar/SearchBar.js","components/BuildingView/BuildingView.js","components/Building/RoofTypeImage/Saddel.jpg","components/Building/RoofTypeImage/Valm.jpg","components/Building/RoofTypeImage/Skråt.jpg","components/Building/RoofTypeImage/Fladt.jpg","components/Building/RoofTypeImage/RoofTypeImage.js","components/Building/FoundationTypeImage/Linje.jpg","components/Building/FoundationTypeImage/Punkt.jpg","components/Building/FoundationTypeImage/Stribe.jpg","components/Building/FoundationTypeImage/FoundationTypeImage.js","functions/simpleFunctions.js","components/Results/Results.js","components/ResultsSimple/ResultsSimple.js","components/MaterialList/updateButton.js","components/MaterialList/MaterialList.js","components/Building/Building.js","components/Material/Material.js","components/Simple/Simple.js","components/Advanced/Advanced.js","components/App/App.js","index.js","components/Impacts/Impacts.js","components/Download/Download.js","components/DownloadSimple/DownloadSimple.js"],"names":["items","id","name","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","database","SearchBar","props","handleOnAddressSelect","item","address","ref","on","snapshot","allInfo","forEach","snap","push","val","setState","addressInfo","console","log","state","handleOnSelect","area","floors","built","location","roofType","roof","foundationType","foundation","energy","onChange","handleOnFocus","addressSelect","addressSelected","bind","this","building","goBack","className","style","width","margin","placeholder","onSelect","onFocus","styling","zIndex","autoFocus","Provider","value","size","color","data-tip","place","type","effect","border","onClick","React","Component","BuildingView","streetView","position","lat","lng","pov","heading","pitch","zoom","height","backgroundColor","streetViewPanoramaOptions","RoofTypeImage","src","saddel","fladt","skråt","valm","FoundationTypeImage","linje","punkt","stribe","simpleRoof","material","simpleWall","simpleFloor","simpleFoundation","simpleInWall","roofTypeValue","foundationTypeValue","Results","sumMaterials","removeMissing","getLabels","getData","array","newArray","Beton","Træ","Skifer","Tegl","Isolering","Tagpap","Mursten","Gips","Metal","Sten","x","totalArea","wallArea","Math","floor","sqrt","roofArea","foundationArea","wallMaterialAmount","materials","wall","map","toFixed","wallMaterialAmount2","roofMaterialAmount","roofMaterialAmount2","floorMaterialAmount","floorMaterialAmount2","foundationMaterialAmount","foundationMaterialAmount2","inWallMaterialAmount","inwall","inWallMaterialAmount2","merged","concat","apply","mergedMaterials","mergedMaterialAmount","chartData","data","labels","datasets","label","borderColor","borderWidth","options","maintainAspectRatio","Impacts","amount","Download","ResultsSimple","wallMaterialAmountS","wallS","wallMaterialAmountS2","roofMaterialAmountS","roofS","roofMaterialAmountS2","floorMaterialAmountS","floorS","floorMaterialAmountS2","foundationMaterialAmountS","foundationS","foundationMaterialAmountS2","inWallMaterialAmountS","inwallS","inWallMaterialAmountS2","mergedS","mergedMaterialsS","mergedMaterialAmountS","DownloadSimple","UpdateButton","updateData","updateData2","updateData3","windows","update","then","_","floorsS","length","updateData4","Options","wallOptions","floorOptions","roofOptions","foundationOptions","inWallOptions","windowOptions","MaterialList","wallM","wallP","roofM","roofP","floorM","floorP","foundationM","foundationP","inwallM","inwallP","advanced","addWallItem","addWallMaterial","addWallPercentage","removeWallItem","addSimpleWall","addRoofItem","addRoofMaterial","addRoofPercentage","removeRoofItem","addSimpleRoof","addFloorItem","addFloorMaterial","addFloorPercentage","removeFloorItem","addSimpleFloor","addFoundationItem","addFoundationMaterial","addFoundationPercentage","removeFoundationItem","addSimpleFoundation","addInWallItem","addInWallMaterial","addInWallPercentage","removeInWallItem","addSimpleInWall","addWindowItem","toggleAdvanced","toggleSimple","isAbove100","newVal","target","slice","number","data-for","min","max","step","roofTypeOptions","foundationTypeOptions","Building","handleAreaChange","handleHeightChange","handleRoofTypeSelect","handleFoundationTypeSelect","inputArea","onAreaChange","inputHeight","onFloorHeightChange","inputRoofType","onRoofTypeChange","inputFoundationType","onFoundationTypeChange","floorHeight","perimeter","windowArea","age","selectAddress","selectEdit","pattern","Material","handleSimpleClick","handleAdvancedClick","handleBackClick","onChange1","onChange2","Simple","wallMaterial","roofMaterial","floorMaterial","foundationMaterial","handleWallSelect","handleRoofSelect","handleFloorSelect","handleFoundationSelect","handleClick","newMaterial","wallMaterials","roofMaterials","floorMaterials","foundationMaterials","wallData","roofData","floorData","foundationData","allData","scales","yAxes","stacked","ticks","beginAtZero","xAxes","Advanced","App","imageSrc","notes","changeAddress","changeArea","changeEdit","changeBack","changeFloorHeight","changeRoofType","changeFoundationType","newAddress","newArea","newFloors","newBuilt","selectedAddress","newLocation","newGoBack","newFloorHeight","newRoofType","newFoundationType","newEnergy","newEdit","ReactDOM","render","document","getElementById","BetonMatPas","require","GipsMatPas","IsoleringMatPas","MetalMatPas","MurstenMatPas","PapMatPas","SkiferMatPas","StenMatPas","TeglMatPas","TræMatPas","emissions","complete","multiplyObj","getMaterialEmission","runEmissions","runPrices","sumObjects","downloadZip","obj","key","arr","newEmission","newEmissions","Fliser","GWP","ODP","exp","POCP","AP","EP","ADPE","ADPF","PERT","PENRT","RSF","NRSF","objs","reduce","a","b","k","hasOwnProperty","BygPas","Bygningsdele","Væg","Tag","Gulv","Fundament","Mængder","zip","JSZip","file","JSON","stringify","eval","generateAsync","content","saveAs","Object","entries","Indervæg"],"mappings":"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","file":"static/js/main.f1413339.chunk.js","sourcesContent":["const items = [\r\n    {\r\n      id: 0,\r\n      name: \"Klintevej 18, 4000\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Chr Winthers Vej 20B, 2800\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Postmosen 34, 3400\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Tesdorpfsvej 73, 2000\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Tornevangsvej 14, 3460\",\r\n    },\r\n  ]; \r\n\r\n  export default items","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDzIX2onzsXrEtuNmovSkCH6qDMWYWW_4I\",\r\n    authDomain: \"bygningspas.firebaseapp.com\",\r\n    databaseURL: \"https://bygningspas-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"bygningspas\",\r\n    storageBucket: \"bygningspas.appspot.com\",\r\n    messagingSenderId: \"1056938501952\",\r\n    appId: \"1:1056938501952:web:1f97e62acb976a11babca5\",\r\n    measurementId: \"G-335D61C3DJ\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics()\r\n  export const db = firebase.database();\r\n\r\nexport default firebase;","import React from 'react';\nimport './SearchBar.css';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\nimport items from '../../items/items'\nimport { db } from \"../../util/firebase\";\nimport { IconContext } from \"react-icons\";\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\nimport ReactTooltip from 'react-tooltip';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {addressSelect: '',\n                  addressSelected: false,\n                  addressInfo: []}\n\n    this.handleOnAddressSelect = this.handleOnAddressSelect.bind(this)\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleOnFocus = this.handleOnFocus.bind(this);\n  }\n\n  handleOnAddressSelect = (item) => {\n    const address = item.name;\n    db.ref(address).on(\"value\", snapshot => {\n        let allInfo = [];\n        snapshot.forEach(snap => {\n          allInfo.push(snap.val());\n        });\n        this.setState({ addressInfo: allInfo });\n        console.log(this.state.addressInfo)\n      });\n  }\n\n  handleOnSelect = () => {\n    const address = this.state.addressInfo[7];\n    const area = this.state.addressInfo[0];\n    const floors = this.state.addressInfo[3];\n    const built = this.state.addressInfo[1];\n    const selectAddress = true;\n    const location = this.state.addressInfo[5];\n    const goBack = false;\n    const floorHeight = 2.5;\n    const roofType = this.state.addressInfo[8].roof;\n    const foundationType = this.state.addressInfo[8].foundation;\n    const energy = this.state.addressInfo[2];\n    this.props.onChange(address,area,floors,built,selectAddress,location,goBack,floorHeight,roofType,foundationType,energy)\n  }\n\n  handleOnFocus = () => {\n    console.log(\"Focused\");\n  }\n\n  render() {\n    if (this.props.building.goBack === true) {\n    return (\n      <div className='SearchPage'>\n        <div className='PageHeader'>\n          <h1>Bygningspas</h1>\n        </div>\n        <div className=\"SearchBar\">\n          <header className=\"SearchHeader\">\n              <div className=\"SearchBar-fields\" style={{ width: 300, margin: 20 }}>\n                <ReactSearchAutocomplete\n                placeholder=\"Adresse\" \n                items = {items}\n                onSelect={this.handleOnAddressSelect}\n                onFocus={this.handleOnFocus}\n                styling={{ zIndex: 2 }} // To display it on top of the search box below\n                autoFocus\n              />\n              <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"searchInfo\" }}>\n                <div>\n                  <BsFillInfoCircleFill data-tip=\"\"/>\n                  <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true'>\n                    <p>Tilgængelige addresser er:</p>\n                    <ul className='ToolTipList'>\n                      <li>Chr. Winthers Vej 20B, 2800</li>\n                      <li>Klintevej 18, 4000</li>\n                      <li>Postmosen 34, 3400</li>\n                      <li>Tesdorpfsvej 73, 2000</li>\n                      <li>Tornevangsvej 14, 3460</li>\n                    </ul>\n                  </ReactTooltip>\n                </div>\n              </IconContext.Provider>\n              <a className='buttonSearch' onClick={this.handleOnSelect}>Søg</a>\n            </div>\n          </header>\n        </div>\n      </div>\n      \n    );\n    } else {\n      return(\n        <div></div>\n      )\n    }\n  }\n}\n\nexport default SearchBar;","import React from 'react';\r\nimport ReactStreetview from 'react-streetview';\r\n\r\nclass BuildingView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        // see https://developers.google.com/maps/documentation/javascript\r\n        const googleMapsApiKey = 'AIzaSyCwIG4lbTXNcDjbNAetvu3XMiiUYJm78Tc';\r\n\r\n        // see https://developers.google.com/maps/documentation/javascript/3.exp/reference#StreetViewPanoramaOptions\r\n        const streetView = {\r\n            position: {lat: this.props.building.location[0], lng: this.props.building.location[1]},\r\n            pov: {heading: this.props.building.location[2], pitch: this.props.building.location[3]},\r\n            zoom: 1\r\n        };\r\n\r\n        return (\r\n            <div style={{\r\n                width: '550px',\r\n                height: '550px',\r\n                backgroundColor: '#eeeeee'\r\n            }}>\r\n                <ReactStreetview\r\n                    apiKey={googleMapsApiKey}\r\n                    streetViewPanoramaOptions={streetView}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default BuildingView","export default __webpack_public_path__ + \"static/media/Saddel.6c251b99.jpg\";","export default __webpack_public_path__ + \"static/media/Valm.6d7431d0.jpg\";","export default __webpack_public_path__ + \"static/media/Skråt.90771ca1.jpg\";","export default __webpack_public_path__ + \"static/media/Fladt.8f7a7c76.jpg\";","import React from 'react'\r\nimport './RoofTypeImage.css'\r\nimport saddel from './Saddel.jpg'\r\nimport valm from './Valm.jpg'\r\nimport skråt from './Skråt.jpg'\r\nimport fladt from './Fladt.jpg'\r\n\r\nclass RoofTypeImage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.roofType === 'Saddel') {\r\n            return <img src={saddel}/>\r\n        } else if (this.props.roofType === 'Fladt') {\r\n            return <img src={fladt}/>\r\n        } else if (this.props.roofType === 'Skråt') {\r\n            return <img src={skråt}/>\r\n        } else if (this.props.roofType === 'Valm') {\r\n            return <img src={valm}/>\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default RoofTypeImage","export default __webpack_public_path__ + \"static/media/Linje.81eec288.jpg\";","export default __webpack_public_path__ + \"static/media/Punkt.272f955c.jpg\";","export default __webpack_public_path__ + \"static/media/Stribe.0febb20f.jpg\";","import React from 'react'\r\nimport './FoundationTypeImage.css'\r\nimport linje from './Linje.jpg'\r\nimport punkt from './Punkt.jpg'\r\nimport stribe from './Stribe.jpg'\r\n\r\nclass FoundationTypeImage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.foundationType === 'Linje') {\r\n            return <img src={linje}/>\r\n        } else if (this.props.foundationType === 'Punkt') {\r\n            return <img src={punkt}/>\r\n        } else if (this.props.foundationType === 'Stribe') {\r\n            return <img src={stribe}/>\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default FoundationTypeImage","\r\nexport function simpleRoof(material) {\r\n    // Tegl, Skifer, Tagpap\r\n    if (material === 'Tegl') {\r\n        const Materialer = [['Tegl', 0.02], ['Isolering', 0.2], ['Træ', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Skifer') {\r\n        const Materialer = [['Skifer', 0.02], ['Isolering', 0.2], ['Træ', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Tagpap') {\r\n        const Materialer = [['Tagpap', 0.005], ['Isolering', 0.2], ['Træ', 0.1]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n} \r\n\r\nexport function simpleWall(material) {\r\n    // Beton, Isolering, Træ, Mursten, Metal\r\n    if (material === 'Beton') {\r\n        const Materialer = [['Beton', 0.1], ['Isolering', 0.25], ['Træ', 0.05], ['Gips', 0.02]]\r\n        return Materialer\r\n    } else if (material === 'Mursten') {\r\n        const Materialer = [['Mursten', 0.1], ['Isolering', 0.25], ['Træ', 0.05], ['Gips', 0.02]]\r\n        return Materialer\r\n    } else if (material === 'Træ') {\r\n        const Materialer = [['Træ', 0.05], ['Metal', 0.01], ['Isolering', 0.25], ['Gips', 0.02]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n} \r\n\r\nexport function simpleFloor(material) {\r\n    // Beton, Træ, Sten\r\n    if (material === 'Beton') {\r\n        const Materialer = [['Beton', 0.1], ['Isolering', 0.1], ['Træ', 0.15]]\r\n        return Materialer\r\n    } else if (material === 'Træ') {\r\n        const Materialer = [['Træ', 0.20], ['Isolering', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Sten') {\r\n        const Materialer = [['Sten', 0.02], ['Træ', 0.15], ['Isolering', 0.1]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nexport function simpleFoundation(material) {\r\n    // Beton, Skrue\r\n    if (material === 'Beton') {\r\n        const Materialer = [['Beton', 0.3], ['Isolering', 0.2]]\r\n        return Materialer\r\n    } else if (material === 'Skrue') {\r\n        const Materialer = [['Metal', 0.3], ['Isolering', 0.2]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nexport function simpleInWall(material) {\r\n    // Beton, Træ, Mursten, Gips\r\n    if (material === 'Beton') {\r\n        const Materialer = [['Beton', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Mursten') {\r\n        const Materialer = [['Mursten', 0.1]]\r\n        return Materialer\r\n    } else if (material === 'Træ') {\r\n        const Materialer = [['Træ', 0.05]]\r\n        return Materialer\r\n    } else if (material === 'Gips') {\r\n        const Materialer = [['Gips', 0.05]]\r\n        return Materialer\r\n    } else {\r\n        return []\r\n    }\r\n} \r\n\r\nexport function roofTypeValue(roofType) {\r\n    //Saddel, Fladt, Valm, Skråt\r\n    if (roofType === 'Saddel') {\r\n        const roofAreaConst = 1.2\r\n        return roofAreaConst\r\n    } else if (roofType === 'Fladt') {\r\n        const roofAreaConst = 1\r\n        return roofAreaConst\r\n    } else if (roofType === 'Valm') {\r\n        const roofAreaConst = 1.4\r\n        return roofAreaConst\r\n    } else if (roofType === 'Skråt') {\r\n        const roofAreaConst = 1.1\r\n        return roofAreaConst\r\n    } else {\r\n        return 1\r\n    }\r\n}\r\n\r\nexport function foundationTypeValue(foundationType) {\r\n    //Linje, Stribe, Punkt\r\n    if (foundationType === 'Linje') {\r\n        const foundationAreaConst = 0.25\r\n        return foundationAreaConst\r\n    } else if (foundationType === 'Stribe') {\r\n        const foundationAreaConst = 0.4\r\n        return foundationAreaConst\r\n    } else if (foundationType === 'Punkt') {\r\n        const foundationAreaConst = 0.1\r\n        return foundationAreaConst\r\n    } else {\r\n        return 1\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './Results.css'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Impacts from '../Impacts/Impacts'\r\nimport Download from '../Download/Download'\r\nimport { roofTypeValue, foundationTypeValue } from '../../functions/simpleFunctions'\r\n\r\nclass Results extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.sumMaterials = this.sumMaterials.bind(this)\r\n        this.removeMissing = this.removeMissing.bind(this)\r\n        this.getLabels = this.getLabels.bind(this)\r\n        this.getData = this.getData.bind(this)\r\n    }\r\n\r\n    sumMaterials(array) {\r\n        const newArray = []\r\n        const Beton = ['Beton',0]\r\n        const Træ = ['Træ',0]\r\n        const Skifer = ['Skifer',0]\r\n        const Tegl = ['Tegl',0]\r\n        const Isolering = ['Isolering',0]\r\n        const Tagpap = ['Pap',0]\r\n        const Mursten = ['Mursten',0]\r\n        const Gips = ['Gips', 0]\r\n        const Metal = ['Metal', 0]\r\n        const Sten = ['Sten', 0]\r\n\r\n        for (var x of array) {\r\n            if (x[0] === 'Træ') {\r\n                Træ[1] = Træ[1]+x[1]\r\n            }\r\n            if (x[0] === 'Beton') {\r\n                Beton[1] = Beton[1]+x[1]\r\n            }\r\n            if (x[0] === 'Skifer') {\r\n                Skifer[1] = Skifer[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tegl') {\r\n                Tegl[1] = Tegl[1]+x[1]\r\n            }\r\n            if (x[0] === 'Isolering') {\r\n                Isolering[1] = Isolering[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tagpap') {\r\n                Tagpap[1] = Tagpap[1]+x[1]\r\n            }\r\n            if (x[0] === 'Mursten') {\r\n                Mursten[1] = Mursten[1]+x[1]\r\n            }\r\n            if (x[0] === 'Gips') {\r\n                Gips[1] = Gips[1]+x[1]\r\n            }\r\n            if (x[0] === 'Metal') {\r\n                Metal[1] = Metal[1]+x[1]\r\n            }\r\n            if (x[0] === 'Sten') {\r\n                Sten[1] = Sten[1]+x[1]\r\n            }             \r\n        }\r\n        newArray.push(Beton) \r\n        newArray.push(Træ)\r\n        newArray.push(Skifer)\r\n        newArray.push(Tegl)\r\n        newArray.push(Isolering)\r\n        newArray.push(Tagpap)\r\n        newArray.push(Mursten)\r\n        newArray.push(Metal)\r\n        newArray.push(Gips)\r\n        newArray.push(Sten)\r\n        return newArray\r\n    }\r\n\r\n    removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n\r\n    getLabels(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[0])\r\n        } return newArray\r\n    }\r\n\r\n    getData(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[1])\r\n        } return newArray\r\n    }\r\n\r\n    render() {\r\n\r\n         //-------------------------------------VARIABLES-----------------------------------------------\r\n         //#region\r\n         const area = this.props.building.area\r\n         const floors = this.props.building.floors\r\n         const totalArea = area*floors\r\n         const perimeter = Math.floor(Math.sqrt(area)*4)\r\n         const wallArea = perimeter*(floors*2.5)\r\n         const roofArea = Math.floor(area*roofTypeValue(this.props.building.roofType))\r\n         const foundationArea = area*foundationTypeValue(this.props.building.foundationType)\r\n         const windowArea = Math.floor(wallArea*0.15)\r\n         //#endregion\r\n         \r\n         //-----------------------------------MATERIAL AMOUNTS------------------------------------------\r\n         //#region\r\n         const wallMaterialAmount = this.props.materials.wall.map((item) => <li>{item[0]}: {(item[1]*wallArea).toFixed(3)}m3</li>)\r\n         const wallMaterialAmount2 = this.props.materials.wall.map((item) => [item[0],item[1]*wallArea])\r\n\r\n         const roofMaterialAmount = this.props.materials.roof.map((item) => <li>{item[0]}: {(item[1]*roofArea).toFixed(3)}m3</li>)\r\n         const roofMaterialAmount2 = this.props.materials.roof.map((item) => [item[0],item[1]*roofArea])\r\n\r\n         const floorMaterialAmount = this.props.materials.floor.map((item) => <li>{item[0]}: {(item[1]*totalArea).toFixed(3)}m3</li>)\r\n         const floorMaterialAmount2 = this.props.materials.floor.map((item) => [item[0],item[1]*totalArea])\r\n\r\n         const foundationMaterialAmount = this.props.materials.foundation.map((item) => <li>{item[0]}: {(item[1]*foundationArea).toFixed(3)}m3</li>)\r\n         const foundationMaterialAmount2 = this.props.materials.foundation.map((item) => [item[0],item[1]*foundationArea])\r\n\r\n         const inWallMaterialAmount = this.props.materials.inwall.map((item) => <li>{item[0]}: {(item[1]*wallArea*0.5).toFixed(2)}m3</li>)\r\n         const inWallMaterialAmount2 = this.props.materials.inwall.map((item) => [item[0],item[1]*wallArea*0.5])\r\n\r\n         const merged = [].concat.apply([], [wallMaterialAmount2,roofMaterialAmount2,floorMaterialAmount2,foundationMaterialAmount2,inWallMaterialAmount2]);\r\n         const mergedMaterials = this.removeMissing(this.sumMaterials(merged))\r\n\r\n         const mergedMaterialAmount = mergedMaterials.map((item) => <li>{item[0]}: {item[1].toFixed(3)}m3</li>)\r\n         //#endregion\r\n\r\n         //---------------------------------------CHART-------------------------------------------------\r\n         //#region \r\n         const chartData = this.getData(mergedMaterials)\r\n         const chartLabels = this.getLabels(mergedMaterials)\r\n\r\n         const data = {\r\n            labels: chartLabels,\r\n            datasets: [\r\n              {\r\n                label: '',\r\n                data: chartData,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                  'rgba(153, 102, 255, 0.2)',\r\n                  'rgba(255, 159, 64, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                  'rgba(255, 159, 64, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n          \r\n          const options = {\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }\r\n        //#endregion\r\n\r\n        return(\r\n            <div>\r\n                <h1 className='ResultHeader'>Materialemængder</h1>\r\n                <div className='ResultContainer'>\r\n                    <div className='aResult'>\r\n                        <p>Ydervægge</p>\r\n                        {wallMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Tag</p>\r\n                        {roofMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Gulve</p>\r\n                        {floorMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Fundament</p>\r\n                        {foundationMaterialAmount}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Indervægge</p>\r\n                        {inWallMaterialAmount}\r\n                    </div>\r\n                </div>\r\n                <div className='SumContainer'>\r\n                    <div className='SumResult'>\r\n                        <p>Samlet</p>\r\n                        {mergedMaterialAmount}\r\n                    </div>\r\n                    <div className='BarContainer'>\r\n                        <Bar data={data} options={{ maintainAspectRatio: false }} width={400} height={400}/>\r\n                    </div>\r\n                </div>\r\n                <Impacts materials={this.props.materials} building={this.props.building} amount={mergedMaterials}/>\r\n                <Download materials={this.props.materials} amount={mergedMaterials}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Results","import React from 'react'\r\nimport './ResultsSimple.css'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Impacts from '../Impacts/Impacts'\r\nimport DownloadSimple from '../DownloadSimple/DownloadSimple'\r\nimport { simpleRoof, simpleWall, simpleFloor, simpleFoundation, simpleInWall, roofTypeValue, foundationTypeValue } from '../../functions/simpleFunctions'\r\n\r\nclass ResultsSimple extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.sumMaterials = this.sumMaterials.bind(this)\r\n        this.removeMissing = this.removeMissing.bind(this)\r\n        this.getLabels = this.getLabels.bind(this)\r\n        this.getData = this.getData.bind(this)\r\n    }\r\n\r\n    sumMaterials(array) {\r\n        const newArray = []\r\n        const Beton = ['Beton',0]\r\n        const Træ = ['Træ',0]\r\n        const Skifer = ['Skifer',0]\r\n        const Tegl = ['Tegl',0]\r\n        const Isolering = ['Isolering',0]\r\n        const Tagpap = ['Pap',0]\r\n        const Mursten = ['Mursten',0]\r\n        const Gips = ['Gips', 0]\r\n        const Metal = ['Metal', 0]\r\n        const Sten = ['Sten', 0]\r\n\r\n        for (var x of array) {\r\n            if (x[0] === 'Træ') {\r\n                Træ[1] = Træ[1]+x[1]\r\n            }\r\n            if (x[0] === 'Beton') {\r\n                Beton[1] = Beton[1]+x[1]\r\n            }\r\n            if (x[0] === 'Skifer') {\r\n                Skifer[1] = Skifer[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tegl') {\r\n                Tegl[1] = Tegl[1]+x[1]\r\n            }\r\n            if (x[0] === 'Isolering') {\r\n                Isolering[1] = Isolering[1]+x[1]\r\n            }\r\n            if (x[0] === 'Tagpap') {\r\n                Tagpap[1] = Tagpap[1]+x[1]\r\n            }\r\n            if (x[0] === 'Mursten') {\r\n                Mursten[1] = Mursten[1]+x[1]\r\n            }\r\n            if (x[0] === 'Gips') {\r\n                Gips[1] = Gips[1]+x[1]\r\n            }\r\n            if (x[0] === 'Metal') {\r\n                Metal[1] = Metal[1]+x[1]\r\n            }\r\n            if (x[0] === 'Sten') {\r\n                Sten[1] = Sten[1]+x[1]\r\n            }             \r\n        }\r\n        newArray.push(Beton) \r\n        newArray.push(Træ)\r\n        newArray.push(Skifer)\r\n        newArray.push(Tegl)\r\n        newArray.push(Isolering)\r\n        newArray.push(Tagpap)\r\n        newArray.push(Mursten)\r\n        newArray.push(Metal)\r\n        newArray.push(Gips)\r\n        newArray.push(Sten)\r\n        return newArray\r\n    }\r\n\r\n    removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n\r\n    getLabels(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[0])\r\n        } return newArray\r\n    }\r\n\r\n    getData(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            newArray.push(x[1])\r\n        } return newArray\r\n    }\r\n\r\n    render() {\r\n\r\n         //-------------------------------------VARIABLES-----------------------------------------------\r\n         //#region\r\n         const area = this.props.building.area\r\n         const floors = this.props.building.floors\r\n         const totalArea = area*floors\r\n         const perimeter = Math.floor(Math.sqrt(area)*4)\r\n         const wallArea = perimeter*(floors*2.5)\r\n         const roofArea = Math.floor(area*roofTypeValue(this.props.building.roofType))\r\n         const foundationArea = area*foundationTypeValue(this.props.building.foundationType)\r\n         const windowArea = Math.floor(wallArea*0.15)\r\n         //#endregion\r\n         \r\n         //-----------------------------------MATERIAL AMOUNTS------------------------------------------\r\n         //#region\r\n         const wallMaterialAmountS = simpleWall(this.props.materials.wallS).map((item) => <li>{item[0]}: {(item[1]*wallArea).toFixed(2)}m3</li>)\r\n         const wallMaterialAmountS2 = simpleWall(this.props.materials.wallS).map((item) => [item[0],item[1]*wallArea])\r\n\r\n         const roofMaterialAmountS = simpleRoof(this.props.materials.roofS).map((item) => <li>{item[0]}: {(item[1]*roofArea).toFixed(2)}m3</li>)\r\n         const roofMaterialAmountS2 = simpleRoof(this.props.materials.roofS).map((item) => [item[0],item[1]*roofArea])\r\n\r\n         const floorMaterialAmountS = simpleFloor(this.props.materials.floorS).map((item) => <li>{item[0]}: {(item[1]*totalArea).toFixed(2)}m3</li>)\r\n         const floorMaterialAmountS2 = simpleFloor(this.props.materials.floorS).map((item) => [item[0],item[1]*totalArea])\r\n\r\n         const foundationMaterialAmountS = simpleFoundation(this.props.materials.foundationS).map((item) => <li>{item[0]}: {(item[1]*foundationArea).toFixed(2)}m3</li>)\r\n         const foundationMaterialAmountS2 = simpleFoundation(this.props.materials.foundationS).map((item) => [item[0],item[1]*foundationArea])\r\n\r\n         const inWallMaterialAmountS = simpleInWall(this.props.materials.inwallS).map((item) => <li>{item[0]}: {(item[1]*wallArea*0.5).toFixed(2)}m3</li>)\r\n         const inWallMaterialAmountS2 = simpleInWall(this.props.materials.inwallS).map((item) => [item[0],item[1]*wallArea*0.5])\r\n\r\n         const mergedS = [].concat.apply([], [wallMaterialAmountS2,roofMaterialAmountS2,floorMaterialAmountS2,foundationMaterialAmountS2,inWallMaterialAmountS2]);\r\n         const mergedMaterialsS = this.removeMissing(this.sumMaterials(mergedS))\r\n\r\n         const mergedMaterialAmountS = mergedMaterialsS.map((item) => <li>{item[0]}: {item[1].toFixed(2)}m3</li>)\r\n         //#endregion\r\n\r\n         //---------------------------------------CHART-------------------------------------------------\r\n         //#region \r\n         const chartData = this.getData(mergedMaterialsS)\r\n         const chartLabels = this.getLabels(mergedMaterialsS)\r\n\r\n         const data = {\r\n            labels: chartLabels,\r\n            datasets: [\r\n              {\r\n                label: '',\r\n                data: chartData,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                  'rgba(153, 102, 255, 0.2)',\r\n                  'rgba(255, 159, 64, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                  'rgba(255, 159, 64, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n          \r\n          const options = {\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }\r\n        //#endregion\r\n\r\n        return(\r\n            <div>\r\n                <h1 className='ResultHeader'>Materialemængder</h1>\r\n                <div className='ResultContainer'>\r\n                    <div className='aResult'>\r\n                        <p>Ydervægge</p>\r\n                        {wallMaterialAmountS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Tag</p>\r\n                        {roofMaterialAmountS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Gulve</p>\r\n                        {floorMaterialAmountS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Fundament</p>\r\n                        {foundationMaterialAmountS}\r\n                    </div>\r\n                    <div className='aResult'>\r\n                        <p>Indervægge</p>\r\n                        {inWallMaterialAmountS}\r\n                    </div>\r\n                </div>\r\n                <div className='SumContainer'>\r\n                    <div className='SumResult'>\r\n                        <p>Samlet</p>\r\n                        {mergedMaterialAmountS}\r\n                    </div>\r\n                    <div className='BarContainer'>\r\n                        <Bar data={data} options={{ maintainAspectRatio: false }} width={400} height={400}/>\r\n                    </div>\r\n                </div>\r\n                <Impacts materials={this.props.materials} building={this.props.building} amount={mergedMaterialsS}/>\r\n                <DownloadSimple materials={this.props.materials} amount={mergedMaterialsS}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ResultsSimple","import React from 'react'\r\nimport { db } from \"../../util/firebase\";\r\nimport './updateButton.css'\r\n\r\nclass UpdateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.updateData = this.updateData.bind(this)\r\n        this.updateData2 = this.updateData2.bind(this)\r\n        this.updateData3 = this.updateData3.bind(this)\r\n    }\r\n\r\n    updateData() {\r\n        const wall = this.props.materials.wall\r\n        const roof = this.props.materials.roof\r\n        const floor = this.props.materials.floor\r\n        const foundation = this.props.materials.foundation\r\n        const inwall = this.props.materials.inwall\r\n        const windows = this.props.materials.windows\r\n\r\n            return db\r\n            .ref(`${this.props.building.address}/materials`)\r\n            .update(\r\n                {wall,roof,floor,foundation,inwall,windows},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ wall: this.props.materials.wall,\r\n                                roof: this.props.materials.roof,\r\n                                floor: this.props.materials.floor,\r\n                                foundation: this.props.materials.foundation,\r\n                                inwall: this.props.materials.inwall,\r\n                                windows: this.props.materials.windows});\r\n            })\r\n      }\r\n\r\n    updateData2() {\r\n        const roof = this.props.building.roofType\r\n        const foundation = this.props.building.foundationType\r\n\r\n            return db\r\n            .ref(`${this.props.building.address}/types`)\r\n            .update(\r\n                {roof,foundation},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ roof: this.props.building.roofType,\r\n                                foundation: this.props.building.foundationType});\r\n            })\r\n      }\r\n\r\n    updateData3() {\r\n        const area = this.props.building.area\r\n\r\n            return db\r\n            .ref(this.props.building.address)\r\n            .update(\r\n                {area},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ area: this.props.building.area});\r\n            })\r\n      }\r\n\r\n      updateData4() {\r\n          const roofS = this.props.materials.roofS\r\n          const wallS = this.props.materials.wallS\r\n          const floorS = this.props.materials.floorS\r\n          const foundationS = this.props.materials.foundationS\r\n          const inwallS = this.props.materials.inwallS\r\n\r\n          return db\r\n            .ref(`${this.props.building.address}/materials`)\r\n            .update(\r\n                {roofS,wallS,floorS,foundationS,inwallS},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ roofS: this.props.building.roofS,\r\n                                wallS: this.props.building.wallS,\r\n                                floorsS: this.props.building.floorsS,\r\n                                foundationS: this.props.building.foundationS,\r\n                                inwallS: this.props.building.inwallS});\r\n            })\r\n      }\r\n\r\n    render() {\r\n    if (this.props.materials.wall.length === 0 || this.props.materials.roof.length === 0 || this.props.materials.floor.length === 0 || this.props.materials.foundation.length === 0 || this.props.materials.inwall.length === 0) {\r\n            return(\r\n                <div></div>\r\n            )\r\n        } else {\r\n            return (\r\n            <div className='buttonDivUpdate'>\r\n                <a className='buttonUpdate' onClick={() => {this.updateData(); this.updateData2(); this.updateData3(); this.updateData4();}}>Gem</a>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateButton","import React from 'react'\r\nimport Dropdown from 'react-dropdown';\r\nimport './MaterialList.css'\r\nimport Toggle from 'react-toggle'\r\nimport Results from '../Results/Results'\r\nimport ResultsSimple from '../ResultsSimple/ResultsSimple'\r\nimport UpdateButton from './updateButton'\r\nimport {RangeStepInput} from 'react-range-step-input';\r\nimport { db } from \"../../util/firebase\";\r\nimport { simpleRoof, simpleWall, simpleFloor, simpleFoundation, simpleInWall } from '../../functions/simpleFunctions'\r\nimport { IconContext } from \"react-icons\";\r\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Options = ['Beton', 'Træ', 'Skifer', 'Tegl', 'Isolering', 'Pap', 'Mursten', 'Metal', 'Gips', 'Sten']\r\nconst wallOptions = ['Beton', 'Træ', 'Mursten']\r\nconst floorOptions = ['Beton', 'Træ', 'Sten']\r\nconst roofOptions = ['Tegl', 'Skifer', 'Tagpap']\r\nconst foundationOptions = ['Beton', 'Skrue']\r\nconst inWallOptions = ['Beton', 'Gips', 'Træ', 'Mursten']\r\nconst windowOptions = ['1-lag', '2-lag', '3-lag']\r\n\r\nclass MaterialList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {wall: [],\r\n                      wallS: [],\r\n                      wallM: '',\r\n                      wallP: 0.1,\r\n\r\n\r\n                      roof: [],\r\n                      roofS: [],\r\n                      roofM: '',\r\n                      roofP: 0.1,\r\n\r\n                      floor: [],\r\n                      floorS: [],\r\n                      floorM: '',\r\n                      floorP: 0.1,\r\n\r\n                      foundation: [],\r\n                      foundationS: [],\r\n                      foundationM: '',\r\n                      foundationP: 0.1,\r\n\r\n                      inwall: [],\r\n                      inwallS: [],\r\n                      inwallM: '',\r\n                      inwallP: 0.1,\r\n\r\n                      windows: [],\r\n                    \r\n                      advanced: false}\r\n                      \r\n        this.addWallItem = this.addWallItem.bind(this)\r\n        this.addWallMaterial = this.addWallMaterial.bind(this)\r\n        this.addWallPercentage = this.addWallPercentage.bind(this)\r\n        this.removeWallItem = this.removeWallItem.bind(this)\r\n        this.addSimpleWall = this.addSimpleWall.bind(this)\r\n        \r\n        this.addRoofItem = this.addRoofItem.bind(this)\r\n        this.addRoofMaterial = this.addRoofMaterial.bind(this)\r\n        this.addRoofPercentage = this.addRoofPercentage.bind(this)\r\n        this.removeRoofItem = this.removeRoofItem.bind(this)\r\n        this.addSimpleRoof = this.addSimpleRoof.bind(this)\r\n\r\n        this.addFloorItem = this.addFloorItem.bind(this)\r\n        this.addFloorMaterial = this.addFloorMaterial.bind(this)\r\n        this.addFloorPercentage = this.addFloorPercentage.bind(this)\r\n        this.removeFloorItem = this.removeFloorItem.bind(this)\r\n        this.addSimpleFloor = this.addSimpleFloor.bind(this)\r\n        \r\n        this.addFoundationItem = this.addFoundationItem.bind(this)\r\n        this.addFoundationMaterial = this.addFoundationMaterial.bind(this)\r\n        this.addFoundationPercentage = this.addFoundationPercentage.bind(this)\r\n        this.removeFoundationItem = this.removeFoundationItem.bind(this)\r\n        this.addSimpleFoundation = this.addSimpleFoundation.bind(this)\r\n\r\n        this.addInWallItem = this.addInWallItem.bind(this)\r\n        this.addInWallMaterial = this.addInWallMaterial.bind(this)\r\n        this.addInWallPercentage = this.addInWallPercentage.bind(this)\r\n        this.removeInWallItem = this.removeInWallItem.bind(this)\r\n        this.addSimpleInWall = this.addSimpleInWall.bind(this)\r\n\r\n        this.addWindowItem = this.addWindowItem.bind(this)\r\n        \r\n\r\n        this.toggleAdvanced = this.toggleAdvanced.bind(this)\r\n        this.toggleSimple = this.toggleSimple.bind(this)\r\n\r\n        this.isAbove100 = this.isAbove100.bind(this)\r\n\r\n        this.updateData = this.updateData.bind(this)\r\n    }\r\n\r\n      componentDidMount() {\r\n        db.ref(this.props.building.address).on(\"value\", snapshot => {\r\n            let allInfo = [];\r\n            snapshot.forEach(snap => {\r\n              allInfo.push(snap.val());\r\n            });\r\n            this.setState({ wall: allInfo[6].wall,\r\n                            roof: allInfo[6].roof,\r\n                            floor: allInfo[6].floor,\r\n                            foundation: allInfo[6].foundation,\r\n                            inwall: allInfo[6].inwall,\r\n                            windows: allInfo[6].windows,\r\n\r\n                            wallS: allInfo[6].wallS,\r\n                            roofS: allInfo[6].roofS,\r\n                            floorS: allInfo[6].floorS,\r\n                            foundationS: allInfo[6].foundationS,\r\n                            inwallS: allInfo[6].inwallS});\r\n          });\r\n      }\r\n\r\n      updateData() {\r\n        const wall = this.state.wall\r\n        const roof = this.state.roof\r\n        const floor = this.state.floor\r\n        const foundation = this.state.foundation\r\n\r\n            return db\r\n            .ref(`${this.props.building.address}/materials`)\r\n            .update(\r\n                {wall,roof,floor,foundation},\r\n            )\r\n            .then(_ => {\r\n                this.setState({ wall: this.state.wall,\r\n                                roof: this.state.roof,\r\n                                floor: this.state.floor,\r\n                                foundation: this.state.foundation});\r\n            });\r\n      }\r\n      \r\n\r\n    //-------------------WALL-----------------------\r\n    //#region\r\n    addWallItem() {\r\n        this.setState({ wall: [...this.state.wall, [this.state.wallM, this.state.wallP]] }) \r\n    }\r\n\r\n    addWallMaterial(item) {\r\n        this.setState({ wallM: item.value }) \r\n    }\r\n\r\n    addWallPercentage(item) {\r\n        const newVal = item.target.value;\r\n        this.setState({ wallP: newVal }) \r\n    }\r\n\r\n    removeWallItem() {\r\n        this.setState({ wall: this.state.wall.slice(0,this.state.wall.length-1)})\r\n    }\r\n\r\n    addSimpleWall(item) {\r\n        this.setState({ wallS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------ROOF-----------------------\r\n    //#region\r\n    addRoofItem(item) {\r\n        this.setState({ roof: [...this.state.roof, [this.state.roofM, this.state.roofP]] }) \r\n    }\r\n\r\n    addRoofMaterial(item) {\r\n        this.setState({ roofM: item.value }) \r\n    }\r\n\r\n    addRoofPercentage(item) {\r\n        this.setState({ roofP: item.target.value }) \r\n    }\r\n\r\n    removeRoofItem() {\r\n        this.setState({ roof: this.state.roof.slice(0,this.state.roof.length-1)})\r\n    }\r\n\r\n    addSimpleRoof(item) {\r\n        this.setState({ roofS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------FLOOR-----------------------\r\n    //#region\r\n    addFloorItem(item) {\r\n        this.setState({ floor: [...this.state.floor, [this.state.floorM, this.state.floorP]] }) \r\n    }\r\n\r\n    addFloorMaterial(item) {\r\n        this.setState({ floorM: item.value})\r\n    }\r\n\r\n    addFloorPercentage(item) {\r\n        this.setState({ floorP: item.target.value})\r\n    }\r\n\r\n    removeFloorItem() {\r\n        this.setState({ floor: this.state.floor.slice(0,this.state.floor.length-1)})\r\n    }\r\n\r\n    addSimpleFloor(item) {\r\n        this.setState({ floorS: item.value})\r\n    }\r\n    //#endregion\r\n    \r\n    //-------------------FOUNDATION-----------------------\r\n    //#region\r\n    addFoundationItem(item) {\r\n        this.setState({ foundation: [...this.state.foundation, [this.state.foundationM, this.state.foundationP]] }) \r\n    }\r\n\r\n    addFoundationMaterial(item) {\r\n        this.setState({ foundationM: item.value})\r\n    }\r\n\r\n    addFoundationPercentage(item) {\r\n        this.setState({ foundationP: item.target.value})\r\n    }\r\n\r\n    removeFoundationItem() {\r\n        this.setState({ foundation: this.state.foundation.slice(0,this.state.foundation.length-1)})\r\n    }\r\n\r\n    addSimpleFoundation(item) {\r\n        this.setState({ foundationS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------INWALL-----------------------\r\n    //#region\r\n    addInWallItem() {\r\n        this.setState({ inwall: [...this.state.inwall, [this.state.inwallM, this.state.inwallP]] }) \r\n    }\r\n\r\n    addInWallMaterial(item) {\r\n        this.setState({ inwallM: item.value }) \r\n    }\r\n\r\n    addInWallPercentage(item) {\r\n        const newVal = item.target.value;\r\n        this.setState({ inwallP: newVal }) \r\n    }\r\n\r\n    removeInWallItem() {\r\n        this.setState({ inwall: this.state.inwall.slice(0,this.state.inwall.length-1)})\r\n    }\r\n\r\n    addSimpleInWall(item) {\r\n        this.setState({ inwallS: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------WINDOWS-----------------------\r\n    //#region\r\n    addWindowItem(item) {\r\n        this.setState({ windows: item.value})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------TOGGLE-----------------------\r\n    //#region\r\n    toggleAdvanced() {\r\n        this.setState({advanced: true})\r\n    }\r\n\r\n    toggleSimple() {\r\n        this.setState({advanced: false})\r\n    }\r\n    //#endregion\r\n\r\n    //-------------------FUNCTIONS-----------------------\r\n    isAbove100(number) {\r\n        if (number >= 0) {\r\n            return 'Mangler: '+number+'%'\r\n        } else {\r\n            return 'OVER 100%, FJERN MATERIALER'\r\n        }\r\n    }\r\n\r\n    render () {\r\n        if (this.state.advanced == true) {\r\n        return (\r\n            <div>\r\n                <div className='MaterialHeader'>\r\n                    <h1>Materialer</h1>\r\n                    <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"materialInfo\" }}>\r\n                            <div>\r\n                                <BsFillInfoCircleFill data-tip=\"\" data-for='2'/>\r\n                                <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true' id='2'>\r\n                                    <ol className='ToolTipList' type='A'>\r\n                                    <li>Materialer vælges på 2 måder - simpelt eller avanceret</li>\r\n                                    <li>I den simple udgave vælges et preset for hvert materiale, som herefter <br></br> bestemmer hvilke materialer og tykkelser der indgår</li>\r\n                                    <li>I den avancerede udgave tilføjer brugeren selv materialer og materialetykkelser til hver af bygningsdelene</li>\r\n                                    </ol>\r\n                                </ReactTooltip>\r\n                            </div>\r\n                    </IconContext.Provider>\r\n                </div>\r\n                <div className='ToggleButton'>\r\n                        <p>Avanceret</p>\r\n                        <Toggle\r\n                            id='material-status'\r\n                            onChange={this.toggleSimple} />\r\n                </div>\r\n                <div className='materialLists'>\r\n                    <div className='materialSection'>\r\n                        <h2>Ydervægge</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addWallMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.wallP} step={0.01}\r\n                                    onChange={this.addWallPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.wallP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.wall.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addWallItem}>Tilføj</button>\r\n                        <button onClick={this.removeWallItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Tag</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addRoofMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.roofP} step={0.01}\r\n                                    onChange={this.addRoofPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.roofP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.roof.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addRoofItem}>Tilføj</button>\r\n                        <button onClick={this.removeRoofItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Gulv</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addFloorMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.floorP} step={0.01}\r\n                                    onChange={this.addFloorPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.floorP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.floor.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addFloorItem}>Tilføj</button>\r\n                        <button onClick={this.removeFloorItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Fundament</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addFoundationMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.foundationP} step={0.01}\r\n                                    onChange={this.addFoundationPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.foundationP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.foundation.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addFoundationItem}>Tilføj</button>\r\n                        <button onClick={this.removeFoundationItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                        <h2>Indervægge</h2>\r\n                        <div className='dropCreate'>\r\n                            <Dropdown className='drop1' options={Options} onChange={this.addInWallMaterial} placeholder={'Vælg et materiale'}/>\r\n                            <div className='sliderSection'>\r\n                                <RangeStepInput \r\n                                    min={0.01} max={1}\r\n                                    value={this.state.inwallP} step={0.01}\r\n                                    onChange={this.addInWallPercentage}\r\n                                    style={{width: 220 + 'px'}}\r\n                                />\r\n                                <a className='input-group-text'>{this.state.inwallP}m</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>{this.state.inwall.map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        <button onClick={this.addInWallItem}>Tilføj</button>\r\n                        <button onClick={this.removeInWallItem}>Fjern</button>\r\n                    </div>\r\n                    <div className='materialSection'>\r\n                            <h2>Vinduer</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.windows}</p>\r\n                                <Dropdown className='drop3' options={windowOptions} onChange={this.addWindowItem} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{this.state.windows}</div>\r\n                    </div>\r\n                </div>\r\n                <Results materials={this.state} building={this.props.building}/>\r\n                <UpdateButton materials={this.state} building={this.props.building}/>\r\n            </div>\r\n        )\r\n        } else {\r\n            return(\r\n                <div>\r\n                    <div className='MaterialHeader'>\r\n                        <h1>Materialer</h1>\r\n                        <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"materialInfo\" }}>\r\n                                <div>\r\n                                <BsFillInfoCircleFill data-tip=\"\" data-for='3'/>\r\n                                <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true' id='3'>\r\n                                    <ul className='ToolTipList' type='A'>\r\n                                        <li>Materialer vælges på 2 måder - simpelt eller avanceret</li>\r\n                                        <li>I den simple udgave vælges et preset for hvert materiale, som herefter <br></br> bestemmer hvilke materialer og tykkelser der indgår</li>\r\n                                        <li>I den avancerede udgave tilføjer brugeren selv materialer og materialetykkelser til hver af bygningsdelene</li>\r\n                                    </ul>\r\n                                </ReactTooltip>\r\n                                </div>\r\n                        </IconContext.Provider>\r\n                    </div>\r\n                    <div className='ToggleButton'>\r\n                        <p>Avanceret</p>\r\n                        <Toggle\r\n                            id='material-status'\r\n                            onChange={this.toggleAdvanced} />\r\n                    </div>\r\n                    <div className='materialLists'>\r\n                        <div className='materialSection'>\r\n                            <h2>Ydervægge</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.wallS}</p>\r\n                                <Dropdown className='drop2' options={wallOptions} onChange={this.addSimpleWall} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleWall(this.state.wallS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Tag</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.roofS}</p>\r\n                                <Dropdown className='drop2' options={roofOptions} onChange={this.addSimpleRoof} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleRoof(this.state.roofS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Gulv</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.floorS}</p>\r\n                                <Dropdown className='drop2' options={floorOptions} onChange={this.addSimpleFloor} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleFloor(this.state.floorS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Fundament</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.foundationS}</p>\r\n                                <Dropdown className='drop2' options={foundationOptions} onChange={this.addSimpleFoundation} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleFoundation(this.state.foundationS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Indervægge</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.inwallS}</p>\r\n                                <Dropdown className='drop2' options={inWallOptions} onChange={this.addSimpleInWall} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{simpleInWall(this.state.inwallS).map((item) => <li>{item[0]} {item[1]}m</li>)}</div>\r\n                        </div>\r\n                        <div className='materialSection'>\r\n                            <h2>Vinduer</h2>\r\n                            <div className='dropCreate'>\r\n                                <p>Nuværende preset: {this.state.windows}</p>\r\n                                <Dropdown className='drop2' options={windowOptions} onChange={this.addWindowItem} placeholder={'Vælg et preset'}/>\r\n                            </div>\r\n                            <div>{this.state.windows}</div>\r\n                        </div>\r\n                    </div>\r\n                    <ResultsSimple materials={this.state} building={this.props.building}/>\r\n                    <UpdateButton materials={this.state} building={this.props.building}/>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MaterialList","import React from 'react';\nimport './Building.css';\nimport BuildingView from '../BuildingView/BuildingView'\nimport RoofTypeImage from './RoofTypeImage/RoofTypeImage'\nimport FoundationTypeImage from './FoundationTypeImage/FoundationTypeImage'\nimport MaterialList from '../MaterialList/MaterialList'\nimport Dropdown from 'react-dropdown';\nimport { IconContext } from \"react-icons\";\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\nimport ReactTooltip from 'react-tooltip';\nimport { roofTypeValue, foundationTypeValue } from '../../functions/simpleFunctions'\n\nconst roofTypeOptions = [\n  'Saddel', 'Fladt', 'Valm', 'Skråt'\n]\n\nconst foundationTypeOptions = [\n  'Linje', 'Punkt', 'Stribe'\n]\n\nclass Building extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleAreaChange = this.handleAreaChange.bind(this)\n    this.handleHeightChange = this.handleHeightChange.bind(this)\n    this.handleRoofTypeSelect = this.handleRoofTypeSelect.bind(this)\n    this.handleFoundationTypeSelect = this.handleFoundationTypeSelect.bind(this)\n  }\n\n  handleAreaChange(inputArea) {\n    const area = inputArea.target.value;\n    this.props.onAreaChange(area)\n  }\n\n  handleHeightChange(inputHeight) {\n    const height = inputHeight.target.value;\n    this.props.onFloorHeightChange(height)\n  }\n\n  handleRoofTypeSelect(inputRoofType) {\n    const roofType = inputRoofType.value;\n    this.props.onRoofTypeChange(roofType)\n  }\n\n  handleFoundationTypeSelect(inputFoundationType) {\n    const foundationType = inputFoundationType.value;\n    this.props.onFoundationTypeChange(foundationType)\n  }\n\n  render() {\n\n    const area = this.props.building.area\n    const floors = this.props.building.floors\n    const floorHeight = this.props.building.floorHeight\n    const totalArea = area*floors\n    const perimeter = Math.floor(Math.sqrt(area)*4)\n    const wallArea = Math.floor(perimeter*(floors*floorHeight))\n    const roofArea = Math.floor(area*roofTypeValue(this.props.building.roofType))\n    const windowArea = Math.floor(wallArea*0.15)\n    const built = this.props.building.built\n    const age = 2021-built\n\n    if (this.props.building.selectAddress === true && this.props.building.selectEdit === '') {\n    return (\n      <div className=\"Building\">\n        <div className='BuildingHeader'>\n          <h1>Bygningsinformation</h1>\n          <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"informationInfo\" }}>\n                <div>\n                  <BsFillInfoCircleFill data-tip=\"\" data-for='4'/>\n                  <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true' id='4'>\n                    <ol className='ToolTipList' type='A'>\n                      <li>Værdier med mørkeblå baggrund kan redigeres</li>\n                    </ol>\n                  </ReactTooltip>\n                </div>\n          </IconContext.Provider>\n        </div>\n        <div className=\"image-container\">\n          <BuildingView building={this.props.building}/>\n        </div>\n        <h2 className='address-title'>{this.props.building.address}</h2>\n        <div className='information-container'>\n          <div className='paravar'>\n            <p className='parameter'><span>Etageareal</span></p>\n            <input className='cVariable' value={area} pattern=\"[0-9]*\" onChange={this.handleAreaChange}/>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Etagehøjde</span></p>\n            <input className='cVariable' value={floorHeight} pattern=\"[0-9]*\" onChange={this.handleHeightChange}/>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Etager</span></p>\n            <p className='variable'><span>{floors}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Samlet areal</span></p>\n            <p className='variable'><span>{totalArea}</span></p>\n          </div>\n        </div>\n        <div className='information-container' id='i2'>\n          <div className='paravar'>\n            <p className='parameter'><span>Omkreds</span></p>\n            <p className='variable'><span>{perimeter}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Vægareal</span></p>\n            <p className='variable'><span>{wallArea}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Tagareal</span></p>\n            <p className='variable'><span>{roofArea}</span></p>\n          </div>\n        </div>\n        <div className='information-container' id='i3'>\n          <div className='paravar'>\n            <p className='parameter'><span>Vinduesareal</span></p>\n            <p className='variable'><span>{windowArea}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Opført</span></p>\n            <p className='variable'><span>{built}</span></p>\n          </div>\n          <div className='paravar'>\n            <p className='parameter'><span>Alder</span></p>\n            <p className='variable'><span>{age}</span></p>\n          </div>\n        </div>\n        <div className='typeContainer'>\n          <div className='compTypeContainer'>\n            <h2>Tagtype</h2>\n            <Dropdown options={roofTypeOptions} onChange={this.handleRoofTypeSelect} placeholder={this.props.building.roofType} />\n            <RoofTypeImage roofType={this.props.building.roofType}/>\n          </div>\n          <div className='compTypeContainer'>\n            <h2>Fundamenttype</h2>\n            <Dropdown options={foundationTypeOptions} onChange={this.handleFoundationTypeSelect} placeholder={this.props.building.foundationType} />\n            <FoundationTypeImage foundationType={this.props.building.foundationType}/>\n          </div>\n        </div>\n        <div className='EnergyHeader'>\n          <h1>Energi</h1>\n          <IconContext.Provider value={{size: \"1.6rem\", color: \"white\", className: \"energyInfo\" }}>\n                <div>\n                  <BsFillInfoCircleFill data-tip=\"\"/>\n                  <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" border='true'>\n                    <ol className='ToolTipList' type='A'>\n                      <li>1) Data er baseret på resultater fra Energistyrelsen</li>\n                      <li>2) Energiklassen kan variere fra A-F, hvor A er bedst</li>\n                      <li>3) Det beregnede forbrug er et estimat, og kan være væsentligt større eller mindre i realiteten</li>\n                      <li>4) Forbedring beskriver en forbedring der kan foretages, som vil reducere energiforbrugt i bygningen</li>\n                      <li>5) Investering er den sum penge det kræver at implementere forbedringen</li>\n                      <li>6) Potentiel besparelse er den årlige besparelse, som den implementerede forbedring vil medføre</li>\n                    </ol>\n                  </ReactTooltip>\n                </div>\n          </IconContext.Provider>\n        </div>\n        <div className='energyContainer'>\n          <div className='EIC'>\n            <p className='energyData'>Energiklasse:</p><p className='energyData2'>{this.props.building.energy[0]}</p>\n            <p className='energyData'>Beregnet forbrug:</p><p className='energyData2'>{this.props.building.energy[2]} kr/år</p>\n          </div>\n          <div className='EIC'>\n            <p className='energyData'>Potentiel besparelse:</p><p className='energyData2'>{this.props.building.energy[1]} kr/år</p>\n            <p className='energyData'>Investering:</p><p className='energyData2'>{this.props.building.energy[3]} kr</p>\n            <p className='energyData'>Forbedring:</p><p className='energyData2'>{this.props.building.energy[4]}</p>\n          </div>\n        </div>\n        {/*<Download building={this.props.building}/>*/}\n        <div className='MaterialSection'>\n          <MaterialList building={this.props.building}/>\n        </div>\n      </div>\n    )\n    } else {\n      return(\n        <div></div>\n      )\n    }\n  }\n}\nexport default Building;","import React from 'react'\r\nimport './Material.css'\r\n\r\n\r\nclass Material extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSimpleClick = this.handleSimpleClick.bind(this);\r\n    this.handleAdvancedClick = this.handleAdvancedClick.bind(this);\r\n    this.handleBackClick = this.handleBackClick.bind(this);\r\n  }\r\n\r\n  handleSimpleClick() {\r\n    const edit = 'simple'\r\n    this.props.onChange1(edit)\r\n  }\r\n\r\n  handleAdvancedClick() {\r\n    const edit = 'advanced'\r\n    this.props.onChange1(edit)\r\n  }\r\n\r\n  handleBackClick() {\r\n    const goBack = true\r\n    const selectAddress = false\r\n    this.props.onChange2(goBack,selectAddress)\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.building.selectAddress === true && this.props.building.selectEdit === '') {\r\n    return(\r\n      <div className=\"mainMaterial\">\r\n        <div className=\"buttonDiv\">\r\n          <a className=\"buttonMaterial\" onClick={this.handleBackClick}>Tilbage</a>\r\n        </div>\r\n      </div>\r\n    )\r\n    } else {\r\n      return(\r\n        <div></div>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default Material","import React from 'react'\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport './Simple.css'\r\nimport { simpleRoof, simpleWall, simpleFloor, simpleFoundation } from '../../functions/simpleFunctions'\r\nimport { Pie, Bar } from 'react-chartjs-2';\r\n\r\nconst wallOptions = [\r\n    'Beton', 'Træ', 'Mursten'\r\n]\r\n\r\nconst roofOptions = [\r\n    'Skifer', 'Beton', 'Tagpap', 'Tegl'\r\n];\r\n\r\nconst floorOptions = [\r\n    'Beton', 'Træ'\r\n]\r\n\r\nconst foundationOptions = [\r\n    'Beton', 'Træ'\r\n]\r\n\r\nclass Simple extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            wallMaterial: [],\r\n            roofMaterial: [],\r\n            floorMaterial: [],\r\n            foundationMaterial: []\r\n        }\r\n\r\n        this.handleWallSelect = this.handleWallSelect.bind(this)\r\n        this.handleRoofSelect = this.handleRoofSelect.bind(this)\r\n        this.handleFloorSelect = this.handleFloorSelect.bind(this)\r\n        this.handleFoundationSelect = this.handleFoundationSelect.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleWallSelect(newMaterial) {\r\n        this.setState({wallMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleRoofSelect(newMaterial) {\r\n        this.setState({roofMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleFloorSelect(newMaterial) {\r\n        this.setState({floorMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleFoundationSelect(newMaterial) {\r\n        this.setState({foundationMaterial: newMaterial.value})\r\n    }\r\n\r\n    handleClick() {\r\n        const edit = ''\r\n        this.props.onChange(edit)\r\n    }\r\n\r\n    render() {\r\n\r\n        //-----------------------------------------------------------------------------------\r\n        const area = this.props.building.area\r\n        const floors = this.props.building.floors\r\n        const totalArea = area*floors\r\n        const perimeter = Math.floor(Math.sqrt(area)*4)\r\n        const wallArea = perimeter*(floors*2.5)\r\n        const roofArea = Math.floor(area*1.1)\r\n        const windowArea = Math.floor(wallArea*0.15)\r\n        //-----------------------------------------------------------------------------------\r\n        const wallMaterials = simpleWall(this.state.wallMaterial)\r\n        const roofMaterials = simpleRoof(this.state.roofMaterial)\r\n        const floorMaterials = simpleFloor(this.state.floorMaterial)\r\n        const foundationMaterials = simpleFoundation(this.state.foundationMaterial)\r\n        //-----------------------------------------------------------------------------------\r\n        // Beton, Isolering, Træ, Mursten, Metal\r\n        const wallMaterialAmount = wallMaterials.map(x => Math.floor(x * wallArea * 0.5));\r\n\r\n        // Beton, Isolering, Træ, Metal\r\n        const floorMaterialAmount = floorMaterials.map(x => Math.floor(x * totalArea*0.3));\r\n\r\n        // Beton, Træ, Metal, Skifer, Tagpap, Tegl\r\n        const roofMaterialAmount = roofMaterials.map(x => Math.floor(x * roofArea * 0.2));\r\n\r\n        // Beton, Isolering, Træ, Metal\r\n        const foundationMaterialAmount = foundationMaterials.map(x => Math.floor(x * area * 0.5));\r\n\r\n        const wallData = {\r\n            labels: ['Beton', 'Isolering', 'Træ', 'Mursten', 'Metal'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: wallMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                  'rgba(153, 102, 255, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const roofData = {\r\n            labels: ['Beton', 'Træ', 'Metal', 'Skifer', 'Tagpap', 'Tegl'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: roofMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                  'rgba(153, 102, 255, 0.2)',\r\n                  'rgba(100, 152, 255, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                  'rgba(153, 102, 255, 1)',\r\n                  'rgba(100, 152, 255, 0.2)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const floorData = {\r\n            labels: ['Beton', 'Isolering', 'Træ', 'Metal'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: floorMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const foundationData = {\r\n            labels: ['Beton', 'Isolering', 'Træ', 'Metal'],\r\n            datasets: [\r\n              {\r\n                label: '# of Votes',\r\n                data: foundationMaterialAmount,\r\n                backgroundColor: [\r\n                  'rgba(255, 99, 132, 0.2)',\r\n                  'rgba(54, 162, 235, 0.2)',\r\n                  'rgba(255, 206, 86, 0.2)',\r\n                  'rgba(75, 192, 192, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                  'rgba(255, 99, 132, 1)',\r\n                  'rgba(54, 162, 235, 1)',\r\n                  'rgba(255, 206, 86, 1)',\r\n                  'rgba(75, 192, 192, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          }\r\n\r\n        const allData = {\r\n          labels: ['1', '2', '3', '4', '5', '6'],\r\n          datasets: [\r\n            {\r\n              label: 'Væg',\r\n              data: wallMaterialAmount,\r\n              backgroundColor: 'rgb(255, 99, 132)',\r\n            },\r\n            {\r\n              label: 'Tag',\r\n              data: roofMaterialAmount,\r\n              backgroundColor: 'rgb(54, 162, 235)',\r\n            },\r\n            {\r\n              label: 'Gulv',\r\n              data: floorMaterialAmount,\r\n              backgroundColor: 'rgb(75, 192, 192)',\r\n            },\r\n            {\r\n              label: 'Fundament',\r\n              data: foundationMaterialAmount,\r\n              backgroundColor: 'rgb(75, 192, 192)',\r\n            },\r\n          ],\r\n        }\r\n\r\n        const allOptions = {\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  stacked: true,\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  stacked: true,\r\n                },\r\n              ],\r\n            },\r\n        }\r\n        \r\n\r\n\r\n        if (this.props.building.selectAddress === true && this.props.building.selectEdit === 'simple') {\r\n            return(\r\n                <div className='simpleMain'>\r\n                    <h2>REDIGER SIMPEL</h2>\r\n                    <h3 className ='simpleInfo'>{this.props.building.address}</h3>\r\n                    <div className='dropdownContainer'>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Ydervægge</p>\r\n                            <Dropdown options={wallOptions} onChange={this.handleWallSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={wallData} className='pieChart' style='height: 140px'/>\r\n                        </div>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Tag</p>\r\n                            <Dropdown options={roofOptions} onChange={this.handleRoofSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={roofData} className='pieChart'/>\r\n                        </div>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Terrændæk</p>\r\n                            <Dropdown options={floorOptions} onChange={this.handleFloorSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={floorData} className='pieChart'/>\r\n                        </div>\r\n                        <div className='dropdownMenu'>\r\n                            <p className='dropdownTitle'>Fundament</p>\r\n                            <Dropdown options={foundationOptions} onChange={this.handleFoundationSelect} placeholder=\"Vælg et materiale\" />\r\n                            <Pie data={foundationData} className='pieChart'/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='barContainer'>\r\n                      <Bar data={allData} options={allOptions} width={400} height={400}/>\r\n                    </div>\r\n                    <div className='simpleButtonContainer'>\r\n                        <a className=\"simpleButton\" onClick={this.handleClick}>Tilbage</a>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Simple","import React from 'react'\r\nimport './Advanced.css'\r\n\r\nclass Advanced extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleClick() {\r\n        const edit = ''\r\n        this.props.onChange(edit)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.building.selectAddress === true && this.props.building.selectEdit === 'advanced') {\r\n            return(\r\n                <div className='advancedMain'>\r\n                    <h2>REDIGER AVANCERET</h2>\r\n                    <h3>{this.props.building.address}</h3>\r\n                    <div className='advancedButtonContainer'>\r\n                        <a className=\"advancedButton\" onClick={this.handleClick}>Tilbage</a>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Advanced","import React from 'react';\nimport '../../reset.css'\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Building from '../Building/Building'\nimport Material from '../Material/Material'\nimport Simple from '../Simple/Simple'\nimport Advanced from '../Advanced/Advanced'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {imageSrc: '',\n                  address: '',\n                  area: '',\n                  floors: '',\n                  built: '',\n                  selectAddress: false,\n                  selectEdit: '',\n                  location: [],\n                  goBack: true,\n                  floorHeight: 2.5,\n                  roofType: 'Saddel',\n                  foundationType: 'Linje',\n                  energy: [],\n                  notes: []};\n\n    this.changeAddress = this.changeAddress.bind(this);\n    this.changeArea = this.changeArea.bind(this);\n    this.changeEdit = this.changeEdit.bind(this);\n    this.changeBack = this.changeBack.bind(this);\n    this.changeFloorHeight = this.changeFloorHeight.bind(this);\n    this.changeRoofType = this.changeRoofType.bind(this);\n    this.changeFoundationType = this.changeFoundationType.bind(this);\n  }\n\n  changeAddress(newAddress,newArea,newFloors,newBuilt,selectedAddress,newLocation,newGoBack,newFloorHeight,newRoofType, newFoundationType, newEnergy) {\n    this.setState({address: newAddress})\n    this.setState({area:newArea})\n    this.setState({floors: newFloors})\n    this.setState({built: newBuilt})\n    this.setState({selectAddress: selectedAddress})\n    this.setState({location: newLocation})\n    this.setState({goBack: newGoBack})\n    this.setState({floorHeight: newFloorHeight})\n    this.setState({roofType: newRoofType})\n    this.setState({foundationType: newFoundationType})\n    this.setState({energy: newEnergy})\n  } \n\n  changeArea(newArea) {\n    this.setState({area:newArea})\n  }\n\n  changeFloorHeight(newFloorHeight) {\n    this.setState({floorHeight: newFloorHeight})\n  }\n\n  changeRoofType(newRoofType) {\n    this.setState({roofType: newRoofType})\n  }\n\n  changeFoundationType(newFoundationType) {\n    this.setState({foundationType: newFoundationType})\n  }\n\n  changeEdit(newEdit) {\n    this.setState({selectEdit: newEdit})\n  }\n\n  changeBack(newGoBack, selectedAddress) {\n    this.setState({goBack: newGoBack})\n    this.setState({selectAddress: selectedAddress})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <SearchBar building={this.state} onChange={this.changeAddress}/>\n          <div className='Info'>\n            <Building building={this.state} onAreaChange={this.changeArea} onFloorHeightChange={this.changeFloorHeight}\n            onRoofTypeChange={this.changeRoofType} onFoundationTypeChange={this.changeFoundationType}/>\n            <Material building={this.state} onChange1={this.changeEdit} onChange2={this.changeBack}/>\n            <Simple building={this.state} onChange={this.changeEdit}/>\n            <Advanced building={this.state} onChange={this.changeEdit}/>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n        <App />,\ndocument.getElementById('root'));\n","import React from 'react'\r\nimport './Impacts.css'\r\nimport JSZip from 'jszip'\r\nimport FileSaver from 'file-saver'\r\nimport saveAs from 'file-saver'\r\n\r\nconst BetonMatPas = require(\"../../materialepas/beton.json\")\r\nconst GipsMatPas = require(\"../../materialepas/gips.json\")\r\nconst IsoleringMatPas = require(\"../../materialepas/isolering.json\")\r\nconst MetalMatPas = require(\"../../materialepas/metal.json\")\r\nconst MurstenMatPas = require(\"../../materialepas/mursten.json\")\r\nconst PapMatPas = require(\"../../materialepas/pap.json\")\r\nconst SkiferMatPas = require(\"../../materialepas/skifer.json\")\r\nconst StenMatPas = require(\"../../materialepas/sten.json\")\r\nconst TeglMatPas = require(\"../../materialepas/tegl.json\")\r\nconst TræMatPas = require(\"../../materialepas/træ.json\")\r\n\r\nclass Impacts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {emissions: {},\r\n                     complete: false}\r\n\r\n        this.multiplyObj = this.multiplyObj.bind(this)\r\n        this.getMaterialEmission = this.getMaterialEmission.bind(this)\r\n        this.runEmissions = this.runEmissions.bind(this)\r\n        this.runPrices = this.runPrices.bind(this)\r\n        this.removeMissing = this.removeMissing.bind(this)\r\n        this.sumObjects = this.sumObjects.bind(this)\r\n        this.downloadZip = this.downloadZip.bind(this)\r\n    }\r\n\r\n    multiplyObj(obj,val) {\r\n        for (let key in obj) {\r\n            if (typeof obj[key] == 'number') {\r\n              obj[key] *= val;\r\n            }\r\n        } return obj\r\n    }\r\n\r\n    getMaterialEmission(arr,obj) {\r\n        const newEmission = {}\r\n        const newEmissions = obj\r\n        for (var x of arr) {\r\n            if (x[0] === 'Beton') {\r\n                newEmission.Beton = this.multiplyObj(newEmissions.Beton, x[1])\r\n            } \r\n            if (x[0] === 'Træ') {\r\n                newEmission.Træ = this.multiplyObj(newEmissions.Træ, x[1])\r\n            } \r\n            if (x[0] === 'Skifer') {\r\n                newEmission.Skifer = this.multiplyObj(newEmissions.Skifer, x[1])\r\n            } \r\n            if (x[0] === 'Tegl') {\r\n                newEmission.Tegl = this.multiplyObj(newEmissions.Tegl, x[1])\r\n            } \r\n            if (x[0] === 'Sten') {\r\n                newEmission.Fliser = this.multiplyObj(newEmissions.Fliser, x[1])\r\n            } \r\n            if (x[0] === 'Isolering') {\r\n                newEmission.Isolering = this.multiplyObj(newEmissions.Isolering, x[1])\r\n            } \r\n            if (x[0] === 'Pap') {\r\n                newEmission.Tagpap = this.multiplyObj(newEmissions.Tagpap, x[1])\r\n            } \r\n            if (x[0] === 'Mursten') {\r\n                newEmission.Mursten = this.multiplyObj(newEmissions.Mursten, x[1])\r\n            } \r\n            if (x[0] === 'Metal') {\r\n                newEmission.Metal = this.multiplyObj(newEmissions.Metal, x[1])\r\n            } \r\n            if (x[0] === 'Gips') {\r\n                newEmission.Gips = this.multiplyObj(newEmissions.Gips, x[1])\r\n            }\r\n        }\r\n        return newEmission\r\n    } \r\n\r\n    runEmissions() {\r\n        const emissions = {\r\n    \r\n            //M2 2cm\r\n            Fliser:     {GWP: 6.18*50,\r\n                        ODP: (4.96*Math.exp(-14))*50,\r\n                        POCP: 0.000326*50,\r\n                        AP: 0.00613*50,\r\n                        EP: 0.00119*50,\r\n                        ADPE: 7.81*Math.exp(-7)*50,\r\n                        ADPF: 97.66*50,\r\n                        PERT: 9.186*50,\r\n                        PENRT: 100.42*50,\r\n                        RSF: 0*50,\r\n                        NRSF: 0*50},\r\n        \r\n            Beton:      {GWP: 197,\r\n                        ODP: 5.36*Math.exp(-8),\r\n                        POCP: 0.023,\r\n                        AP: 0.287,\r\n                        EP: 0.0535,\r\n                        ADPE: 0.000634,\r\n                        ADPF: 900,\r\n                        PERT: 190,\r\n                        PENRT: 999,\r\n                        RSF: 193,\r\n                        NRSF: 348},\r\n        \r\n            Træ:        {GWP: 0,\r\n                        ODP: 6.49*Math.exp(-12),\r\n                        POCP: 0.059,\r\n                        AP: 0.667,\r\n                        EP: 0.152,\r\n                        ADPE: 6.75*Math.exp(-5),\r\n                        ADPF: 2494,\r\n                        PERT: 12719,\r\n                        PENRT: 2853,\r\n                        RSF: 0,\r\n                        NRSF: 0},\r\n            //M2 2cm\r\n            Tegl:       {GWP: 15.87*50,\r\n                        ODP: (1.14*Math.exp(-13))*50,\r\n                        POCP: 0.003*50,\r\n                        AP: 0.0123*50,\r\n                        EP: 0.0023*50,\r\n                        ADPE: 1.84*Math.exp(-6)*50,\r\n                        ADPF: 242*50,\r\n                        PERT: 21.34*50,\r\n                        PENRT: 248.8*50,\r\n                        RSF: 0*50,\r\n                        NRSF: 0*50},\r\n            //M2 2cm\r\n            Skifer:     {GWP: 15.03*50,\r\n                        ODP: (2.21*Math.exp(-13))*50,\r\n                        POCP: 0.0088*50,\r\n                        AP: 0.088*50,\r\n                        EP: 0.02*50,\r\n                        ADPE: 4.55*Math.exp(-6)*50,\r\n                        ADPF: 189*50,\r\n                        PERT: 49*50,\r\n                        PENRT: 202.9*50,\r\n                        RSF: 0*50,\r\n                        NRSF: 0}*50,\r\n        \r\n            Isolering:  {GWP: 40,\r\n                        ODP: 6.18*Math.exp(-13),\r\n                        POCP: 0.0097,\r\n                        AP: 0.18,\r\n                        EP: 0.026,\r\n                        ADPE: 8.53*Math.exp(-6),\r\n                        ADPF: 459,\r\n                        PERT: 78,\r\n                        PENRT: 481.1,\r\n                        RSF: 0.0068,\r\n                        NRSF: 0},\r\n            //M2 1cm\r\n            Tagpap:     {GWP: 5.36*100,\r\n                        ODP: (4.9*Math.exp(-14))*100,\r\n                        POCP: 0.0015*100,\r\n                        AP: 0.0084*100,\r\n                        EP: 0.0011*100,\r\n                        ADPE: 1.1*Math.exp(-6)*100,\r\n                        ADPF: 254*100,\r\n                        PERT: 9.46*100,\r\n                        PENRT: 258*100,\r\n                        RSF: 0*100,\r\n                        NRSF: 0*100},\r\n        \r\n            Mursten:    {GWP: 528,\r\n                        ODP: 3.03*Math.exp(-12),\r\n                        POCP: 0.079,\r\n                        AP: 0.45,\r\n                        EP: 0.084,\r\n                        ADPE: 5.4*Math.exp(-5),\r\n                        ADPF: 7980,\r\n                        PERT: 574,\r\n                        PENRT: 8150,\r\n                        RSF: 0,\r\n                        NRSF: 0},\r\n            \r\n            Metal:      {GWP: 1125,\r\n                        ODP: 1.95*Math.exp(-11),\r\n                        POCP: 0.4,\r\n                        AP: 2.164,\r\n                        EP: 0.219,\r\n                        ADPE: 0.000049,\r\n                        ADPF: 10200,\r\n                        PERT: 1516,\r\n                        PENRT: 11470,\r\n                        RSF: 0,\r\n                        NRSF: 0},\r\n            //2cm\r\n            Gips:       {GWP: 1.54*50,\r\n                        ODP: (1.44*Math.exp(-14))*50,\r\n                        POCP: 0.00001*50,\r\n                        AP: 0.0028*50,\r\n                        EP: 0.000088*50,\r\n                        ADPE: 2.48*Math.exp(-7)*50,\r\n                        ADPF: 32.68*50,\r\n                        PERT: 9.8*50,\r\n                        PENRT: 33.5*50,\r\n                        RSF: 0,\r\n                        NRSF: 0},\r\n        }\r\n\r\n        const newEmission = this.getMaterialEmission(this.props.amount,emissions)\r\n\r\n        this.setState({emissions: newEmission})\r\n        this.setState({complete: true})\r\n    }\r\n\r\n    runPrices(array) {\r\n        const newArray = []\r\n        const Beton = ['Beton',0]\r\n        const Træ = ['Træ',0]\r\n        const Skifer = ['Skifer',0]\r\n        const Tegl = ['Tegl',0]\r\n        const Isolering = ['Isolering',0]\r\n        const Tagpap = ['Pap',0]\r\n        const Mursten = ['Mursten',0]\r\n        const Gips = ['Gips', 0]\r\n        const Metal = ['Metal', 0]\r\n        const Sten = ['Sten', 0]\r\n\r\n        for (var x of array) {\r\n            if (x[0] === 'Træ') {\r\n                Træ[1] = x[1]*70\r\n            }\r\n            if (x[0] === 'Beton') {\r\n                Beton[1] = x[1]*60\r\n            }\r\n            if (x[0] === 'Skifer') {\r\n                Skifer[1] = x[1]*80\r\n            }\r\n            if (x[0] === 'Tegl') {\r\n                Tegl[1] = x[1]*85\r\n            }\r\n            if (x[0] === 'Isolering') {\r\n                Isolering[1] = x[1]*55\r\n            }\r\n            if (x[0] === 'Tagpap') {\r\n                Tagpap[1] = x[1]*20\r\n            }\r\n            if (x[0] === 'Mursten') {\r\n                Mursten[1] = x[1]*70\r\n            }\r\n            if (x[0] === 'Gips') {\r\n                Gips[1] = x[1]*40\r\n            }\r\n            if (x[0] === 'Metal') {\r\n                Metal[1] = x[1]*200\r\n            }\r\n            if (x[0] === 'Sten') {\r\n                Sten[1] = x[1]*85\r\n            }             \r\n        }\r\n        newArray.push(Beton) \r\n        newArray.push(Træ)\r\n        newArray.push(Skifer)\r\n        newArray.push(Tegl)\r\n        newArray.push(Isolering)\r\n        newArray.push(Tagpap)\r\n        newArray.push(Mursten)\r\n        newArray.push(Metal)\r\n        newArray.push(Gips)\r\n        newArray.push(Sten)\r\n        return newArray\r\n    }\r\n\r\n    removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n\r\n    sumObjects(...objs) {\r\n        return objs.reduce((a, b) => {\r\n          for (let k in b) {\r\n            if (b.hasOwnProperty(k))\r\n              a[k] = (a[k] || 0) + b[k];\r\n          }\r\n          return a;\r\n        }, {});\r\n    }\r\n\r\n    downloadZip() {\r\n        const BygPas = {Bygningsdele: [{Væg: this.props.materials.wall},\r\n            {Tag: this.props.materials.roof},\r\n            {Gulv: this.props.materials.floor},\r\n            {Fundament: this.props.materials.foundation}],\r\n            Mængder: [this.props.amount]}\r\n\r\n        var zip = new JSZip();\r\n\r\n        for (var x of this.removeMissing(this.props.amount)) {\r\n            zip.file(`${x[0]}.json`, JSON.stringify(eval(`${x[0]}`+'MatPas'), null, 2))\r\n        }\r\n\r\n        zip.file('Bygningspas.json', JSON.stringify(BygPas, null, 2))\r\n\r\n        zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n            // see FileSaver.js\r\n            saveAs(content, \"example.zip\");\r\n        });\r\n    }\r\n\r\n    render() { \r\n\r\n        if (this.state.complete === false) {\r\n        return(\r\n            <div className='ImpactSection'>\r\n                <div className='ImpactHeader'>\r\n                    <h1>Besparelser</h1>\r\n                </div>\r\n                <a className='emissionUpdate' onClick={this.runEmissions}>Beregn/Opdater</a>\r\n                <button className='zipButton' onClick={this.downloadZip}>hent</button>\r\n                <p></p>\r\n            </div>\r\n        )\r\n        } else if (this.state.complete === true) {\r\n            return(\r\n                <div className='ImpactSection'>\r\n                    <div className='ImpactHeader'>\r\n                        <h1>Besparelser</h1>\r\n                    </div>\r\n                    <div>\r\n                        <a className='emissionUpdate' onClick={this.runEmissions}>Beregn/Opdater</a>\r\n                        <button className='zipButton' onClick={this.downloadZip}>hent</button>\r\n                    </div>\r\n                    <div className='emissionContainer'>\r\n                        <div className='climateEmission'>\r\n                            <p className='emissionTitle'>Klima</p>\r\n                            <p>{Object.entries(this.sumObjects(this.state.emissions.Beton,this.state.emissions.Isolering,this.state.emissions.Metal,this.state.emissions.Fliser,\r\n                                this.state.emissions.Træ,this.state.emissions.Tegl,this.state.emissions.Skifer,this.state.emissions.Tagpap,this.state.emissions.Mursten,\r\n                                this.state.emissions.Gips)).map((item) => <li>{item[0]}: {(item[1]).toFixed(1)}</li>)}</p>\r\n                        </div>\r\n                        <div className='financialEmission'>\r\n                            <p className='emissionTitle'>Financielt</p>\r\n                            <p>{this.removeMissing(this.runPrices(this.props.amount)).map((item) => <li>{item[0]}: {(item[1].toFixed(1))} DKK</li>)}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Impacts","import './Download.css'\r\nimport React from 'react'\r\nimport JSZip from 'jszip'\r\nimport saveAs from 'file-saver'\r\n\r\nconst BetonMatPas = require(\"../../materialepas/beton.json\")\r\nconst GipsMatPas = require(\"../../materialepas/gips.json\")\r\nconst IsoleringMatPas = require(\"../../materialepas/isolering.json\")\r\nconst MetalMatPas = require(\"../../materialepas/metal.json\")\r\nconst MurstenMatPas = require(\"../../materialepas/mursten.json\")\r\nconst PapMatPas = require(\"../../materialepas/pap.json\")\r\nconst SkiferMatPas = require(\"../../materialepas/skifer.json\")\r\nconst StenMatPas = require(\"../../materialepas/sten.json\")\r\nconst TeglMatPas = require(\"../../materialepas/tegl.json\")\r\nconst TræMatPas = require(\"../../materialepas/træ.json\")\r\n\r\n\r\nclass Download extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n\r\n      this.downloadZip = this.downloadZip.bind(this)\r\n      this.removeMissing = this.removeMissing.bind(this)\r\n\r\n      }    \r\n\r\n      removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n    \r\n      downloadZip() {\r\n        const BygPas = {Bygningsdele: [{Væg: this.props.materials.wall},\r\n            {Tag: this.props.materials.roof},\r\n            {Gulv: this.props.materials.floor},\r\n            {Fundament: this.props.materials.foundation},\r\n            {Indervæg: this.props.materials.inwall}],\r\n            Mængder: this.props.amount}\r\n\r\n        var zip = new JSZip();\r\n\r\n        for (var x of this.removeMissing(this.props.amount)) {\r\n            zip.file(`${x[0]}.json`, JSON.stringify(eval(`${x[0]}`+'MatPas'), null, 2))\r\n        }\r\n\r\n        zip.file('Bygningspas.json', JSON.stringify(BygPas, null, 2))\r\n\r\n        zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n            // see FileSaver.js\r\n            saveAs(content, \"Bygningspas.zip\");\r\n        });\r\n    }\r\n\r\n    \r\n    render() {\r\n      return (\r\n        <a className='buttonDownload' onClick={this.downloadZip}>Download</a>\r\n        )\r\n    }\r\n  }\r\n\r\n  export default Download","import './DownloadSimple.css'\r\nimport React from 'react'\r\nimport JSZip from 'jszip'\r\nimport saveAs from 'file-saver'\r\n\r\nconst BetonMatPas = require(\"../../materialepas/beton.json\")\r\nconst GipsMatPas = require(\"../../materialepas/gips.json\")\r\nconst IsoleringMatPas = require(\"../../materialepas/isolering.json\")\r\nconst MetalMatPas = require(\"../../materialepas/metal.json\")\r\nconst MurstenMatPas = require(\"../../materialepas/mursten.json\")\r\nconst PapMatPas = require(\"../../materialepas/pap.json\")\r\nconst SkiferMatPas = require(\"../../materialepas/skifer.json\")\r\nconst StenMatPas = require(\"../../materialepas/sten.json\")\r\nconst TeglMatPas = require(\"../../materialepas/tegl.json\")\r\nconst TræMatPas = require(\"../../materialepas/træ.json\")\r\n\r\n\r\nclass Download extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n\r\n      this.downloadZip = this.downloadZip.bind(this)\r\n      this.removeMissing = this.removeMissing.bind(this)\r\n\r\n      }    \r\n\r\n      removeMissing(array) {\r\n        const newArray = []\r\n        for (var x of array) {\r\n            if (x[1] !== 0) {\r\n                newArray.push(x)\r\n            }\r\n        } return newArray\r\n    }\r\n    \r\n      downloadZip() {\r\n        const BygPas = {Bygningsdele: [{Væg: this.props.materials.wallS},\r\n            {Tag: this.props.materials.roofS},\r\n            {Gulv: this.props.materials.floorS},\r\n            {Fundament: this.props.materials.foundationS},\r\n            {Indervæg: this.props.materials.inwallS}],\r\n            Mængder: [this.props.amount]}\r\n\r\n        var zip = new JSZip();\r\n\r\n        for (var x of this.removeMissing(this.props.amount)) {\r\n            zip.file(`${x[0]}.json`, JSON.stringify(eval(`${x[0]}`+'MatPas'), null, 2))\r\n        }\r\n\r\n        zip.file('Bygningspas.json', JSON.stringify(BygPas, null, 2))\r\n\r\n        zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n            // see FileSaver.js\r\n            saveAs(content, \"Bygningspas.zip\");\r\n        });\r\n    }\r\n\r\n    \r\n    render() {\r\n      return (\r\n        <a className='buttonDownloadS' onClick={this.downloadZip}>Download</a>\r\n        )\r\n    }\r\n  }\r\n\r\n  export default Download"],"sourceRoot":""}