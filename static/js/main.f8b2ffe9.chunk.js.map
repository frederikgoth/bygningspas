{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","components/App/App.js","index.js","registerServiceWorker.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","App","console","log","ReactDOM","render","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error"],"mappings":"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","file":"static/js/main.f8b2ffe9.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\nclass Business extends React.Component {\n  render() {\n    return (\n      <div className=\"Business\">\n        <div className=\"image-container\">\n          <img src={this.props.business.imageSrc} alt=''/>\n        </div>\n        <h2>{this.props.business.name}</h2>\n        <div className=\"Business-information\">\n          <div className=\"Business-address\">\n            <p>{this.props.business.address}</p>\n            <p>{this.props.business.city}</p>\n            <p>{`${this.props.business.state} ${this.props.business.zipCode}`}</p>\n          </div>\n          <div className=\"Business-reviews\">\n            <h3>{this.props.business.category.toUpperCase()}</h3>\n            <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\n            <p>{`${this.props.business.reviewCount} reviews`}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Business;","import React from 'react';\nimport './BusinessList.css';\n\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n  render() {\n    return (\n      <div className=\"BusinessList\">\n        {\n          this.props.businesses.map(business => {\n            return <Business business={business} />\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default BusinessList;","import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    \n\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count'\n    };\n  }\n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';\n    }\n    return '';\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({sortBy: sortByOption});\n  }\n\n  handleTermChange(event) {\n    this.setState({term: event.target.value});\n  }\n\n  handleLocationChange(event) {\n    this.setState({location: event.target.value});\n  }\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n\n    event.preventDefault();\n  }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return (<li className={this.getSortByClass(sortByOptionValue)}\n                  key={sortByOptionValue}\n                  onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n                {sortByOption}\n             </li>);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input placeholder=\"Vejnavn\" onChange={this.handleTermChange} />\n          <input placeholder=\"Nummer\" onChange={this.handleLocationChange}/>\n          <input placeholder=\"Postnummer\" onChange={this.handleLocationChange}/>\n        </div>\n        <div className=\"SearchBar-submit\">\n          <a onClick={this.handleSearch}>SÃ¸g</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;","import React from 'react';\nimport './App.css';\n\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\n\nconst business = {\n  imageSrc: 'https://plantationhomes.com.au/cms_uploads/images/15861_six-stages-of-building-a-home.jpg',\n  name: 'MarginOtto Pizzeria',\n  address: '1010 Paddington Way',\n  city: 'Bordertown',\n  state: 'NY',\n  zipCode: '10101',\n  category: 'Italian',\n  rating: 4.5,\n  reviewCount: 90\n};\n\nconst businesses = [\n  business\n];\n\nclass App extends React.Component {\n  searchYelp(term, location, sortBy) {\n    console.log(`Searching Yelp with ${term}, ${location}, ${sortBy}`);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Bygningspas</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}